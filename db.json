{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/header.png","path":"images/header.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1548503139647},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1548503139647},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1548503139648},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1548503139653},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1548503139653},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1548503139654},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1548503139654},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1548503139654},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1548503139655},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1548503139655},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1548503139657},{"_id":"themes/next/_config.yml","hash":"6f8c948aac38b80e6f08e9c2fe4b578259ce1873","modified":1548758717987},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1548503139656},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1548503139658},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1548503139659},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1548503139764},{"_id":"source/_posts/New Router.md","hash":"a482fb0873806933790e002e7226222ea63c8f67","modified":1548678785442},{"_id":"source/_posts/index.md","hash":"41bfeb8a4e3df99b1d8e784313e2f2268aa9911a","modified":1548588617005},{"_id":"source/_posts/px2rem.md","hash":"35893a7dbe3d60630faa4a801dbf1094313ecdcc","modified":1548499944692},{"_id":"source/_posts/sass.md","hash":"10b66087d36ef8787a5ee810c16f0a1890753558","modified":1548483088195},{"_id":"source/_posts/transition.md","hash":"755db058160fa717283c402dc0a8b6951ee04b93","modified":1548567666535},{"_id":"source/_posts/vue block.md","hash":"8317d25fef148e2a831a1228f7f75f03612aadad","modified":1548679588506},{"_id":"source/_posts/vue extend.md","hash":"d97c5d7a23bf77a378190a8d0842eb845a2f9e59","modified":1548732610135},{"_id":"source/_posts/vue slot-scope.md","hash":"a680518e800664b4fd91705f62353ab1d9d65e80","modified":1548485917138},{"_id":"source/_posts/vue-dom.md","hash":"348696cbe528319eb604b47dd41a46edea243733","modified":1548567660239},{"_id":"source/_posts/vue.md","hash":"d6abec9fb4cf3711865633d799f3b85e331bee30","modified":1548500069543},{"_id":"source/_posts/vuex.md","hash":"ff8ce514cb8c7ad962b6c1897095cf28c0e0fac3","modified":1548849019114},{"_id":"source/about/index.md","hash":"ecd1a6e7d35c5dd3ad21ae4f4704f3821359d49b","modified":1548567955905},{"_id":"source/categories/index.md","hash":"af1d537ae9a24f6f5de80f17347318774c3adfe4","modified":1548503843148},{"_id":"source/tags/index.md","hash":"383e66fa73153610af29dfb6ee4b59e106c9ec62","modified":1548503825070},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1548503139650},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1548503139650},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1548503139651},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1548503139652},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1548503139661},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1548503139662},{"_id":"themes/next/languages/default.yml","hash":"1c95eebc227b67c6bcb49bcf327a4f61ace2bfae","modified":1548568777591},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1548503139663},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1548503139663},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1548503139664},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1548503139665},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1548503139666},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1548503139666},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1548503139667},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1548503139668},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1548503139669},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1548503139669},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1548503139670},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1548503139672},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1548503139672},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1548503139675},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1548503139760},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1548503139761},{"_id":"themes/next/layout/index.swig","hash":"d5e103b115dc3730a0be9fd18f1d269e23445865","modified":1548728255868},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1548503139762},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1548503139762},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1548503139763},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1548503139764},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1548503139766},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1548503139767},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1548503139968},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1548503139969},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1548503139970},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139856},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1548503139673},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1548503139674},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1548503139676},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"fa321468398ec59ed3e14d03e491acbfc50b4803","modified":1548680144845},{"_id":"themes/next/layout/_macro/post.swig","hash":"510120481258abfff33a2d77b809378229b0313e","modified":1548679888297},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1548503139716},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1548503139717},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1548503139717},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1abe9d288c1010556a3ccf8507c47edcca32eb9d","modified":1548759139400},{"_id":"themes/next/layout/_partials/footer.swig","hash":"f066e2c05b5f2200402ed490b92ecae7f79d60c5","modified":1548552673503},{"_id":"themes/next/layout/_partials/head.swig","hash":"1bc2dc897b334c3350cea71e0c37cf97ae112d7b","modified":1548850276947},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1548503139721},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1548503139722},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1548503139722},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1548503139723},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1548503139729},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1548503139730},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1548503139734},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1548503139750},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1548503139750},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1548503139751},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1548503139751},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1548503139752},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1548503139752},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1548503139753},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1548503139769},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1548503139769},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1548503139770},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1548503139771},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1548503139772},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1548503139772},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1548503139773},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1548503139773},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1548503139774},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1548503139855},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1548503139857},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1548503139857},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1548503139858},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1548503139859},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1548503139861},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1548503139862},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1548503139862},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1548503139863},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1548503139863},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1548503139864},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1548503139864},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1548503139865},{"_id":"themes/next/source/images/header.png","hash":"407b9c0a2d87290171c9357b625ca8ba9e24fccc","modified":1548586135993},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548503139865},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1548503139866},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548503139866},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1548503139867},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1548503139867},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1548503139868},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139732},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139732},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139833},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139832},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139835},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139853},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548503139854},{"_id":"themes/next/layout/_partials/comments/livere.ejs","hash":"415c922ef5ab108a283aa79f80da965d855090a2","modified":1548758987803},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1548503139720},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"ff7b230fd8184dbcc7e55a65e831353e6944bed2","modified":1548741064253},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1548503139724},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1548503139724},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1548503139725},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1548503139726},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1548503139727},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1548503139727},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1548503139728},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1548503139732},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1548503139731},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1548503139733},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1548503139744},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1548503139745},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1548503139745},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1548503139746},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1548503139747},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1548503139748},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1548503139747},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4aa36a48d25aaa92325eabde8892935b931d655f","modified":1548741042385},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1548503139749},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1548503139735},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1548503139736},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1548503139737},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1548503139737},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1548503139738},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1548503139738},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1548503139739},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1548503139739},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1548503139740},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1548503139741},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1548503139742},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1548503139742},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1548503139743},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1548503139756},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1548503139757},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1548503139758},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1548503139759},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"5c5686b1abf65d198a663493f71480b9d690711c","modified":1548552015264},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1548503139832},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1548503139834},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1548503139834},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1548503139852},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1548503139852},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1548503139853},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1548503139854},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1548503139869},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1548503139869},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1548503139870},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1548503139870},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1548503139871},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1548503139872},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1548503139872},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1548503139873},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1548503139874},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1548503139875},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1548503139876},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1548503139890},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1548503139886},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1548503139891},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1548503139893},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1548503139894},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1548503139904},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1548503139905},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1548503139905},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1548503139906},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1548503139930},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1548503139909},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1548503139910},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1548503139911},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1548503139911},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1548503139912},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1548503139932},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1548503139932},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1548503139933},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1548503139933},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1548503139934},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1548503139934},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1548503139936},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1548503139936},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1548503139937},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1548503139938},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1548503139938},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1548503139939},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1548503139940},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1548503139940},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1548503139941},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1548503139941},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1548503139943},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1548503139944},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1548503139945},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1548503139946},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1548503139946},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1548503139947},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1548503139947},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1548503139948},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1548503139949},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1548503139950},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1548503139960},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1548503139961},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1548503139965},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1548503139966},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1548503139967},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1548503139931},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1548503139754},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1548503139755},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1548503139777},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1548503139777},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1548503139778},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1548503139779},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1548503139780},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1548503139792},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1548503139811},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1548503139824},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1548503139826},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1548503139827},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1548503139829},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1548503139828},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1548503139829},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1548503139830},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1548503139836},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1548503139837},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1548503139837},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1548503139839},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1548503139838},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1548503139839},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1548503139839},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1548503139840},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1548503139843},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1548503139844},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1548503139844},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1548503139845},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1548503139846},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1548503139848},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1548503139849},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1548503139849},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1548503139850},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1548503139850},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1548503139851},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1548503139874},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1548503139883},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1548503139885},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1548503139886},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548503139895},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548503139895},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548503139896},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548503139897},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548503139897},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548503139898},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1548503139902},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1548503139903},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1548503139904},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1548503139907},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1548503139908},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1548503139914},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1548503139913},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1548503139915},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1548503139958},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1548503139959},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1548503139884},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1548503139928},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1548503139929},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1548503139964},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1548503139782},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1548503139783},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1548503139784},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1548503139785},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1548503139781},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1548503139783},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1548503139786},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1548503139787},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1548503139786},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1548503139788},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1548503139789},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1548503139789},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1548503139790},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1548503139791},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1548503139794},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1548503139794},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1548503139795},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1548503139796},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1548503139797},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1548503139797},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1548503139798},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1548503139799},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1548503139800},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1548503139800},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1548503139801},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1548503139802},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1548503139802},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1548503139803},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1548503139803},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1548503139804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e4f05358d3de51f845c08fe39febe40a2aed3a5a","modified":1548585866494},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1548503139805},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1548503139806},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1548503139807},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1548503139807},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1548503139808},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1548503139808},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1548503139809},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1548503139810},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1548503139812},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1548503139812},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1548503139813},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1548503139813},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1548503139814},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1548503139814},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1548503139815},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1548503139816},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1548503139816},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1548503139817},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1548503139818},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1548503139818},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1548503139819},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1548503139820},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1548503139821},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1548503139821},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1548503139822},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1548503139823},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1548503139823},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1548503139841},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1548503139842},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1548503139847},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1548503139879},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1548503139879},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1548503139881},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1548503139880},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1548503139882},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1548503139899},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548503139899},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1548503139900},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1548503139901},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1548503139902},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1548503139900},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1548503139918},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1548503139920},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1548503139927},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1548503139889},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1548503139956},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1548503139924},{"_id":"public/baidusitemap.xml","hash":"3595b616670fe5c9967a28631de6f66a9ce4c1f3","modified":1548850288681},{"_id":"public/sitemap.xml","hash":"8afa7c44eab00b47665f6f06f4ea0a9f6deb910d","modified":1548850288681},{"_id":"public/search.xml","hash":"51d3742d2947a09f3bcd3b7b30f5483cc8069216","modified":1548850288703},{"_id":"public/tags/index.html","hash":"27b774e00432bf9b54291979b1b98e5cee98be2a","modified":1548850288709},{"_id":"public/about/index.html","hash":"321385baae614c58129ff4482b6cbf2b16aedba0","modified":1548850288709},{"_id":"public/categories/index.html","hash":"c0f4c42f9b5084c32812148aab3a62463ba817f5","modified":1548850288709},{"_id":"public/2019/01/30/vuex/index.html","hash":"6cb5878524ff94558a88200496f821dca899b016","modified":1548850288709},{"_id":"public/2019/01/28/vue extend/index.html","hash":"3c2c865f200f851e53c923e4e9d7b66a93f9a8bd","modified":1548850288709},{"_id":"public/2019/01/28/New Router/index.html","hash":"fbff4eb6de302df0f94d13873408d71d78ae00eb","modified":1548850288709},{"_id":"public/2019/01/27/transition/index.html","hash":"64050bfcbcbccf03f588995efd31a646d2153c2a","modified":1548850288709},{"_id":"public/2019/01/28/vue block/index.html","hash":"d709b8947a58cf49f627b941be53284b28aa7643","modified":1548850288709},{"_id":"public/2019/01/27/vue-dom/index.html","hash":"258183b55a6dc68663f30742cc7755cc0a490b53","modified":1548850288709},{"_id":"public/2019/01/25/index/index.html","hash":"0e82d69144ef7521ae82cda6c100c9deeacae881","modified":1548850288709},{"_id":"public/2019/01/25/px2rem/index.html","hash":"ba2b2c244ae25ba79170930e4a3a06698f27332f","modified":1548850288709},{"_id":"public/2018/08/04/sass/index.html","hash":"7bd04a1e16db5a5f69e9d6e3e60b23a97f3c8a27","modified":1548850288710},{"_id":"public/2019/01/25/vue/index.html","hash":"053441d8e1ce730d5a1f26521145432be35fd1b2","modified":1548850288710},{"_id":"public/2018/08/04/vue slot-scope/index.html","hash":"b39ff4d822f4e5678402b392c1b6780733b4600e","modified":1548850288710},{"_id":"public/archives/index.html","hash":"cc457a29f61ef5e0cd42ce0200a48b561e6e9f43","modified":1548850288710},{"_id":"public/archives/page/2/index.html","hash":"0159c29b72ec86bc3d2775b938063f2651b538f2","modified":1548850288710},{"_id":"public/archives/2018/index.html","hash":"98f08466c52d2b30142957f034376e0aa06e81a7","modified":1548850288710},{"_id":"public/archives/2018/08/index.html","hash":"ec55d9407fac67fd62cf3a436a7fd9691c738c74","modified":1548850288710},{"_id":"public/archives/2019/index.html","hash":"0b3ac50b216cd321171bd4920ea6a64faabb492a","modified":1548850288710},{"_id":"public/archives/2019/01/index.html","hash":"723fe1d684ae9ab5672c1e809fcc4831f8ddbe92","modified":1548850288710},{"_id":"public/index.html","hash":"93f6c6844f6fc484c1f24943365ed947c60ed52c","modified":1548850288710},{"_id":"public/page/2/index.html","hash":"5844b7f8b6b73155bbfc2f159abdae914d27dd30","modified":1548850288710},{"_id":"public/tags/css/index.html","hash":"66fb12126bda6b8a6dcad4bf0f5c324b3fa78bfb","modified":1548850288710},{"_id":"public/tags/vue-router/index.html","hash":"052937e0c03df35169dd72944b216363ef430a6e","modified":1548850288710},{"_id":"public/tags/vue/index.html","hash":"e7f5f970af678f3f4088c0088ccec73eb4ec13aa","modified":1548850288710},{"_id":"public/tags/scss/index.html","hash":"08964fe033d28304712490452d065828e712facf","modified":1548850288710},{"_id":"public/tags/sass/index.html","hash":"d807243cea2782d3b958b4fcfa712e814dd5691f","modified":1548850288711},{"_id":"public/tags/vue-cli/index.html","hash":"663374ed03d0461598b57d8d70f66ed890c9e28f","modified":1548850288711},{"_id":"public/tags/js/index.html","hash":"21454042b22c3b1542b9cf6ba1c6e83d95dffd47","modified":1548850288711},{"_id":"public/tags/transfrom/index.html","hash":"caf7e2b1d10f5af0ef441ad60e1b22eb6509c23b","modified":1548850288711},{"_id":"public/tags/px2rem/index.html","hash":"7c6ad0b3fd6907d9e7fdf5ce961be72835689ad1","modified":1548850288711},{"_id":"public/tags/vue构造器/index.html","hash":"463d3e87b25412d6d3b2ab1c51b66284e12022b9","modified":1548850288711},{"_id":"public/tags/vue-extend/index.html","hash":"43bd6dbc354986a844e94062ee6d458a6b6ca56b","modified":1548850288711},{"_id":"public/tags/vue全局组件/index.html","hash":"2e9bf476b351791649826843b3edec51560ee8be","modified":1548850288711},{"_id":"public/tags/vue指令/index.html","hash":"fa30729c832b436a55f07104445bddfb2edf9f5e","modified":1548850288711},{"_id":"public/tags/vue过滤器/index.html","hash":"7f0e431f71b861a3630f5ab3448fd725bcc9a3dd","modified":1548850288711},{"_id":"public/tags/dom/index.html","hash":"43b822913e3c2138efcd0eb9f5341da5616d9134","modified":1548850288711},{"_id":"public/tags/directive/index.html","hash":"316fb42c32bf5d61088e2046cf6699ad1dfa3d80","modified":1548850288711},{"_id":"public/tags/slot/index.html","hash":"38b5a127421eca5d29b5741673b2ece960af4ad3","modified":1548850288711},{"_id":"public/tags/vuex/index.html","hash":"931f84937e42434eed2cb5e50e84ab438aab339b","modified":1548850288711},{"_id":"public/tags/vue概述/index.html","hash":"f3587f703f590dec388bd599c083e031be9c1e0a","modified":1548850288712},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1548850288712},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1548850288712},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1548850288712},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1548850288712},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1548850288712},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1548850288712},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1548850288712},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1548850288712},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1548850288712},{"_id":"public/images/header.png","hash":"407b9c0a2d87290171c9357b625ca8ba9e24fccc","modified":1548850288712},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1548850288712},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1548850288712},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1548850288712},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548850288712},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1548850288712},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548850288712},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1548850288712},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1548850288712},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1548850288712},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1548850288713},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1548850288713},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548850289184},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548850289191},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548850289191},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548850289192},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548850289192},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548850289192},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1548850289192},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1548850289192},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1548850289192},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1548850289192},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1548850289192},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1548850289192},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548850289192},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1548850289202},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1548850289202},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1548850289210},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1548850289210},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1548850289210},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1548850289210},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1548850289210},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1548850289210},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1548850289210},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1548850289211},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1548850289211},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1548850289211},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1548850289211},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1548850289211},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1548850289211},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1548850289211},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1548850289211},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1548850289211},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1548850289211},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1548850289211},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1548850289212},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1548850289212},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1548850289212},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1548850289212},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1548850289212},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1548850289212},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1548850289212},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1548850289212},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1548850289212},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1548850289212},{"_id":"public/css/main.css","hash":"fc968465e42a5263ad488e07f85c7e760b390b01","modified":1548850289212},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1548850289212},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1548850289212},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1548850289212},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1548850289212},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1548850289212},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1548850289212},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1548850289212},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1548850289212},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1548850289212},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1548850289213},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1548850289221},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1548850289221},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1548850289221},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1548850289221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1548850289221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1548850289221},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1548850289222},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1548850289222},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1548850289222},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1548850289222},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1548850289222},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1548850289222},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1548850289222},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1548850289222},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1548850289222},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1548850289222},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1548850289223},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1548850289223},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1548850289223},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1548850289223},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1548850289223},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1548850289223},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1548850289224},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1548850289224},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1548850289261}],"Category":[],"Data":[],"Page":[{"date":"2017-07-10T08:36:26.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ndate: 2017-07-10 16:36:26\ntype: \"tags\"\ncomments: false\n---","updated":"2019-01-26T11:57:05.070Z","path":"tags/index.html","title":"","layout":"page","_id":"cjrj5gxak00015owdygf6u03r","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于我","type":"about","date":"2019-01-25T08:36:42.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"----------\n## 生活总是需要加油\n\n## 世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\n\n## 当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\n\n## 对自己的不满是任何真正有才能的人的基本特征之一。\n\n## 不要害怕遇到风险。只有冒险，我们才能学会勇敢。\n\n## 只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\n\n## 有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\n\n## 只有全力以赴，才能发挥最大的潜能。\n\n## 生活必须有一个计划，这样你的生活将永远不会偏离。\n\n## 要想成为一个世界上的奇迹，你必须在世界上走上几千英里。","source":"about/index.md","raw":"---\ntitle: 关于我\ntype: \"about\"\ndate: ' 1/25/2019 4:36:42 PM '\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n----------\n## 生活总是需要加油\n\n## 世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\n\n## 当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\n\n## 对自己的不满是任何真正有才能的人的基本特征之一。\n\n## 不要害怕遇到风险。只有冒险，我们才能学会勇敢。\n\n## 只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\n\n## 有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\n\n## 只有全力以赴，才能发挥最大的潜能。\n\n## 生活必须有一个计划，这样你的生活将永远不会偏离。\n\n## 要想成为一个世界上的奇迹，你必须在世界上走上几千英里。","updated":"2019-01-27T05:45:55.905Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjrj5gxan00035owdisyqt3vc","content":"<hr>\n<h2 id=\"生活总是需要加油\"><a href=\"#生活总是需要加油\" class=\"headerlink\" title=\"生活总是需要加油\"></a>生活总是需要加油</h2><h2 id=\"世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\"><a href=\"#世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\" class=\"headerlink\" title=\"世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\"></a>世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。</h2><h2 id=\"当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\"><a href=\"#当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\" class=\"headerlink\" title=\"当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\"></a>当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。</h2><h2 id=\"对自己的不满是任何真正有才能的人的基本特征之一。\"><a href=\"#对自己的不满是任何真正有才能的人的基本特征之一。\" class=\"headerlink\" title=\"对自己的不满是任何真正有才能的人的基本特征之一。\"></a>对自己的不满是任何真正有才能的人的基本特征之一。</h2><h2 id=\"不要害怕遇到风险。只有冒险，我们才能学会勇敢。\"><a href=\"#不要害怕遇到风险。只有冒险，我们才能学会勇敢。\" class=\"headerlink\" title=\"不要害怕遇到风险。只有冒险，我们才能学会勇敢。\"></a>不要害怕遇到风险。只有冒险，我们才能学会勇敢。</h2><h2 id=\"只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\"><a href=\"#只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\" class=\"headerlink\" title=\"只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\"></a>只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。</h2><h2 id=\"有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\"><a href=\"#有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\" class=\"headerlink\" title=\"有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\"></a>有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。</h2><h2 id=\"只有全力以赴，才能发挥最大的潜能。\"><a href=\"#只有全力以赴，才能发挥最大的潜能。\" class=\"headerlink\" title=\"只有全力以赴，才能发挥最大的潜能。\"></a>只有全力以赴，才能发挥最大的潜能。</h2><h2 id=\"生活必须有一个计划，这样你的生活将永远不会偏离。\"><a href=\"#生活必须有一个计划，这样你的生活将永远不会偏离。\" class=\"headerlink\" title=\"生活必须有一个计划，这样你的生活将永远不会偏离。\"></a>生活必须有一个计划，这样你的生活将永远不会偏离。</h2><h2 id=\"要想成为一个世界上的奇迹，你必须在世界上走上几千英里。\"><a href=\"#要想成为一个世界上的奇迹，你必须在世界上走上几千英里。\" class=\"headerlink\" title=\"要想成为一个世界上的奇迹，你必须在世界上走上几千英里。\"></a>要想成为一个世界上的奇迹，你必须在世界上走上几千英里。</h2>","site":{"data":{}},"excerpt":"","more":"<hr>\n<h2 id=\"生活总是需要加油\"><a href=\"#生活总是需要加油\" class=\"headerlink\" title=\"生活总是需要加油\"></a>生活总是需要加油</h2><h2 id=\"世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\"><a href=\"#世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\" class=\"headerlink\" title=\"世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。\"></a>世界上有一群逆境中的人，他们充满自信，自强不息，努力进步，最终取得辉煌的成就。</h2><h2 id=\"当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\"><a href=\"#当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\" class=\"headerlink\" title=\"当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。\"></a>当一个人不再珍贵时，过去那种朋友聚集在一起，车水马龙的繁华景象突然消失，门前变得又冷又冷。</h2><h2 id=\"对自己的不满是任何真正有才能的人的基本特征之一。\"><a href=\"#对自己的不满是任何真正有才能的人的基本特征之一。\" class=\"headerlink\" title=\"对自己的不满是任何真正有才能的人的基本特征之一。\"></a>对自己的不满是任何真正有才能的人的基本特征之一。</h2><h2 id=\"不要害怕遇到风险。只有冒险，我们才能学会勇敢。\"><a href=\"#不要害怕遇到风险。只有冒险，我们才能学会勇敢。\" class=\"headerlink\" title=\"不要害怕遇到风险。只有冒险，我们才能学会勇敢。\"></a>不要害怕遇到风险。只有冒险，我们才能学会勇敢。</h2><h2 id=\"只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\"><a href=\"#只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\" class=\"headerlink\" title=\"只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。\"></a>只有出汗，我们才能享受财富；只有拒绝付出，我们才能变穷。</h2><h2 id=\"有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\"><a href=\"#有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\" class=\"headerlink\" title=\"有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。\"></a>有了自信和意志力，一个人有能力挑战自己，并且能够在世界上做任何他能做的事。人生最大的挑战是挑战自己，因为其他的敌人很容易克服，而自己最难克服。</h2><h2 id=\"只有全力以赴，才能发挥最大的潜能。\"><a href=\"#只有全力以赴，才能发挥最大的潜能。\" class=\"headerlink\" title=\"只有全力以赴，才能发挥最大的潜能。\"></a>只有全力以赴，才能发挥最大的潜能。</h2><h2 id=\"生活必须有一个计划，这样你的生活将永远不会偏离。\"><a href=\"#生活必须有一个计划，这样你的生活将永远不会偏离。\" class=\"headerlink\" title=\"生活必须有一个计划，这样你的生活将永远不会偏离。\"></a>生活必须有一个计划，这样你的生活将永远不会偏离。</h2><h2 id=\"要想成为一个世界上的奇迹，你必须在世界上走上几千英里。\"><a href=\"#要想成为一个世界上的奇迹，你必须在世界上走上几千英里。\" class=\"headerlink\" title=\"要想成为一个世界上的奇迹，你必须在世界上走上几千英里。\"></a>要想成为一个世界上的奇迹，你必须在世界上走上几千英里。</h2>"},{"date":"2018-03-11T08:17:14.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ndate: 2018-03-11 16:17:14\ntype: \"categories\"\ncomments: false\n---","updated":"2019-01-26T11:57:23.148Z","path":"categories/index.html","title":"","layout":"page","_id":"cjrj5gxau00065owdo51pequ3","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"vue-router路由","date":"2019-01-28T12:31:06.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"# 路由\n\n## 路由传参(query,params)\n\n#### 在单页面应用中路由的传递方式常用的两种方法、(query,params)\n\n> ### query\n\n#### 包含在路径后面以？作为分割符，多参数直接使用&分割开发，名字和值使用=分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\n\n> ### params\n\n#### 包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值(/detail/:id) (/detail/11213),可以出现在路径中的任何位置\n\n> ### 如何获取($router)\n\n#### 在vue中路由参数通过，$route获取，$route.params获取params传递的参数，$route.query获取query传递的参数，而$route就是代表的是当前页面的路由信息对象\n\n###而$router是获取的是路由实例，$route只是$router中一个参数的指针而已（）\n\n## 常识：\n\n- **1.router-link组件是用来跳转路由的，to属性是将要跳转的路由页地址。**\n\n- **2.router-view组件是用来展示组件页的。**","source":"_posts/New Router.md","raw":"---\ntitle: vue-router路由\ndate: '1/28/2019 8:31:06 PM  '\ntag: ['vue-router', 'vue']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n# 路由\n\n## 路由传参(query,params)\n\n#### 在单页面应用中路由的传递方式常用的两种方法、(query,params)\n\n> ### query\n\n#### 包含在路径后面以？作为分割符，多参数直接使用&分割开发，名字和值使用=分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\n\n> ### params\n\n#### 包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值(/detail/:id) (/detail/11213),可以出现在路径中的任何位置\n\n> ### 如何获取($router)\n\n#### 在vue中路由参数通过，$route获取，$route.params获取params传递的参数，$route.query获取query传递的参数，而$route就是代表的是当前页面的路由信息对象\n\n###而$router是获取的是路由实例，$route只是$router中一个参数的指针而已（）\n\n## 常识：\n\n- **1.router-link组件是用来跳转路由的，to属性是将要跳转的路由页地址。**\n\n- **2.router-view组件是用来展示组件页的。**","slug":"New Router","published":1,"updated":"2019-01-28T12:33:05.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxag00005owdlyniah1d","content":"<h1 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h1><h2 id=\"路由传参-query-params\"><a href=\"#路由传参-query-params\" class=\"headerlink\" title=\"路由传参(query,params)\"></a>路由传参(query,params)</h2><h4 id=\"在单页面应用中路由的传递方式常用的两种方法、-query-params\"><a href=\"#在单页面应用中路由的传递方式常用的两种方法、-query-params\" class=\"headerlink\" title=\"在单页面应用中路由的传递方式常用的两种方法、(query,params)\"></a>在单页面应用中路由的传递方式常用的两种方法、(query,params)</h4><blockquote>\n<h3 id=\"query\"><a href=\"#query\" class=\"headerlink\" title=\"query\"></a>query</h3></blockquote>\n<h4 id=\"包含在路径后面以？作为分割符，多参数直接使用-amp-分割开发，名字和值使用-分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\"><a href=\"#包含在路径后面以？作为分割符，多参数直接使用-amp-分割开发，名字和值使用-分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\" class=\"headerlink\" title=\"包含在路径后面以？作为分割符，多参数直接使用&amp;分割开发，名字和值使用=分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\"></a>包含在路径后面以？作为分割符，多参数直接使用&amp;分割开发，名字和值使用=分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载</h4><blockquote>\n<h3 id=\"params\"><a href=\"#params\" class=\"headerlink\" title=\"params\"></a>params</h3></blockquote>\n<h4 id=\"包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值-detail-id-detail-11213-可以出现在路径中的任何位置\"><a href=\"#包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值-detail-id-detail-11213-可以出现在路径中的任何位置\" class=\"headerlink\" title=\"包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值(/detail/:id) (/detail/11213),可以出现在路径中的任何位置\"></a>包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值(/detail/:id) (/detail/11213),可以出现在路径中的任何位置</h4><blockquote>\n<h3 id=\"如何获取-router\"><a href=\"#如何获取-router\" class=\"headerlink\" title=\"如何获取($router)\"></a>如何获取($router)</h3></blockquote>\n<h4 id=\"在vue中路由参数通过，-route获取，-route-params获取params传递的参数，-route-query获取query传递的参数，而-route就是代表的是当前页面的路由信息对象\"><a href=\"#在vue中路由参数通过，-route获取，-route-params获取params传递的参数，-route-query获取query传递的参数，而-route就是代表的是当前页面的路由信息对象\" class=\"headerlink\" title=\"在vue中路由参数通过，$route获取，$route.params获取params传递的参数，$route.query获取query传递的参数，而$route就是代表的是当前页面的路由信息对象\"></a>在vue中路由参数通过，$route获取，$route.params获取params传递的参数，$route.query获取query传递的参数，而$route就是代表的是当前页面的路由信息对象</h4><p>###而$router是获取的是路由实例，$route只是$router中一个参数的指针而已（）</p>\n<h2 id=\"常识：\"><a href=\"#常识：\" class=\"headerlink\" title=\"常识：\"></a>常识：</h2><ul>\n<li><p><strong>1.router-link组件是用来跳转路由的，to属性是将要跳转的路由页地址。</strong></p>\n</li>\n<li><p><strong>2.router-view组件是用来展示组件页的。</strong></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h1><h2 id=\"路由传参-query-params\"><a href=\"#路由传参-query-params\" class=\"headerlink\" title=\"路由传参(query,params)\"></a>路由传参(query,params)</h2><h4 id=\"在单页面应用中路由的传递方式常用的两种方法、-query-params\"><a href=\"#在单页面应用中路由的传递方式常用的两种方法、-query-params\" class=\"headerlink\" title=\"在单页面应用中路由的传递方式常用的两种方法、(query,params)\"></a>在单页面应用中路由的传递方式常用的两种方法、(query,params)</h4><blockquote>\n<h3 id=\"query\"><a href=\"#query\" class=\"headerlink\" title=\"query\"></a>query</h3></blockquote>\n<h4 id=\"包含在路径后面以？作为分割符，多参数直接使用-amp-分割开发，名字和值使用-分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\"><a href=\"#包含在路径后面以？作为分割符，多参数直接使用-amp-分割开发，名字和值使用-分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\" class=\"headerlink\" title=\"包含在路径后面以？作为分割符，多参数直接使用&amp;分割开发，名字和值使用=分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载\"></a>包含在路径后面以？作为分割符，多参数直接使用&amp;分割开发，名字和值使用=分隔，这种方式适合传递不必须的值，传递和不传递都不会影响页面的加载</h4><blockquote>\n<h3 id=\"params\"><a href=\"#params\" class=\"headerlink\" title=\"params\"></a>params</h3></blockquote>\n<h4 id=\"包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值-detail-id-detail-11213-可以出现在路径中的任何位置\"><a href=\"#包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值-detail-id-detail-11213-可以出现在路径中的任何位置\" class=\"headerlink\" title=\"包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值(/detail/:id) (/detail/11213),可以出现在路径中的任何位置\"></a>包含在路由路径之中，这种方式是框架内部的参数传递实现的，这种方式适合传递必须传递的值(/detail/:id) (/detail/11213),可以出现在路径中的任何位置</h4><blockquote>\n<h3 id=\"如何获取-router\"><a href=\"#如何获取-router\" class=\"headerlink\" title=\"如何获取($router)\"></a>如何获取($router)</h3></blockquote>\n<h4 id=\"在vue中路由参数通过，-route获取，-route-params获取params传递的参数，-route-query获取query传递的参数，而-route就是代表的是当前页面的路由信息对象\"><a href=\"#在vue中路由参数通过，-route获取，-route-params获取params传递的参数，-route-query获取query传递的参数，而-route就是代表的是当前页面的路由信息对象\" class=\"headerlink\" title=\"在vue中路由参数通过，$route获取，$route.params获取params传递的参数，$route.query获取query传递的参数，而$route就是代表的是当前页面的路由信息对象\"></a>在vue中路由参数通过，$route获取，$route.params获取params传递的参数，$route.query获取query传递的参数，而$route就是代表的是当前页面的路由信息对象</h4><p>###而$router是获取的是路由实例，$route只是$router中一个参数的指针而已（）</p>\n<h2 id=\"常识：\"><a href=\"#常识：\" class=\"headerlink\" title=\"常识：\"></a>常识：</h2><ul>\n<li><p><strong>1.router-link组件是用来跳转路由的，to属性是将要跳转的路由页地址。</strong></p>\n</li>\n<li><p><strong>2.router-view组件是用来展示组件页的。</strong></p>\n</li>\n</ul>\n"},{"title":"代码整洁之道：程序员的职业素养","date":"2019-01-25T08:36:42.000Z","top":100000,"meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"----------\n# 代码整洁之道：程序员的职业素养\n\n--------\n\n> 我们并非是因为喜欢和其他人在一起工作才选择做程序员的。我们都认为人际关系难以应付而且毫无规律。编程用的机器则整洁，行为也可预见。如果可以一个人待在房间里数个小时沉浸在一些真正有趣的问题上，那将会是最开心的时光。\n\n--------\n\n> **以下全部内容均为本人2019年读书过程中所喜欢或者有感触的片段的摘录，来自于不同的书目，每本书标注了书名，书籍排序仅仅是阅读顺序（倒时间顺序），版权归原作者所有，这里仅作摘录整理。**\n\n# 阿加莎·克里斯蒂的真实人生\n\n--------\n\n> 你无法创作命运，命运会不请自来，就是这么回事。\n  人人都做梦，但他们的梦不一样。\n  那些夜里在脏兮兮的脑袋瓜里做梦的人，\n  白天一觉醒来发现不过是虚幻一场；\n  要小心那些在白天做梦的人，\n  因为他们会睁大眼睛做梦，\n  用行动让梦想变成现实。\n  天真是一种罪过，冷漠是一种爱。律师以为自己操纵着游戏，但不过是他想加害的人手中的玩偶。\n\n--------\n\n# 牧羊少年奇幻之旅\n\n--------\n\n> 不管是牧羊人、海员，还是推销员，总会有一个地方令他们魂牵梦萦，那里会有一个人让他们忘记自由自在周游世界的快乐。\n  当总是面对同样的面孔，像在神学院里那样，就会渐渐让那些人成为生活的一部分。而由于他们是你生活的一部分，当然就想改变你的生活。如果你不像他们所期望的那样，他们就会不高兴。因为，对于该怎样生活，所有人都有固定的观念。但是他们对于自己该怎样生活却一头雾水，就像那个给人解梦、却不会把梦变成现实的老妇人。\n  男孩心想，人总会说一些刁钻古怪的事情。有的时候，最好与羊群为伴，羊群不声不响，只顾吃草和水晶。与书为伴也行，书总是在人们最想听故事的时候，告诉你一些意想不到的事情。但是，当人与人交谈的时候，有些人说的话会让我们无所适从，不知该怎样把谈话继续下去。\n「天命就是你一直期望去做的事情。人一旦步入青年时期，就知道什么是自己的天命了。在人生的这个阶段，一切都那么明朗，没有做不到的事情。人们敢于梦想，期待完成他们一生中喜欢做的一切事情。但是，随着时光的流逝，一股神秘的力量开始企图证明，根本不可能实现天命。」\n实际上，每天都一成不变，是因为人们已经失去了对美好事物的敏锐感觉。\n我和别人没什么两样：总是以理想的眼光看待世界，以为事情会按理想的方式发展，而不会用现实的眼光看待世界，看不到事情真相。\n「因为麦加是支撑我活下去的希望，使我能够忍受平庸的岁月，忍受橱柜里那些不会说话的水晶，忍受那间糟糕透顶的餐厅里的午饭和晚饭。我害怕实现我的梦想，实现之后，我就没有活下去的动力了。」\n「你的梦想是羊群和金字塔。你与我不同，因为你希望实现你的梦想，而我只是想保有去麦加的梦想。我曾无数次地想象过，如何穿过沙漠，到达安放着圣石的广场，在触摸圣石之前，围着它绕行七圈。我曾想象过有些人站在我身旁，有些人站在我前面，还有我们的谈话和共同的祈祷。可是，我担心会大失所望，所以我宁愿只保留一个梦想。」\n「你一度成为我的福音。而今天我明白了一个道理，任何不被接纳的福音，都会变成诅咒。我对生活没有更多的要求。而你正迫使我盯着从未见过的财富和前景。现在，我知道了这些财富和前景，也知道了我完全有可能拥有它们。可是我的感觉却比以前糟糕了。因为我知道我自己可以拥有这一切，却不愿拥有它们。」\n别的事情不好说，但在这件事上，男孩坚信不疑，尽管他的父母以及先辈都说过，必须在恋爱、订婚、相互了解和有了钱之后才可以结婚。说这话的人大概从来不了解宇宙的语言，因为如果掌握了这种语言，很容易就能理解，世上总有人在等待着另外一个人，无论是在大沙漠还是在大城市。当这两个人最终相遇，四目相对的时候，过去的一切和将来的一切全都变得无足轻重了，只有眼前的这一刻最重要。\n因为生活永远是，也仅仅是我们现在经历的这一刻。\n这正是需要爱发挥力量的地方，因为当我们有爱的时候，总是希望自己变得更好。\n\n--------\n\n# 且听风吟\n\n--------\n\n> 说到底，写文章并非自我诊治的手段，充其量不过是自我疗养的一种小小的尝试。\n问题是，直言不讳是件极为困难的事。甚至越是想直言不讳，直率的言语越是遁入黑暗的深处。\n死去的祖母常说「心情抑郁的人只能做抑郁的梦，要是更加抑郁的，连梦都不做的。」\n如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。因为要诞生真正的艺术，奴隶制度是必不可少的。而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩意儿。\n至于半夜三点半在悄无声息的厨房寻找电冰箱里的食品的人，只能写出这等模样的文章。\n而那就是我。\n「我时常想：假如活着不给任何人添麻烦该有多好！你说能做到吗？」\n「怎么说呢，大概因为厌烦了吧。可我也在尽我的努力——就连自己都难以置信。我也在考虑别人，像考虑自己的事一样，也因此挨过警察的揍。但到时候人们终究要各归其位，唯独我无处可归，就像玩『抢椅子』游戏没了椅子。」\n「不过你认真想想看：条件大伙都一样，就像同坐一架出了故障的飞机。诚然，有的运气好些，有的运气差些，有的坚强些有的懦弱些，有的有钱有的没钱。但没有一个家伙怀有超乎常人的自信，大家一个样，拥有什么的家伙生怕一旦失去，一无所有的家伙担心永远一无所有，大家一个样。所以，早些察觉到这一点的人 应该力争使自己多少怀有自信，哪怕装模做样也好，对吧？什么自信之人，那样的人根本没有，有的不过是能够装出自信的人。」\n「把谁都知道的事写成小说，那究竟有何意味可言？」\n我有时说谎。\n最后一次说谎是在去年。\n说谎是非常令人讨厌的勾当。不妨说，说谎与沉默是现代人类中流行的两大罪过。我们实际上经常说谎，也往往沉默不语。\n然而，倘若我们一年四季都喋喋不休，而且喋喋不休的无不真实，那么真实的价值必然荡然无存。\n\n--------\n\n# 超能力侦探事务所\n\n--------\n\n> 和事件无关的人，只要时间够久，或有新的事件发生，就会很快忘记过往的事。\n世界上永远没有「感同身受」这件事，因为没有亲身经历，无法体会到当事人的痛苦。\n\n--------","source":"_posts/index.md","raw":"---\ntitle: 代码整洁之道：程序员的职业素养\ndate: ' 1/25/2019 4:36:42 PM '\ntag: []\ntop: 100000\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n----------\n# 代码整洁之道：程序员的职业素养\n\n--------\n\n> 我们并非是因为喜欢和其他人在一起工作才选择做程序员的。我们都认为人际关系难以应付而且毫无规律。编程用的机器则整洁，行为也可预见。如果可以一个人待在房间里数个小时沉浸在一些真正有趣的问题上，那将会是最开心的时光。\n\n--------\n\n> **以下全部内容均为本人2019年读书过程中所喜欢或者有感触的片段的摘录，来自于不同的书目，每本书标注了书名，书籍排序仅仅是阅读顺序（倒时间顺序），版权归原作者所有，这里仅作摘录整理。**\n\n# 阿加莎·克里斯蒂的真实人生\n\n--------\n\n> 你无法创作命运，命运会不请自来，就是这么回事。\n  人人都做梦，但他们的梦不一样。\n  那些夜里在脏兮兮的脑袋瓜里做梦的人，\n  白天一觉醒来发现不过是虚幻一场；\n  要小心那些在白天做梦的人，\n  因为他们会睁大眼睛做梦，\n  用行动让梦想变成现实。\n  天真是一种罪过，冷漠是一种爱。律师以为自己操纵着游戏，但不过是他想加害的人手中的玩偶。\n\n--------\n\n# 牧羊少年奇幻之旅\n\n--------\n\n> 不管是牧羊人、海员，还是推销员，总会有一个地方令他们魂牵梦萦，那里会有一个人让他们忘记自由自在周游世界的快乐。\n  当总是面对同样的面孔，像在神学院里那样，就会渐渐让那些人成为生活的一部分。而由于他们是你生活的一部分，当然就想改变你的生活。如果你不像他们所期望的那样，他们就会不高兴。因为，对于该怎样生活，所有人都有固定的观念。但是他们对于自己该怎样生活却一头雾水，就像那个给人解梦、却不会把梦变成现实的老妇人。\n  男孩心想，人总会说一些刁钻古怪的事情。有的时候，最好与羊群为伴，羊群不声不响，只顾吃草和水晶。与书为伴也行，书总是在人们最想听故事的时候，告诉你一些意想不到的事情。但是，当人与人交谈的时候，有些人说的话会让我们无所适从，不知该怎样把谈话继续下去。\n「天命就是你一直期望去做的事情。人一旦步入青年时期，就知道什么是自己的天命了。在人生的这个阶段，一切都那么明朗，没有做不到的事情。人们敢于梦想，期待完成他们一生中喜欢做的一切事情。但是，随着时光的流逝，一股神秘的力量开始企图证明，根本不可能实现天命。」\n实际上，每天都一成不变，是因为人们已经失去了对美好事物的敏锐感觉。\n我和别人没什么两样：总是以理想的眼光看待世界，以为事情会按理想的方式发展，而不会用现实的眼光看待世界，看不到事情真相。\n「因为麦加是支撑我活下去的希望，使我能够忍受平庸的岁月，忍受橱柜里那些不会说话的水晶，忍受那间糟糕透顶的餐厅里的午饭和晚饭。我害怕实现我的梦想，实现之后，我就没有活下去的动力了。」\n「你的梦想是羊群和金字塔。你与我不同，因为你希望实现你的梦想，而我只是想保有去麦加的梦想。我曾无数次地想象过，如何穿过沙漠，到达安放着圣石的广场，在触摸圣石之前，围着它绕行七圈。我曾想象过有些人站在我身旁，有些人站在我前面，还有我们的谈话和共同的祈祷。可是，我担心会大失所望，所以我宁愿只保留一个梦想。」\n「你一度成为我的福音。而今天我明白了一个道理，任何不被接纳的福音，都会变成诅咒。我对生活没有更多的要求。而你正迫使我盯着从未见过的财富和前景。现在，我知道了这些财富和前景，也知道了我完全有可能拥有它们。可是我的感觉却比以前糟糕了。因为我知道我自己可以拥有这一切，却不愿拥有它们。」\n别的事情不好说，但在这件事上，男孩坚信不疑，尽管他的父母以及先辈都说过，必须在恋爱、订婚、相互了解和有了钱之后才可以结婚。说这话的人大概从来不了解宇宙的语言，因为如果掌握了这种语言，很容易就能理解，世上总有人在等待着另外一个人，无论是在大沙漠还是在大城市。当这两个人最终相遇，四目相对的时候，过去的一切和将来的一切全都变得无足轻重了，只有眼前的这一刻最重要。\n因为生活永远是，也仅仅是我们现在经历的这一刻。\n这正是需要爱发挥力量的地方，因为当我们有爱的时候，总是希望自己变得更好。\n\n--------\n\n# 且听风吟\n\n--------\n\n> 说到底，写文章并非自我诊治的手段，充其量不过是自我疗养的一种小小的尝试。\n问题是，直言不讳是件极为困难的事。甚至越是想直言不讳，直率的言语越是遁入黑暗的深处。\n死去的祖母常说「心情抑郁的人只能做抑郁的梦，要是更加抑郁的，连梦都不做的。」\n如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。因为要诞生真正的艺术，奴隶制度是必不可少的。而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩意儿。\n至于半夜三点半在悄无声息的厨房寻找电冰箱里的食品的人，只能写出这等模样的文章。\n而那就是我。\n「我时常想：假如活着不给任何人添麻烦该有多好！你说能做到吗？」\n「怎么说呢，大概因为厌烦了吧。可我也在尽我的努力——就连自己都难以置信。我也在考虑别人，像考虑自己的事一样，也因此挨过警察的揍。但到时候人们终究要各归其位，唯独我无处可归，就像玩『抢椅子』游戏没了椅子。」\n「不过你认真想想看：条件大伙都一样，就像同坐一架出了故障的飞机。诚然，有的运气好些，有的运气差些，有的坚强些有的懦弱些，有的有钱有的没钱。但没有一个家伙怀有超乎常人的自信，大家一个样，拥有什么的家伙生怕一旦失去，一无所有的家伙担心永远一无所有，大家一个样。所以，早些察觉到这一点的人 应该力争使自己多少怀有自信，哪怕装模做样也好，对吧？什么自信之人，那样的人根本没有，有的不过是能够装出自信的人。」\n「把谁都知道的事写成小说，那究竟有何意味可言？」\n我有时说谎。\n最后一次说谎是在去年。\n说谎是非常令人讨厌的勾当。不妨说，说谎与沉默是现代人类中流行的两大罪过。我们实际上经常说谎，也往往沉默不语。\n然而，倘若我们一年四季都喋喋不休，而且喋喋不休的无不真实，那么真实的价值必然荡然无存。\n\n--------\n\n# 超能力侦探事务所\n\n--------\n\n> 和事件无关的人，只要时间够久，或有新的事件发生，就会很快忘记过往的事。\n世界上永远没有「感同身受」这件事，因为没有亲身经历，无法体会到当事人的痛苦。\n\n--------","slug":"index","published":1,"updated":"2019-01-27T11:30:17.005Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxam00025owdyz3orydj","content":"<hr>\n<h1 id=\"代码整洁之道：程序员的职业素养\"><a href=\"#代码整洁之道：程序员的职业素养\" class=\"headerlink\" title=\"代码整洁之道：程序员的职业素养\"></a>代码整洁之道：程序员的职业素养</h1><hr>\n<blockquote>\n<p>我们并非是因为喜欢和其他人在一起工作才选择做程序员的。我们都认为人际关系难以应付而且毫无规律。编程用的机器则整洁，行为也可预见。如果可以一个人待在房间里数个小时沉浸在一些真正有趣的问题上，那将会是最开心的时光。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>以下全部内容均为本人2019年读书过程中所喜欢或者有感触的片段的摘录，来自于不同的书目，每本书标注了书名，书籍排序仅仅是阅读顺序（倒时间顺序），版权归原作者所有，这里仅作摘录整理。</strong></p>\n</blockquote>\n<h1 id=\"阿加莎·克里斯蒂的真实人生\"><a href=\"#阿加莎·克里斯蒂的真实人生\" class=\"headerlink\" title=\"阿加莎·克里斯蒂的真实人生\"></a>阿加莎·克里斯蒂的真实人生</h1><hr>\n<blockquote>\n<p>你无法创作命运，命运会不请自来，就是这么回事。<br>  人人都做梦，但他们的梦不一样。<br>  那些夜里在脏兮兮的脑袋瓜里做梦的人，<br>  白天一觉醒来发现不过是虚幻一场；<br>  要小心那些在白天做梦的人，<br>  因为他们会睁大眼睛做梦，<br>  用行动让梦想变成现实。<br>  天真是一种罪过，冷漠是一种爱。律师以为自己操纵着游戏，但不过是他想加害的人手中的玩偶。</p>\n</blockquote>\n<hr>\n<h1 id=\"牧羊少年奇幻之旅\"><a href=\"#牧羊少年奇幻之旅\" class=\"headerlink\" title=\"牧羊少年奇幻之旅\"></a>牧羊少年奇幻之旅</h1><hr>\n<blockquote>\n<p>不管是牧羊人、海员，还是推销员，总会有一个地方令他们魂牵梦萦，那里会有一个人让他们忘记自由自在周游世界的快乐。<br>  当总是面对同样的面孔，像在神学院里那样，就会渐渐让那些人成为生活的一部分。而由于他们是你生活的一部分，当然就想改变你的生活。如果你不像他们所期望的那样，他们就会不高兴。因为，对于该怎样生活，所有人都有固定的观念。但是他们对于自己该怎样生活却一头雾水，就像那个给人解梦、却不会把梦变成现实的老妇人。<br>  男孩心想，人总会说一些刁钻古怪的事情。有的时候，最好与羊群为伴，羊群不声不响，只顾吃草和水晶。与书为伴也行，书总是在人们最想听故事的时候，告诉你一些意想不到的事情。但是，当人与人交谈的时候，有些人说的话会让我们无所适从，不知该怎样把谈话继续下去。<br>「天命就是你一直期望去做的事情。人一旦步入青年时期，就知道什么是自己的天命了。在人生的这个阶段，一切都那么明朗，没有做不到的事情。人们敢于梦想，期待完成他们一生中喜欢做的一切事情。但是，随着时光的流逝，一股神秘的力量开始企图证明，根本不可能实现天命。」<br>实际上，每天都一成不变，是因为人们已经失去了对美好事物的敏锐感觉。<br>我和别人没什么两样：总是以理想的眼光看待世界，以为事情会按理想的方式发展，而不会用现实的眼光看待世界，看不到事情真相。<br>「因为麦加是支撑我活下去的希望，使我能够忍受平庸的岁月，忍受橱柜里那些不会说话的水晶，忍受那间糟糕透顶的餐厅里的午饭和晚饭。我害怕实现我的梦想，实现之后，我就没有活下去的动力了。」<br>「你的梦想是羊群和金字塔。你与我不同，因为你希望实现你的梦想，而我只是想保有去麦加的梦想。我曾无数次地想象过，如何穿过沙漠，到达安放着圣石的广场，在触摸圣石之前，围着它绕行七圈。我曾想象过有些人站在我身旁，有些人站在我前面，还有我们的谈话和共同的祈祷。可是，我担心会大失所望，所以我宁愿只保留一个梦想。」<br>「你一度成为我的福音。而今天我明白了一个道理，任何不被接纳的福音，都会变成诅咒。我对生活没有更多的要求。而你正迫使我盯着从未见过的财富和前景。现在，我知道了这些财富和前景，也知道了我完全有可能拥有它们。可是我的感觉却比以前糟糕了。因为我知道我自己可以拥有这一切，却不愿拥有它们。」<br>别的事情不好说，但在这件事上，男孩坚信不疑，尽管他的父母以及先辈都说过，必须在恋爱、订婚、相互了解和有了钱之后才可以结婚。说这话的人大概从来不了解宇宙的语言，因为如果掌握了这种语言，很容易就能理解，世上总有人在等待着另外一个人，无论是在大沙漠还是在大城市。当这两个人最终相遇，四目相对的时候，过去的一切和将来的一切全都变得无足轻重了，只有眼前的这一刻最重要。<br>因为生活永远是，也仅仅是我们现在经历的这一刻。<br>这正是需要爱发挥力量的地方，因为当我们有爱的时候，总是希望自己变得更好。</p>\n</blockquote>\n<hr>\n<h1 id=\"且听风吟\"><a href=\"#且听风吟\" class=\"headerlink\" title=\"且听风吟\"></a>且听风吟</h1><hr>\n<blockquote>\n<p>说到底，写文章并非自我诊治的手段，充其量不过是自我疗养的一种小小的尝试。<br>问题是，直言不讳是件极为困难的事。甚至越是想直言不讳，直率的言语越是遁入黑暗的深处。<br>死去的祖母常说「心情抑郁的人只能做抑郁的梦，要是更加抑郁的，连梦都不做的。」<br>如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。因为要诞生真正的艺术，奴隶制度是必不可少的。而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩意儿。<br>至于半夜三点半在悄无声息的厨房寻找电冰箱里的食品的人，只能写出这等模样的文章。<br>而那就是我。<br>「我时常想：假如活着不给任何人添麻烦该有多好！你说能做到吗？」<br>「怎么说呢，大概因为厌烦了吧。可我也在尽我的努力——就连自己都难以置信。我也在考虑别人，像考虑自己的事一样，也因此挨过警察的揍。但到时候人们终究要各归其位，唯独我无处可归，就像玩『抢椅子』游戏没了椅子。」<br>「不过你认真想想看：条件大伙都一样，就像同坐一架出了故障的飞机。诚然，有的运气好些，有的运气差些，有的坚强些有的懦弱些，有的有钱有的没钱。但没有一个家伙怀有超乎常人的自信，大家一个样，拥有什么的家伙生怕一旦失去，一无所有的家伙担心永远一无所有，大家一个样。所以，早些察觉到这一点的人 应该力争使自己多少怀有自信，哪怕装模做样也好，对吧？什么自信之人，那样的人根本没有，有的不过是能够装出自信的人。」<br>「把谁都知道的事写成小说，那究竟有何意味可言？」<br>我有时说谎。<br>最后一次说谎是在去年。<br>说谎是非常令人讨厌的勾当。不妨说，说谎与沉默是现代人类中流行的两大罪过。我们实际上经常说谎，也往往沉默不语。<br>然而，倘若我们一年四季都喋喋不休，而且喋喋不休的无不真实，那么真实的价值必然荡然无存。</p>\n</blockquote>\n<hr>\n<h1 id=\"超能力侦探事务所\"><a href=\"#超能力侦探事务所\" class=\"headerlink\" title=\"超能力侦探事务所\"></a>超能力侦探事务所</h1><hr>\n<blockquote>\n<p>和事件无关的人，只要时间够久，或有新的事件发生，就会很快忘记过往的事。<br>世界上永远没有「感同身受」这件事，因为没有亲身经历，无法体会到当事人的痛苦。</p>\n</blockquote>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h1 id=\"代码整洁之道：程序员的职业素养\"><a href=\"#代码整洁之道：程序员的职业素养\" class=\"headerlink\" title=\"代码整洁之道：程序员的职业素养\"></a>代码整洁之道：程序员的职业素养</h1><hr>\n<blockquote>\n<p>我们并非是因为喜欢和其他人在一起工作才选择做程序员的。我们都认为人际关系难以应付而且毫无规律。编程用的机器则整洁，行为也可预见。如果可以一个人待在房间里数个小时沉浸在一些真正有趣的问题上，那将会是最开心的时光。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>以下全部内容均为本人2019年读书过程中所喜欢或者有感触的片段的摘录，来自于不同的书目，每本书标注了书名，书籍排序仅仅是阅读顺序（倒时间顺序），版权归原作者所有，这里仅作摘录整理。</strong></p>\n</blockquote>\n<h1 id=\"阿加莎·克里斯蒂的真实人生\"><a href=\"#阿加莎·克里斯蒂的真实人生\" class=\"headerlink\" title=\"阿加莎·克里斯蒂的真实人生\"></a>阿加莎·克里斯蒂的真实人生</h1><hr>\n<blockquote>\n<p>你无法创作命运，命运会不请自来，就是这么回事。<br>  人人都做梦，但他们的梦不一样。<br>  那些夜里在脏兮兮的脑袋瓜里做梦的人，<br>  白天一觉醒来发现不过是虚幻一场；<br>  要小心那些在白天做梦的人，<br>  因为他们会睁大眼睛做梦，<br>  用行动让梦想变成现实。<br>  天真是一种罪过，冷漠是一种爱。律师以为自己操纵着游戏，但不过是他想加害的人手中的玩偶。</p>\n</blockquote>\n<hr>\n<h1 id=\"牧羊少年奇幻之旅\"><a href=\"#牧羊少年奇幻之旅\" class=\"headerlink\" title=\"牧羊少年奇幻之旅\"></a>牧羊少年奇幻之旅</h1><hr>\n<blockquote>\n<p>不管是牧羊人、海员，还是推销员，总会有一个地方令他们魂牵梦萦，那里会有一个人让他们忘记自由自在周游世界的快乐。<br>  当总是面对同样的面孔，像在神学院里那样，就会渐渐让那些人成为生活的一部分。而由于他们是你生活的一部分，当然就想改变你的生活。如果你不像他们所期望的那样，他们就会不高兴。因为，对于该怎样生活，所有人都有固定的观念。但是他们对于自己该怎样生活却一头雾水，就像那个给人解梦、却不会把梦变成现实的老妇人。<br>  男孩心想，人总会说一些刁钻古怪的事情。有的时候，最好与羊群为伴，羊群不声不响，只顾吃草和水晶。与书为伴也行，书总是在人们最想听故事的时候，告诉你一些意想不到的事情。但是，当人与人交谈的时候，有些人说的话会让我们无所适从，不知该怎样把谈话继续下去。<br>「天命就是你一直期望去做的事情。人一旦步入青年时期，就知道什么是自己的天命了。在人生的这个阶段，一切都那么明朗，没有做不到的事情。人们敢于梦想，期待完成他们一生中喜欢做的一切事情。但是，随着时光的流逝，一股神秘的力量开始企图证明，根本不可能实现天命。」<br>实际上，每天都一成不变，是因为人们已经失去了对美好事物的敏锐感觉。<br>我和别人没什么两样：总是以理想的眼光看待世界，以为事情会按理想的方式发展，而不会用现实的眼光看待世界，看不到事情真相。<br>「因为麦加是支撑我活下去的希望，使我能够忍受平庸的岁月，忍受橱柜里那些不会说话的水晶，忍受那间糟糕透顶的餐厅里的午饭和晚饭。我害怕实现我的梦想，实现之后，我就没有活下去的动力了。」<br>「你的梦想是羊群和金字塔。你与我不同，因为你希望实现你的梦想，而我只是想保有去麦加的梦想。我曾无数次地想象过，如何穿过沙漠，到达安放着圣石的广场，在触摸圣石之前，围着它绕行七圈。我曾想象过有些人站在我身旁，有些人站在我前面，还有我们的谈话和共同的祈祷。可是，我担心会大失所望，所以我宁愿只保留一个梦想。」<br>「你一度成为我的福音。而今天我明白了一个道理，任何不被接纳的福音，都会变成诅咒。我对生活没有更多的要求。而你正迫使我盯着从未见过的财富和前景。现在，我知道了这些财富和前景，也知道了我完全有可能拥有它们。可是我的感觉却比以前糟糕了。因为我知道我自己可以拥有这一切，却不愿拥有它们。」<br>别的事情不好说，但在这件事上，男孩坚信不疑，尽管他的父母以及先辈都说过，必须在恋爱、订婚、相互了解和有了钱之后才可以结婚。说这话的人大概从来不了解宇宙的语言，因为如果掌握了这种语言，很容易就能理解，世上总有人在等待着另外一个人，无论是在大沙漠还是在大城市。当这两个人最终相遇，四目相对的时候，过去的一切和将来的一切全都变得无足轻重了，只有眼前的这一刻最重要。<br>因为生活永远是，也仅仅是我们现在经历的这一刻。<br>这正是需要爱发挥力量的地方，因为当我们有爱的时候，总是希望自己变得更好。</p>\n</blockquote>\n<hr>\n<h1 id=\"且听风吟\"><a href=\"#且听风吟\" class=\"headerlink\" title=\"且听风吟\"></a>且听风吟</h1><hr>\n<blockquote>\n<p>说到底，写文章并非自我诊治的手段，充其量不过是自我疗养的一种小小的尝试。<br>问题是，直言不讳是件极为困难的事。甚至越是想直言不讳，直率的言语越是遁入黑暗的深处。<br>死去的祖母常说「心情抑郁的人只能做抑郁的梦，要是更加抑郁的，连梦都不做的。」<br>如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。因为要诞生真正的艺术，奴隶制度是必不可少的。而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩意儿。<br>至于半夜三点半在悄无声息的厨房寻找电冰箱里的食品的人，只能写出这等模样的文章。<br>而那就是我。<br>「我时常想：假如活着不给任何人添麻烦该有多好！你说能做到吗？」<br>「怎么说呢，大概因为厌烦了吧。可我也在尽我的努力——就连自己都难以置信。我也在考虑别人，像考虑自己的事一样，也因此挨过警察的揍。但到时候人们终究要各归其位，唯独我无处可归，就像玩『抢椅子』游戏没了椅子。」<br>「不过你认真想想看：条件大伙都一样，就像同坐一架出了故障的飞机。诚然，有的运气好些，有的运气差些，有的坚强些有的懦弱些，有的有钱有的没钱。但没有一个家伙怀有超乎常人的自信，大家一个样，拥有什么的家伙生怕一旦失去，一无所有的家伙担心永远一无所有，大家一个样。所以，早些察觉到这一点的人 应该力争使自己多少怀有自信，哪怕装模做样也好，对吧？什么自信之人，那样的人根本没有，有的不过是能够装出自信的人。」<br>「把谁都知道的事写成小说，那究竟有何意味可言？」<br>我有时说谎。<br>最后一次说谎是在去年。<br>说谎是非常令人讨厌的勾当。不妨说，说谎与沉默是现代人类中流行的两大罪过。我们实际上经常说谎，也往往沉默不语。<br>然而，倘若我们一年四季都喋喋不休，而且喋喋不休的无不真实，那么真实的价值必然荡然无存。</p>\n</blockquote>\n<hr>\n<h1 id=\"超能力侦探事务所\"><a href=\"#超能力侦探事务所\" class=\"headerlink\" title=\"超能力侦探事务所\"></a>超能力侦探事务所</h1><hr>\n<blockquote>\n<p>和事件无关的人，只要时间够久，或有新的事件发生，就会很快忘记过往的事。<br>世界上永远没有「感同身受」这件事，因为没有亲身经历，无法体会到当事人的痛苦。</p>\n</blockquote>\n<hr>\n"},{"title":"sass基本语法使用","date":"2018-08-04T08:46:31.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"1/26/2019 10:54:49 AM \n----------\n\n\n# sass\n\t\n### 学过CSS的人都知道，它不是一种编程语言。\n\n#### 你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\n\n## 基本语法\n\n- ## 变量\n\n\t#### SASS允许使用变量，所有变量以$开头。\n\n\t\t$blue : #1875e7;　\n\n\t\t　　div {\n\t\t　　　color : $blue;\n\t\t　　}\n\n\t#### 如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。\n\n\t\t$side : left;\n\t\t　　.rounded {\n\t\t　　　　border-#{$side}-radius: 5px;\n\t\t　　}\n\n- ## 计算功能\n\n\t#### SASS允许在代码中使用算式：\n\n\t\tbody {\n\t\t　　　　margin: (14px/2);\n\t\t　　　　top: 50px + 100px;\n\t\t　　　　right: $var * 10%;\n\t\t　　}\n\n- ## 嵌套\n\n\t#### SASS允许选择器嵌套。比如，下面的CSS代码：\n\n\t\tdiv h1 {\n\t\t　　　　color : red;\n\t\t　　}\n\n\t可以写成：\n\n\t\tdiv {\n\t\t　　　　hi {\n\t\t　　　　　　color:red;\n\t\t　　　　}\n\t\t　　}\n\n- ## 代码的重用 \n\n----------\n【继承】\n\n#### SASS允许一个选择器，继承另一个选择器。比如，现有class1：\n\n\t\t.class1 {\n\t\t　　　　border: 1px solid #ddd;\n\t\t　　}\n#### class2要继承class1，就要使用@extend命令：\n\n\t\t.class2 {\n\t\t　　　　@extend .class1;\n\t\t　　　　font-size:120%;\n\t\t　　}\n\n- ## Mixin\n\n\t#### Mixin有点像C语言的宏（macro），是可以重用的代码块。\n\n\t#### 使用@mixin命令，定义一个代码块。\n\n\t\t@mixin left {\n\t\t　　　　float: left;\n\t\t　　　　margin-left: 10px;\n\t\t　　}\n\n\t#### 使用@include命令，调用这个mixin。\n\n\t\tdiv {\n\t\t　　　　@include left;\n\t\t　　}\n\n\t#### mixin的强大之处，在于可以指定参数和缺省值。\n\n\t\t@mixin left($value: 10px) {\n\t\t　　　　float: left;\n\t\t　　　　margin-right: $value;\n\t\t　　}\n\n\t#### 使用的时候，根据需要加入参数：\n\n\t\tdiv {\n\t\t　　　　@include left(20px);\n\t\t　　}\n\n\t#### 下面是一个mixin的实例，用来生成浏览器前缀。\n\n\t\t@mixin rounded($vert, $horz, $radius: 10px) {\n\t\t　　　　border-#{$vert}-#{$horz}-radius: $radius;\n\t\t　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;\n\t\t　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;\n\t\t　　}\n\t#### 使用的时候，可以像下面这样调用：\n\n\t\t\t.navbar li { @include rounded(top, left); }\n\n\t\t    .footer { @include rounded(top, left, 5px); }\n\n- ## 插入文件\n\n\t#### @import命令，用来插入外部文件。\n\n\t\t@import \"path/filename.scss\";\n\n\t#### 如果插入的是.css文件，则等同于css的import命令。\n\n\t\t@import \"foo.css\";\n\n- ## 高级用法\n\n\t\t\n\t### 1. 条件语句\n\n\t#### @if可以用来判断：\n\n\t\tp {\n\t\t　　　　@if 1 + 1 == 2 { border: 1px solid; }\n\t\t　　　　@if 5 < 3 { border: 2px dotted; }\n\t\t　　}\n\n\t#### 配套的还有@else命令：\n\n\t\t@if lightness($color) > 30% {\n\t\t　　　　background-color: #000;\n\t\t　　} @else {\n\t\t　　　　background-color: #fff;\n\t\t　　}\n\n\t### 2. 循环语句\n\n\t#### SASS支持for循环：\n\n\t\t@for $i from 1 to 10 {\n\t\t　　　　.border-#{$i} {\n\t\t　　　　　　border: #{$i}px solid blue;\n\t\t　　　　}\n\t\t　　}\n\n\t#### 也支持while循环：\n\n\t\t$i: 6;\n\n\t\t　　@while $i > 0 {\n\t\t　　　　.item-#{$i} { width: 2em * $i; }\n\t\t　　　　$i: $i - 2;\n\t\t　　}\n\n\t#### each命令，作用与for类似：\n\n\t\t@each $member in a, b, c, d {\n\t\t　　　　.#{$member} {\n\t\t　　　　　　background-image: url(\"/image/#{$member}.jpg\");\n\t\t　　　　}\n\t\t　　}\n\n\t### 3. 自定义函数\n\n\t#### SASS允许用户编写自己的函数。\n\n\t\t@function double($n) {\n\t\t　　　　@return $n * 2;\n\t\t　　}\n\t\t\n\t\t　　#sidebar {\n\t\t　　　　width: double(5px);\n\t\t　　}\n","source":"_posts/sass.md","raw":"---\ntitle: sass基本语法使用\ndate: '2018-08-04 16:46:31'\ntag: ['css', 'scss', sass]\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n1/26/2019 10:54:49 AM \n----------\n\n\n# sass\n\t\n### 学过CSS的人都知道，它不是一种编程语言。\n\n#### 你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\n\n## 基本语法\n\n- ## 变量\n\n\t#### SASS允许使用变量，所有变量以$开头。\n\n\t\t$blue : #1875e7;　\n\n\t\t　　div {\n\t\t　　　color : $blue;\n\t\t　　}\n\n\t#### 如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。\n\n\t\t$side : left;\n\t\t　　.rounded {\n\t\t　　　　border-#{$side}-radius: 5px;\n\t\t　　}\n\n- ## 计算功能\n\n\t#### SASS允许在代码中使用算式：\n\n\t\tbody {\n\t\t　　　　margin: (14px/2);\n\t\t　　　　top: 50px + 100px;\n\t\t　　　　right: $var * 10%;\n\t\t　　}\n\n- ## 嵌套\n\n\t#### SASS允许选择器嵌套。比如，下面的CSS代码：\n\n\t\tdiv h1 {\n\t\t　　　　color : red;\n\t\t　　}\n\n\t可以写成：\n\n\t\tdiv {\n\t\t　　　　hi {\n\t\t　　　　　　color:red;\n\t\t　　　　}\n\t\t　　}\n\n- ## 代码的重用 \n\n----------\n【继承】\n\n#### SASS允许一个选择器，继承另一个选择器。比如，现有class1：\n\n\t\t.class1 {\n\t\t　　　　border: 1px solid #ddd;\n\t\t　　}\n#### class2要继承class1，就要使用@extend命令：\n\n\t\t.class2 {\n\t\t　　　　@extend .class1;\n\t\t　　　　font-size:120%;\n\t\t　　}\n\n- ## Mixin\n\n\t#### Mixin有点像C语言的宏（macro），是可以重用的代码块。\n\n\t#### 使用@mixin命令，定义一个代码块。\n\n\t\t@mixin left {\n\t\t　　　　float: left;\n\t\t　　　　margin-left: 10px;\n\t\t　　}\n\n\t#### 使用@include命令，调用这个mixin。\n\n\t\tdiv {\n\t\t　　　　@include left;\n\t\t　　}\n\n\t#### mixin的强大之处，在于可以指定参数和缺省值。\n\n\t\t@mixin left($value: 10px) {\n\t\t　　　　float: left;\n\t\t　　　　margin-right: $value;\n\t\t　　}\n\n\t#### 使用的时候，根据需要加入参数：\n\n\t\tdiv {\n\t\t　　　　@include left(20px);\n\t\t　　}\n\n\t#### 下面是一个mixin的实例，用来生成浏览器前缀。\n\n\t\t@mixin rounded($vert, $horz, $radius: 10px) {\n\t\t　　　　border-#{$vert}-#{$horz}-radius: $radius;\n\t\t　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;\n\t\t　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;\n\t\t　　}\n\t#### 使用的时候，可以像下面这样调用：\n\n\t\t\t.navbar li { @include rounded(top, left); }\n\n\t\t    .footer { @include rounded(top, left, 5px); }\n\n- ## 插入文件\n\n\t#### @import命令，用来插入外部文件。\n\n\t\t@import \"path/filename.scss\";\n\n\t#### 如果插入的是.css文件，则等同于css的import命令。\n\n\t\t@import \"foo.css\";\n\n- ## 高级用法\n\n\t\t\n\t### 1. 条件语句\n\n\t#### @if可以用来判断：\n\n\t\tp {\n\t\t　　　　@if 1 + 1 == 2 { border: 1px solid; }\n\t\t　　　　@if 5 < 3 { border: 2px dotted; }\n\t\t　　}\n\n\t#### 配套的还有@else命令：\n\n\t\t@if lightness($color) > 30% {\n\t\t　　　　background-color: #000;\n\t\t　　} @else {\n\t\t　　　　background-color: #fff;\n\t\t　　}\n\n\t### 2. 循环语句\n\n\t#### SASS支持for循环：\n\n\t\t@for $i from 1 to 10 {\n\t\t　　　　.border-#{$i} {\n\t\t　　　　　　border: #{$i}px solid blue;\n\t\t　　　　}\n\t\t　　}\n\n\t#### 也支持while循环：\n\n\t\t$i: 6;\n\n\t\t　　@while $i > 0 {\n\t\t　　　　.item-#{$i} { width: 2em * $i; }\n\t\t　　　　$i: $i - 2;\n\t\t　　}\n\n\t#### each命令，作用与for类似：\n\n\t\t@each $member in a, b, c, d {\n\t\t　　　　.#{$member} {\n\t\t　　　　　　background-image: url(\"/image/#{$member}.jpg\");\n\t\t　　　　}\n\t\t　　}\n\n\t### 3. 自定义函数\n\n\t#### SASS允许用户编写自己的函数。\n\n\t\t@function double($n) {\n\t\t　　　　@return $n * 2;\n\t\t　　}\n\t\t\n\t\t　　#sidebar {\n\t\t　　　　width: double(5px);\n\t\t　　}\n","slug":"sass","published":1,"updated":"2019-01-26T06:11:28.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxat00055owd0rbhlazw","content":"<h2 id=\"1-26-2019-10-54-49-AM\"><a href=\"#1-26-2019-10-54-49-AM\" class=\"headerlink\" title=\"1/26/2019 10:54:49 AM \"></a>1/26/2019 10:54:49 AM </h2><h1 id=\"sass\"><a href=\"#sass\" class=\"headerlink\" title=\"sass\"></a>sass</h1><h3 id=\"学过CSS的人都知道，它不是一种编程语言。\"><a href=\"#学过CSS的人都知道，它不是一种编程语言。\" class=\"headerlink\" title=\"学过CSS的人都知道，它不是一种编程语言。\"></a>学过CSS的人都知道，它不是一种编程语言。</h3><h4 id=\"你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\"><a href=\"#你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\" class=\"headerlink\" title=\"你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\"></a>你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。</h4><h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><ul>\n<li><h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><h4 id=\"SASS允许使用变量，所有变量以-开头。\"><a href=\"#SASS允许使用变量，所有变量以-开头。\" class=\"headerlink\" title=\"SASS允许使用变量，所有变量以$开头。\"></a>SASS允许使用变量，所有变量以$开头。</h4><pre><code>  $blue : #1875e7;　\n\n  　　div {\n  　　　color : $blue;\n  　　}\n</code></pre><h4 id=\"如果变量需要镶嵌在字符串之中，就必须需要写在-之中。\"><a href=\"#如果变量需要镶嵌在字符串之中，就必须需要写在-之中。\" class=\"headerlink\" title=\"如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。\"></a>如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。</h4><pre><code>  $side : left;\n  　　.rounded {\n  　　　　border-#{$side}-radius: 5px;\n  　　}\n</code></pre></li>\n<li><h2 id=\"计算功能\"><a href=\"#计算功能\" class=\"headerlink\" title=\"计算功能\"></a>计算功能</h2><h4 id=\"SASS允许在代码中使用算式：\"><a href=\"#SASS允许在代码中使用算式：\" class=\"headerlink\" title=\"SASS允许在代码中使用算式：\"></a>SASS允许在代码中使用算式：</h4><pre><code>  body {\n  　　　　margin: (14px/2);\n  　　　　top: 50px + 100px;\n  　　　　right: $var * 10%;\n  　　}\n</code></pre></li>\n<li><h2 id=\"嵌套\"><a href=\"#嵌套\" class=\"headerlink\" title=\"嵌套\"></a>嵌套</h2><h4 id=\"SASS允许选择器嵌套。比如，下面的CSS代码：\"><a href=\"#SASS允许选择器嵌套。比如，下面的CSS代码：\" class=\"headerlink\" title=\"SASS允许选择器嵌套。比如，下面的CSS代码：\"></a>SASS允许选择器嵌套。比如，下面的CSS代码：</h4><pre><code>  div h1 {\n  　　　　color : red;\n  　　}\n</code></pre><p>  可以写成：</p>\n<pre><code>  div {\n  　　　　hi {\n  　　　　　　color:red;\n  　　　　}\n  　　}\n</code></pre></li>\n<li><h2 id=\"代码的重用\"><a href=\"#代码的重用\" class=\"headerlink\" title=\"代码的重用\"></a>代码的重用</h2></li>\n</ul>\n<hr>\n<p>【继承】</p>\n<h4 id=\"SASS允许一个选择器，继承另一个选择器。比如，现有class1：\"><a href=\"#SASS允许一个选择器，继承另一个选择器。比如，现有class1：\" class=\"headerlink\" title=\"SASS允许一个选择器，继承另一个选择器。比如，现有class1：\"></a>SASS允许一个选择器，继承另一个选择器。比如，现有class1：</h4><pre><code>    .class1 {\n    　　　　border: 1px solid #ddd;\n    　　}\n</code></pre><h4 id=\"class2要继承class1，就要使用-extend命令：\"><a href=\"#class2要继承class1，就要使用-extend命令：\" class=\"headerlink\" title=\"class2要继承class1，就要使用@extend命令：\"></a>class2要继承class1，就要使用@extend命令：</h4><pre><code>    .class2 {\n    　　　　@extend .class1;\n    　　　　font-size:120%;\n    　　}\n</code></pre><ul>\n<li><h2 id=\"Mixin\"><a href=\"#Mixin\" class=\"headerlink\" title=\"Mixin\"></a>Mixin</h2><h4 id=\"Mixin有点像C语言的宏（macro），是可以重用的代码块。\"><a href=\"#Mixin有点像C语言的宏（macro），是可以重用的代码块。\" class=\"headerlink\" title=\"Mixin有点像C语言的宏（macro），是可以重用的代码块。\"></a>Mixin有点像C语言的宏（macro），是可以重用的代码块。</h4><h4 id=\"使用-mixin命令，定义一个代码块。\"><a href=\"#使用-mixin命令，定义一个代码块。\" class=\"headerlink\" title=\"使用@mixin命令，定义一个代码块。\"></a>使用@mixin命令，定义一个代码块。</h4><pre><code>  @mixin left {\n  　　　　float: left;\n  　　　　margin-left: 10px;\n  　　}\n</code></pre><h4 id=\"使用-include命令，调用这个mixin。\"><a href=\"#使用-include命令，调用这个mixin。\" class=\"headerlink\" title=\"使用@include命令，调用这个mixin。\"></a>使用@include命令，调用这个mixin。</h4><pre><code>  div {\n  　　　　@include left;\n  　　}\n</code></pre><h4 id=\"mixin的强大之处，在于可以指定参数和缺省值。\"><a href=\"#mixin的强大之处，在于可以指定参数和缺省值。\" class=\"headerlink\" title=\"mixin的强大之处，在于可以指定参数和缺省值。\"></a>mixin的强大之处，在于可以指定参数和缺省值。</h4><pre><code>  @mixin left($value: 10px) {\n  　　　　float: left;\n  　　　　margin-right: $value;\n  　　}\n</code></pre><h4 id=\"使用的时候，根据需要加入参数：\"><a href=\"#使用的时候，根据需要加入参数：\" class=\"headerlink\" title=\"使用的时候，根据需要加入参数：\"></a>使用的时候，根据需要加入参数：</h4><pre><code>  div {\n  　　　　@include left(20px);\n  　　}\n</code></pre><h4 id=\"下面是一个mixin的实例，用来生成浏览器前缀。\"><a href=\"#下面是一个mixin的实例，用来生成浏览器前缀。\" class=\"headerlink\" title=\"下面是一个mixin的实例，用来生成浏览器前缀。\"></a>下面是一个mixin的实例，用来生成浏览器前缀。</h4><pre><code>  @mixin rounded($vert, $horz, $radius: 10px) {\n  　　　　border-#{$vert}-#{$horz}-radius: $radius;\n  　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;\n  　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;\n  　　}\n</code></pre><h4 id=\"使用的时候，可以像下面这样调用：\"><a href=\"#使用的时候，可以像下面这样调用：\" class=\"headerlink\" title=\"使用的时候，可以像下面这样调用：\"></a>使用的时候，可以像下面这样调用：</h4><pre><code>      .navbar li { @include rounded(top, left); }\n\n      .footer { @include rounded(top, left, 5px); }\n</code></pre></li>\n<li><h2 id=\"插入文件\"><a href=\"#插入文件\" class=\"headerlink\" title=\"插入文件\"></a>插入文件</h2><h4 id=\"import命令，用来插入外部文件。\"><a href=\"#import命令，用来插入外部文件。\" class=\"headerlink\" title=\"@import命令，用来插入外部文件。\"></a>@import命令，用来插入外部文件。</h4><pre><code>  @import &quot;path/filename.scss&quot;;\n</code></pre><h4 id=\"如果插入的是-css文件，则等同于css的import命令。\"><a href=\"#如果插入的是-css文件，则等同于css的import命令。\" class=\"headerlink\" title=\"如果插入的是.css文件，则等同于css的import命令。\"></a>如果插入的是.css文件，则等同于css的import命令。</h4><pre><code>  @import &quot;foo.css&quot;;\n</code></pre></li>\n<li><h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2></li>\n</ul>\n<pre><code>### 1. 条件语句\n\n#### @if可以用来判断：\n\n    p {\n    　　　　@if 1 + 1 == 2 { border: 1px solid; }\n    　　　　@if 5 &lt; 3 { border: 2px dotted; }\n    　　}\n\n#### 配套的还有@else命令：\n\n    @if lightness($color) &gt; 30% {\n    　　　　background-color: #000;\n    　　} @else {\n    　　　　background-color: #fff;\n    　　}\n\n### 2. 循环语句\n\n#### SASS支持for循环：\n\n    @for $i from 1 to 10 {\n    　　　　.border-#{$i} {\n    　　　　　　border: #{$i}px solid blue;\n    　　　　}\n    　　}\n\n#### 也支持while循环：\n\n    $i: 6;\n\n    　　@while $i &gt; 0 {\n    　　　　.item-#{$i} { width: 2em * $i; }\n    　　　　$i: $i - 2;\n    　　}\n\n#### each命令，作用与for类似：\n\n    @each $member in a, b, c, d {\n    　　　　.#{$member} {\n    　　　　　　background-image: url(&quot;/image/#{$member}.jpg&quot;);\n    　　　　}\n    　　}\n\n### 3. 自定义函数\n\n#### SASS允许用户编写自己的函数。\n\n    @function double($n) {\n    　　　　@return $n * 2;\n    　　}\n\n    　　#sidebar {\n    　　　　width: double(5px);\n    　　}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-26-2019-10-54-49-AM\"><a href=\"#1-26-2019-10-54-49-AM\" class=\"headerlink\" title=\"1/26/2019 10:54:49 AM \"></a>1/26/2019 10:54:49 AM </h2><h1 id=\"sass\"><a href=\"#sass\" class=\"headerlink\" title=\"sass\"></a>sass</h1><h3 id=\"学过CSS的人都知道，它不是一种编程语言。\"><a href=\"#学过CSS的人都知道，它不是一种编程语言。\" class=\"headerlink\" title=\"学过CSS的人都知道，它不是一种编程语言。\"></a>学过CSS的人都知道，它不是一种编程语言。</h3><h4 id=\"你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\"><a href=\"#你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\" class=\"headerlink\" title=\"你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。\"></a>你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。</h4><h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><ul>\n<li><h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><h4 id=\"SASS允许使用变量，所有变量以-开头。\"><a href=\"#SASS允许使用变量，所有变量以-开头。\" class=\"headerlink\" title=\"SASS允许使用变量，所有变量以$开头。\"></a>SASS允许使用变量，所有变量以$开头。</h4><pre><code>  $blue : #1875e7;　\n\n  　　div {\n  　　　color : $blue;\n  　　}\n</code></pre><h4 id=\"如果变量需要镶嵌在字符串之中，就必须需要写在-之中。\"><a href=\"#如果变量需要镶嵌在字符串之中，就必须需要写在-之中。\" class=\"headerlink\" title=\"如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。\"></a>如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。</h4><pre><code>  $side : left;\n  　　.rounded {\n  　　　　border-#{$side}-radius: 5px;\n  　　}\n</code></pre></li>\n<li><h2 id=\"计算功能\"><a href=\"#计算功能\" class=\"headerlink\" title=\"计算功能\"></a>计算功能</h2><h4 id=\"SASS允许在代码中使用算式：\"><a href=\"#SASS允许在代码中使用算式：\" class=\"headerlink\" title=\"SASS允许在代码中使用算式：\"></a>SASS允许在代码中使用算式：</h4><pre><code>  body {\n  　　　　margin: (14px/2);\n  　　　　top: 50px + 100px;\n  　　　　right: $var * 10%;\n  　　}\n</code></pre></li>\n<li><h2 id=\"嵌套\"><a href=\"#嵌套\" class=\"headerlink\" title=\"嵌套\"></a>嵌套</h2><h4 id=\"SASS允许选择器嵌套。比如，下面的CSS代码：\"><a href=\"#SASS允许选择器嵌套。比如，下面的CSS代码：\" class=\"headerlink\" title=\"SASS允许选择器嵌套。比如，下面的CSS代码：\"></a>SASS允许选择器嵌套。比如，下面的CSS代码：</h4><pre><code>  div h1 {\n  　　　　color : red;\n  　　}\n</code></pre><p>  可以写成：</p>\n<pre><code>  div {\n  　　　　hi {\n  　　　　　　color:red;\n  　　　　}\n  　　}\n</code></pre></li>\n<li><h2 id=\"代码的重用\"><a href=\"#代码的重用\" class=\"headerlink\" title=\"代码的重用\"></a>代码的重用</h2></li>\n</ul>\n<hr>\n<p>【继承】</p>\n<h4 id=\"SASS允许一个选择器，继承另一个选择器。比如，现有class1：\"><a href=\"#SASS允许一个选择器，继承另一个选择器。比如，现有class1：\" class=\"headerlink\" title=\"SASS允许一个选择器，继承另一个选择器。比如，现有class1：\"></a>SASS允许一个选择器，继承另一个选择器。比如，现有class1：</h4><pre><code>    .class1 {\n    　　　　border: 1px solid #ddd;\n    　　}\n</code></pre><h4 id=\"class2要继承class1，就要使用-extend命令：\"><a href=\"#class2要继承class1，就要使用-extend命令：\" class=\"headerlink\" title=\"class2要继承class1，就要使用@extend命令：\"></a>class2要继承class1，就要使用@extend命令：</h4><pre><code>    .class2 {\n    　　　　@extend .class1;\n    　　　　font-size:120%;\n    　　}\n</code></pre><ul>\n<li><h2 id=\"Mixin\"><a href=\"#Mixin\" class=\"headerlink\" title=\"Mixin\"></a>Mixin</h2><h4 id=\"Mixin有点像C语言的宏（macro），是可以重用的代码块。\"><a href=\"#Mixin有点像C语言的宏（macro），是可以重用的代码块。\" class=\"headerlink\" title=\"Mixin有点像C语言的宏（macro），是可以重用的代码块。\"></a>Mixin有点像C语言的宏（macro），是可以重用的代码块。</h4><h4 id=\"使用-mixin命令，定义一个代码块。\"><a href=\"#使用-mixin命令，定义一个代码块。\" class=\"headerlink\" title=\"使用@mixin命令，定义一个代码块。\"></a>使用@mixin命令，定义一个代码块。</h4><pre><code>  @mixin left {\n  　　　　float: left;\n  　　　　margin-left: 10px;\n  　　}\n</code></pre><h4 id=\"使用-include命令，调用这个mixin。\"><a href=\"#使用-include命令，调用这个mixin。\" class=\"headerlink\" title=\"使用@include命令，调用这个mixin。\"></a>使用@include命令，调用这个mixin。</h4><pre><code>  div {\n  　　　　@include left;\n  　　}\n</code></pre><h4 id=\"mixin的强大之处，在于可以指定参数和缺省值。\"><a href=\"#mixin的强大之处，在于可以指定参数和缺省值。\" class=\"headerlink\" title=\"mixin的强大之处，在于可以指定参数和缺省值。\"></a>mixin的强大之处，在于可以指定参数和缺省值。</h4><pre><code>  @mixin left($value: 10px) {\n  　　　　float: left;\n  　　　　margin-right: $value;\n  　　}\n</code></pre><h4 id=\"使用的时候，根据需要加入参数：\"><a href=\"#使用的时候，根据需要加入参数：\" class=\"headerlink\" title=\"使用的时候，根据需要加入参数：\"></a>使用的时候，根据需要加入参数：</h4><pre><code>  div {\n  　　　　@include left(20px);\n  　　}\n</code></pre><h4 id=\"下面是一个mixin的实例，用来生成浏览器前缀。\"><a href=\"#下面是一个mixin的实例，用来生成浏览器前缀。\" class=\"headerlink\" title=\"下面是一个mixin的实例，用来生成浏览器前缀。\"></a>下面是一个mixin的实例，用来生成浏览器前缀。</h4><pre><code>  @mixin rounded($vert, $horz, $radius: 10px) {\n  　　　　border-#{$vert}-#{$horz}-radius: $radius;\n  　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;\n  　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;\n  　　}\n</code></pre><h4 id=\"使用的时候，可以像下面这样调用：\"><a href=\"#使用的时候，可以像下面这样调用：\" class=\"headerlink\" title=\"使用的时候，可以像下面这样调用：\"></a>使用的时候，可以像下面这样调用：</h4><pre><code>      .navbar li { @include rounded(top, left); }\n\n      .footer { @include rounded(top, left, 5px); }\n</code></pre></li>\n<li><h2 id=\"插入文件\"><a href=\"#插入文件\" class=\"headerlink\" title=\"插入文件\"></a>插入文件</h2><h4 id=\"import命令，用来插入外部文件。\"><a href=\"#import命令，用来插入外部文件。\" class=\"headerlink\" title=\"@import命令，用来插入外部文件。\"></a>@import命令，用来插入外部文件。</h4><pre><code>  @import &quot;path/filename.scss&quot;;\n</code></pre><h4 id=\"如果插入的是-css文件，则等同于css的import命令。\"><a href=\"#如果插入的是-css文件，则等同于css的import命令。\" class=\"headerlink\" title=\"如果插入的是.css文件，则等同于css的import命令。\"></a>如果插入的是.css文件，则等同于css的import命令。</h4><pre><code>  @import &quot;foo.css&quot;;\n</code></pre></li>\n<li><h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2></li>\n</ul>\n<pre><code>### 1. 条件语句\n\n#### @if可以用来判断：\n\n    p {\n    　　　　@if 1 + 1 == 2 { border: 1px solid; }\n    　　　　@if 5 &lt; 3 { border: 2px dotted; }\n    　　}\n\n#### 配套的还有@else命令：\n\n    @if lightness($color) &gt; 30% {\n    　　　　background-color: #000;\n    　　} @else {\n    　　　　background-color: #fff;\n    　　}\n\n### 2. 循环语句\n\n#### SASS支持for循环：\n\n    @for $i from 1 to 10 {\n    　　　　.border-#{$i} {\n    　　　　　　border: #{$i}px solid blue;\n    　　　　}\n    　　}\n\n#### 也支持while循环：\n\n    $i: 6;\n\n    　　@while $i &gt; 0 {\n    　　　　.item-#{$i} { width: 2em * $i; }\n    　　　　$i: $i - 2;\n    　　}\n\n#### each命令，作用与for类似：\n\n    @each $member in a, b, c, d {\n    　　　　.#{$member} {\n    　　　　　　background-image: url(&quot;/image/#{$member}.jpg&quot;);\n    　　　　}\n    　　}\n\n### 3. 自定义函数\n\n#### SASS允许用户编写自己的函数。\n\n    @function double($n) {\n    　　　　@return $n * 2;\n    　　}\n\n    　　#sidebar {\n    　　　　width: double(5px);\n    　　}\n</code></pre>"},{"title":"px2rem 移动端自适应方案","date":"2019-01-25T08:36:42.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"----------\n\n1/25/2019 4:36:42 PM\n\n----------\n\n# px2rem\n\n## vue-cli中如何使用px2rem\n\n### 实际开发中，我们通过设计稿得到的值单位是 px，所以要将 px 转换成 rem 再写进样式中。将 px 转换成 rem 我们将使用 px2rem 这个工具，它有 webpack 的 loader：px2rem-loader\n\n## 安装 px2rem-loader\n\n### 在命令行中运行如下安装：\n\n\tnpm i px2rem-loader --save-dev\n\n## 配置 px2rem-loader\n\n1/25/2019 4:36:17 PM \n### 在 vue-cli 生成的 webpack 配置中，vue-loader 的 options 和其他样式文件 loader 最终是都是由 build/utils.js 里的一个方法生成的。\n\n### 我们只需在 cssLoader 后再加上一个 px2remLoader 即可，px2rem-loader 的 remUnit 选项意思是 1rem=多少像素，结合 lib-flexible 的方案，我们将 px2remLoader 的 options.remUnit 设置成设计稿宽度的 1/10，这里我们假设设计稿宽为 750px。\n\n\t// utils.js\n\tvar cssLoader = {\n\tloader: 'css-loader',\n\t    options: {\n\t    sourceMap: options.sourceMap\n\t  }\n\t}\n\tvar px2remLoader = {\n\tloader: 'px2rem-loader',\n\t    options: {\n\t    remUnit: 75\n\t  }\n\t}\n\n## 并放进 loaders 数组中\n\n\t// utils.js\n\tfunction generateLoaders(loader, loaderOptions) {\n\t    var loaders = [cssLoader, px2remLoader]\n\t}\n\n## 也可以动态的根据可视窗口的大小来设置[在这里写一个计算]\n\n\tconst size = 200\n\tconst screen = 375\n\tconst flexFn = () => {\n\t    const windowWidth = window.outerWidth\n\t    const ratio = windowWidth / screen\n\t    const newSize = ratio * (size / 2)\n\t\n\t    document.querySelector('html').style.fontSize = newSize + \"px\"\n\t}\n\t\n\tflexFn()\n\t\n\twindow.addEventListener(\"resize\", () => {\n\t    flexFn()\n\t},false)\n\n直接将该js引入到main.js中即可\n\n\n## 修改配置后需要重启，然后我们在组件中写单位直接写 px，设计稿量多少就可以写多少了，舒服多了。","source":"_posts/px2rem.md","raw":"---\ntitle: px2rem 移动端自适应方案\ndate: ' 1/25/2019 4:36:42 PM '\ntag: ['js', 'vue' , 'vue-cli' , 'px2rem']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n----------\n\n1/25/2019 4:36:42 PM\n\n----------\n\n# px2rem\n\n## vue-cli中如何使用px2rem\n\n### 实际开发中，我们通过设计稿得到的值单位是 px，所以要将 px 转换成 rem 再写进样式中。将 px 转换成 rem 我们将使用 px2rem 这个工具，它有 webpack 的 loader：px2rem-loader\n\n## 安装 px2rem-loader\n\n### 在命令行中运行如下安装：\n\n\tnpm i px2rem-loader --save-dev\n\n## 配置 px2rem-loader\n\n1/25/2019 4:36:17 PM \n### 在 vue-cli 生成的 webpack 配置中，vue-loader 的 options 和其他样式文件 loader 最终是都是由 build/utils.js 里的一个方法生成的。\n\n### 我们只需在 cssLoader 后再加上一个 px2remLoader 即可，px2rem-loader 的 remUnit 选项意思是 1rem=多少像素，结合 lib-flexible 的方案，我们将 px2remLoader 的 options.remUnit 设置成设计稿宽度的 1/10，这里我们假设设计稿宽为 750px。\n\n\t// utils.js\n\tvar cssLoader = {\n\tloader: 'css-loader',\n\t    options: {\n\t    sourceMap: options.sourceMap\n\t  }\n\t}\n\tvar px2remLoader = {\n\tloader: 'px2rem-loader',\n\t    options: {\n\t    remUnit: 75\n\t  }\n\t}\n\n## 并放进 loaders 数组中\n\n\t// utils.js\n\tfunction generateLoaders(loader, loaderOptions) {\n\t    var loaders = [cssLoader, px2remLoader]\n\t}\n\n## 也可以动态的根据可视窗口的大小来设置[在这里写一个计算]\n\n\tconst size = 200\n\tconst screen = 375\n\tconst flexFn = () => {\n\t    const windowWidth = window.outerWidth\n\t    const ratio = windowWidth / screen\n\t    const newSize = ratio * (size / 2)\n\t\n\t    document.querySelector('html').style.fontSize = newSize + \"px\"\n\t}\n\t\n\tflexFn()\n\t\n\twindow.addEventListener(\"resize\", () => {\n\t    flexFn()\n\t},false)\n\n直接将该js引入到main.js中即可\n\n\n## 修改配置后需要重启，然后我们在组件中写单位直接写 px，设计稿量多少就可以写多少了，舒服多了。","slug":"px2rem","published":1,"updated":"2019-01-26T10:52:24.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxav00075owdx3pg6156","content":"<hr>\n<p>1/25/2019 4:36:42 PM</p>\n<hr>\n<h1 id=\"px2rem\"><a href=\"#px2rem\" class=\"headerlink\" title=\"px2rem\"></a>px2rem</h1><h2 id=\"vue-cli中如何使用px2rem\"><a href=\"#vue-cli中如何使用px2rem\" class=\"headerlink\" title=\"vue-cli中如何使用px2rem\"></a>vue-cli中如何使用px2rem</h2><h3 id=\"实际开发中，我们通过设计稿得到的值单位是-px，所以要将-px-转换成-rem-再写进样式中。将-px-转换成-rem-我们将使用-px2rem-这个工具，它有-webpack-的-loader：px2rem-loader\"><a href=\"#实际开发中，我们通过设计稿得到的值单位是-px，所以要将-px-转换成-rem-再写进样式中。将-px-转换成-rem-我们将使用-px2rem-这个工具，它有-webpack-的-loader：px2rem-loader\" class=\"headerlink\" title=\"实际开发中，我们通过设计稿得到的值单位是 px，所以要将 px 转换成 rem 再写进样式中。将 px 转换成 rem 我们将使用 px2rem 这个工具，它有 webpack 的 loader：px2rem-loader\"></a>实际开发中，我们通过设计稿得到的值单位是 px，所以要将 px 转换成 rem 再写进样式中。将 px 转换成 rem 我们将使用 px2rem 这个工具，它有 webpack 的 loader：px2rem-loader</h3><h2 id=\"安装-px2rem-loader\"><a href=\"#安装-px2rem-loader\" class=\"headerlink\" title=\"安装 px2rem-loader\"></a>安装 px2rem-loader</h2><h3 id=\"在命令行中运行如下安装：\"><a href=\"#在命令行中运行如下安装：\" class=\"headerlink\" title=\"在命令行中运行如下安装：\"></a>在命令行中运行如下安装：</h3><pre><code>npm i px2rem-loader --save-dev\n</code></pre><h2 id=\"配置-px2rem-loader\"><a href=\"#配置-px2rem-loader\" class=\"headerlink\" title=\"配置 px2rem-loader\"></a>配置 px2rem-loader</h2><p>1/25/2019 4:36:17 PM </p>\n<h3 id=\"在-vue-cli-生成的-webpack-配置中，vue-loader-的-options-和其他样式文件-loader-最终是都是由-build-utils-js-里的一个方法生成的。\"><a href=\"#在-vue-cli-生成的-webpack-配置中，vue-loader-的-options-和其他样式文件-loader-最终是都是由-build-utils-js-里的一个方法生成的。\" class=\"headerlink\" title=\"在 vue-cli 生成的 webpack 配置中，vue-loader 的 options 和其他样式文件 loader 最终是都是由 build/utils.js 里的一个方法生成的。\"></a>在 vue-cli 生成的 webpack 配置中，vue-loader 的 options 和其他样式文件 loader 最终是都是由 build/utils.js 里的一个方法生成的。</h3><h3 id=\"我们只需在-cssLoader-后再加上一个-px2remLoader-即可，px2rem-loader-的-remUnit-选项意思是-1rem-多少像素，结合-lib-flexible-的方案，我们将-px2remLoader-的-options-remUnit-设置成设计稿宽度的-1-10，这里我们假设设计稿宽为-750px。\"><a href=\"#我们只需在-cssLoader-后再加上一个-px2remLoader-即可，px2rem-loader-的-remUnit-选项意思是-1rem-多少像素，结合-lib-flexible-的方案，我们将-px2remLoader-的-options-remUnit-设置成设计稿宽度的-1-10，这里我们假设设计稿宽为-750px。\" class=\"headerlink\" title=\"我们只需在 cssLoader 后再加上一个 px2remLoader 即可，px2rem-loader 的 remUnit 选项意思是 1rem=多少像素，结合 lib-flexible 的方案，我们将 px2remLoader 的 options.remUnit 设置成设计稿宽度的 1/10，这里我们假设设计稿宽为 750px。\"></a>我们只需在 cssLoader 后再加上一个 px2remLoader 即可，px2rem-loader 的 remUnit 选项意思是 1rem=多少像素，结合 lib-flexible 的方案，我们将 px2remLoader 的 options.remUnit 设置成设计稿宽度的 1/10，这里我们假设设计稿宽为 750px。</h3><pre><code>// utils.js\nvar cssLoader = {\nloader: &#39;css-loader&#39;,\n    options: {\n    sourceMap: options.sourceMap\n  }\n}\nvar px2remLoader = {\nloader: &#39;px2rem-loader&#39;,\n    options: {\n    remUnit: 75\n  }\n}\n</code></pre><h2 id=\"并放进-loaders-数组中\"><a href=\"#并放进-loaders-数组中\" class=\"headerlink\" title=\"并放进 loaders 数组中\"></a>并放进 loaders 数组中</h2><pre><code>// utils.js\nfunction generateLoaders(loader, loaderOptions) {\n    var loaders = [cssLoader, px2remLoader]\n}\n</code></pre><h2 id=\"也可以动态的根据可视窗口的大小来设置-在这里写一个计算\"><a href=\"#也可以动态的根据可视窗口的大小来设置-在这里写一个计算\" class=\"headerlink\" title=\"也可以动态的根据可视窗口的大小来设置[在这里写一个计算]\"></a>也可以动态的根据可视窗口的大小来设置[在这里写一个计算]</h2><pre><code>const size = 200\nconst screen = 375\nconst flexFn = () =&gt; {\n    const windowWidth = window.outerWidth\n    const ratio = windowWidth / screen\n    const newSize = ratio * (size / 2)\n\n    document.querySelector(&#39;html&#39;).style.fontSize = newSize + &quot;px&quot;\n}\n\nflexFn()\n\nwindow.addEventListener(&quot;resize&quot;, () =&gt; {\n    flexFn()\n},false)\n</code></pre><p>直接将该js引入到main.js中即可</p>\n<h2 id=\"修改配置后需要重启，然后我们在组件中写单位直接写-px，设计稿量多少就可以写多少了，舒服多了。\"><a href=\"#修改配置后需要重启，然后我们在组件中写单位直接写-px，设计稿量多少就可以写多少了，舒服多了。\" class=\"headerlink\" title=\"修改配置后需要重启，然后我们在组件中写单位直接写 px，设计稿量多少就可以写多少了，舒服多了。\"></a>修改配置后需要重启，然后我们在组件中写单位直接写 px，设计稿量多少就可以写多少了，舒服多了。</h2>","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>1/25/2019 4:36:42 PM</p>\n<hr>\n<h1 id=\"px2rem\"><a href=\"#px2rem\" class=\"headerlink\" title=\"px2rem\"></a>px2rem</h1><h2 id=\"vue-cli中如何使用px2rem\"><a href=\"#vue-cli中如何使用px2rem\" class=\"headerlink\" title=\"vue-cli中如何使用px2rem\"></a>vue-cli中如何使用px2rem</h2><h3 id=\"实际开发中，我们通过设计稿得到的值单位是-px，所以要将-px-转换成-rem-再写进样式中。将-px-转换成-rem-我们将使用-px2rem-这个工具，它有-webpack-的-loader：px2rem-loader\"><a href=\"#实际开发中，我们通过设计稿得到的值单位是-px，所以要将-px-转换成-rem-再写进样式中。将-px-转换成-rem-我们将使用-px2rem-这个工具，它有-webpack-的-loader：px2rem-loader\" class=\"headerlink\" title=\"实际开发中，我们通过设计稿得到的值单位是 px，所以要将 px 转换成 rem 再写进样式中。将 px 转换成 rem 我们将使用 px2rem 这个工具，它有 webpack 的 loader：px2rem-loader\"></a>实际开发中，我们通过设计稿得到的值单位是 px，所以要将 px 转换成 rem 再写进样式中。将 px 转换成 rem 我们将使用 px2rem 这个工具，它有 webpack 的 loader：px2rem-loader</h3><h2 id=\"安装-px2rem-loader\"><a href=\"#安装-px2rem-loader\" class=\"headerlink\" title=\"安装 px2rem-loader\"></a>安装 px2rem-loader</h2><h3 id=\"在命令行中运行如下安装：\"><a href=\"#在命令行中运行如下安装：\" class=\"headerlink\" title=\"在命令行中运行如下安装：\"></a>在命令行中运行如下安装：</h3><pre><code>npm i px2rem-loader --save-dev\n</code></pre><h2 id=\"配置-px2rem-loader\"><a href=\"#配置-px2rem-loader\" class=\"headerlink\" title=\"配置 px2rem-loader\"></a>配置 px2rem-loader</h2><p>1/25/2019 4:36:17 PM </p>\n<h3 id=\"在-vue-cli-生成的-webpack-配置中，vue-loader-的-options-和其他样式文件-loader-最终是都是由-build-utils-js-里的一个方法生成的。\"><a href=\"#在-vue-cli-生成的-webpack-配置中，vue-loader-的-options-和其他样式文件-loader-最终是都是由-build-utils-js-里的一个方法生成的。\" class=\"headerlink\" title=\"在 vue-cli 生成的 webpack 配置中，vue-loader 的 options 和其他样式文件 loader 最终是都是由 build/utils.js 里的一个方法生成的。\"></a>在 vue-cli 生成的 webpack 配置中，vue-loader 的 options 和其他样式文件 loader 最终是都是由 build/utils.js 里的一个方法生成的。</h3><h3 id=\"我们只需在-cssLoader-后再加上一个-px2remLoader-即可，px2rem-loader-的-remUnit-选项意思是-1rem-多少像素，结合-lib-flexible-的方案，我们将-px2remLoader-的-options-remUnit-设置成设计稿宽度的-1-10，这里我们假设设计稿宽为-750px。\"><a href=\"#我们只需在-cssLoader-后再加上一个-px2remLoader-即可，px2rem-loader-的-remUnit-选项意思是-1rem-多少像素，结合-lib-flexible-的方案，我们将-px2remLoader-的-options-remUnit-设置成设计稿宽度的-1-10，这里我们假设设计稿宽为-750px。\" class=\"headerlink\" title=\"我们只需在 cssLoader 后再加上一个 px2remLoader 即可，px2rem-loader 的 remUnit 选项意思是 1rem=多少像素，结合 lib-flexible 的方案，我们将 px2remLoader 的 options.remUnit 设置成设计稿宽度的 1/10，这里我们假设设计稿宽为 750px。\"></a>我们只需在 cssLoader 后再加上一个 px2remLoader 即可，px2rem-loader 的 remUnit 选项意思是 1rem=多少像素，结合 lib-flexible 的方案，我们将 px2remLoader 的 options.remUnit 设置成设计稿宽度的 1/10，这里我们假设设计稿宽为 750px。</h3><pre><code>// utils.js\nvar cssLoader = {\nloader: &#39;css-loader&#39;,\n    options: {\n    sourceMap: options.sourceMap\n  }\n}\nvar px2remLoader = {\nloader: &#39;px2rem-loader&#39;,\n    options: {\n    remUnit: 75\n  }\n}\n</code></pre><h2 id=\"并放进-loaders-数组中\"><a href=\"#并放进-loaders-数组中\" class=\"headerlink\" title=\"并放进 loaders 数组中\"></a>并放进 loaders 数组中</h2><pre><code>// utils.js\nfunction generateLoaders(loader, loaderOptions) {\n    var loaders = [cssLoader, px2remLoader]\n}\n</code></pre><h2 id=\"也可以动态的根据可视窗口的大小来设置-在这里写一个计算\"><a href=\"#也可以动态的根据可视窗口的大小来设置-在这里写一个计算\" class=\"headerlink\" title=\"也可以动态的根据可视窗口的大小来设置[在这里写一个计算]\"></a>也可以动态的根据可视窗口的大小来设置[在这里写一个计算]</h2><pre><code>const size = 200\nconst screen = 375\nconst flexFn = () =&gt; {\n    const windowWidth = window.outerWidth\n    const ratio = windowWidth / screen\n    const newSize = ratio * (size / 2)\n\n    document.querySelector(&#39;html&#39;).style.fontSize = newSize + &quot;px&quot;\n}\n\nflexFn()\n\nwindow.addEventListener(&quot;resize&quot;, () =&gt; {\n    flexFn()\n},false)\n</code></pre><p>直接将该js引入到main.js中即可</p>\n<h2 id=\"修改配置后需要重启，然后我们在组件中写单位直接写-px，设计稿量多少就可以写多少了，舒服多了。\"><a href=\"#修改配置后需要重启，然后我们在组件中写单位直接写-px，设计稿量多少就可以写多少了，舒服多了。\" class=\"headerlink\" title=\"修改配置后需要重启，然后我们在组件中写单位直接写 px，设计稿量多少就可以写多少了，舒服多了。\"></a>修改配置后需要重启，然后我们在组件中写单位直接写 px，设计稿量多少就可以写多少了，舒服多了。</h2>"},{"title":"Vue transfrom属性","date":"2019-01-27T05:40:31.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"# Vue transfrom属性\n\n## vue中的动画可以使用transfrom组件完成\n\n### transfrom组件提供两个过渡状态\n\n> 进入 enter\n\n> 离开 leave\n\n### 每个状态有三个步骤【自动添加类名 v代表的是transfrom组件上的name属性指定的值】\n- v-enter v-enter-active v-enter-to\n- v-leave v-leave-active v-leave-to\n\n> ### 通过结合css过渡动画和关键帧动画可以实现切换动画\n\n### 动画触发场景\n\n1. 跟组件初始化渲染\n2. v-show，v-if，component动态组件切换的时候\n3. router-view 路由切换的时候\n\n### transfrom 组件还可以通过属性去改变不同状态自动添加的class类名\n\n- enter-active-class=\"animated slideInDown\"\n- leave-active-class=\"animated bounceOutDown\"\n\n### 这种方式适合配合第三方动画库实现动画\n\n\t<transition\n\tv-on:before-enter=\"berforeEnter\"\t\t\t//可以做一些初始化样式设置\n\tv-on:enter=\"enter\"\t\t\t\t\t\t\t//执行js操作dom完成的动画效果\n\tv-on:after-enter=\"afterEnter\"\t\t\t\t//动画执行结束（也就是在enter中调用了done函数）\n\tv-on:enter-cancelled=\"enterCancelled\"\t\t动画还没有结束，就执行下一次动画了，这时候不会触发动画结束，而是触发这个时间（取消）\n\tv-on:before-leave=\"beforeLeave\"\n\tv-on:leave=\"leave\"\n\tv-on:after-leave=\"afterLeave\"\n\tv-on:leave-cancelled=\"leaveCancelled\"\t\n\t>\n\t<!--...-->\n\t</transition>","source":"_posts/transition.md","raw":"---\ntitle: Vue transfrom属性\ndate: '2019-01-27 13:40:31'\ntag: ['transfrom', 'vue']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n# Vue transfrom属性\n\n## vue中的动画可以使用transfrom组件完成\n\n### transfrom组件提供两个过渡状态\n\n> 进入 enter\n\n> 离开 leave\n\n### 每个状态有三个步骤【自动添加类名 v代表的是transfrom组件上的name属性指定的值】\n- v-enter v-enter-active v-enter-to\n- v-leave v-leave-active v-leave-to\n\n> ### 通过结合css过渡动画和关键帧动画可以实现切换动画\n\n### 动画触发场景\n\n1. 跟组件初始化渲染\n2. v-show，v-if，component动态组件切换的时候\n3. router-view 路由切换的时候\n\n### transfrom 组件还可以通过属性去改变不同状态自动添加的class类名\n\n- enter-active-class=\"animated slideInDown\"\n- leave-active-class=\"animated bounceOutDown\"\n\n### 这种方式适合配合第三方动画库实现动画\n\n\t<transition\n\tv-on:before-enter=\"berforeEnter\"\t\t\t//可以做一些初始化样式设置\n\tv-on:enter=\"enter\"\t\t\t\t\t\t\t//执行js操作dom完成的动画效果\n\tv-on:after-enter=\"afterEnter\"\t\t\t\t//动画执行结束（也就是在enter中调用了done函数）\n\tv-on:enter-cancelled=\"enterCancelled\"\t\t动画还没有结束，就执行下一次动画了，这时候不会触发动画结束，而是触发这个时间（取消）\n\tv-on:before-leave=\"beforeLeave\"\n\tv-on:leave=\"leave\"\n\tv-on:after-leave=\"afterLeave\"\n\tv-on:leave-cancelled=\"leaveCancelled\"\t\n\t>\n\t<!--...-->\n\t</transition>","slug":"transition","published":1,"updated":"2019-01-27T05:41:06.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxaw00085owd1pnuabaq","content":"<h1 id=\"Vue-transfrom属性\"><a href=\"#Vue-transfrom属性\" class=\"headerlink\" title=\"Vue transfrom属性\"></a>Vue transfrom属性</h1><h2 id=\"vue中的动画可以使用transfrom组件完成\"><a href=\"#vue中的动画可以使用transfrom组件完成\" class=\"headerlink\" title=\"vue中的动画可以使用transfrom组件完成\"></a>vue中的动画可以使用transfrom组件完成</h2><h3 id=\"transfrom组件提供两个过渡状态\"><a href=\"#transfrom组件提供两个过渡状态\" class=\"headerlink\" title=\"transfrom组件提供两个过渡状态\"></a>transfrom组件提供两个过渡状态</h3><blockquote>\n<p>进入 enter</p>\n</blockquote>\n<blockquote>\n<p>离开 leave</p>\n</blockquote>\n<h3 id=\"每个状态有三个步骤【自动添加类名-v代表的是transfrom组件上的name属性指定的值】\"><a href=\"#每个状态有三个步骤【自动添加类名-v代表的是transfrom组件上的name属性指定的值】\" class=\"headerlink\" title=\"每个状态有三个步骤【自动添加类名 v代表的是transfrom组件上的name属性指定的值】\"></a>每个状态有三个步骤【自动添加类名 v代表的是transfrom组件上的name属性指定的值】</h3><ul>\n<li>v-enter v-enter-active v-enter-to</li>\n<li>v-leave v-leave-active v-leave-to</li>\n</ul>\n<blockquote>\n<h3 id=\"通过结合css过渡动画和关键帧动画可以实现切换动画\"><a href=\"#通过结合css过渡动画和关键帧动画可以实现切换动画\" class=\"headerlink\" title=\"通过结合css过渡动画和关键帧动画可以实现切换动画\"></a>通过结合css过渡动画和关键帧动画可以实现切换动画</h3></blockquote>\n<h3 id=\"动画触发场景\"><a href=\"#动画触发场景\" class=\"headerlink\" title=\"动画触发场景\"></a>动画触发场景</h3><ol>\n<li>跟组件初始化渲染</li>\n<li>v-show，v-if，component动态组件切换的时候</li>\n<li>router-view 路由切换的时候</li>\n</ol>\n<h3 id=\"transfrom-组件还可以通过属性去改变不同状态自动添加的class类名\"><a href=\"#transfrom-组件还可以通过属性去改变不同状态自动添加的class类名\" class=\"headerlink\" title=\"transfrom 组件还可以通过属性去改变不同状态自动添加的class类名\"></a>transfrom 组件还可以通过属性去改变不同状态自动添加的class类名</h3><ul>\n<li>enter-active-class=”animated slideInDown”</li>\n<li>leave-active-class=”animated bounceOutDown”</li>\n</ul>\n<h3 id=\"这种方式适合配合第三方动画库实现动画\"><a href=\"#这种方式适合配合第三方动画库实现动画\" class=\"headerlink\" title=\"这种方式适合配合第三方动画库实现动画\"></a>这种方式适合配合第三方动画库实现动画</h3><pre><code>&lt;transition\nv-on:before-enter=&quot;berforeEnter&quot;            //可以做一些初始化样式设置\nv-on:enter=&quot;enter&quot;                            //执行js操作dom完成的动画效果\nv-on:after-enter=&quot;afterEnter&quot;                //动画执行结束（也就是在enter中调用了done函数）\nv-on:enter-cancelled=&quot;enterCancelled&quot;        动画还没有结束，就执行下一次动画了，这时候不会触发动画结束，而是触发这个时间（取消）\nv-on:before-leave=&quot;beforeLeave&quot;\nv-on:leave=&quot;leave&quot;\nv-on:after-leave=&quot;afterLeave&quot;\nv-on:leave-cancelled=&quot;leaveCancelled&quot;    \n&gt;\n&lt;!--...--&gt;\n&lt;/transition&gt;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vue-transfrom属性\"><a href=\"#Vue-transfrom属性\" class=\"headerlink\" title=\"Vue transfrom属性\"></a>Vue transfrom属性</h1><h2 id=\"vue中的动画可以使用transfrom组件完成\"><a href=\"#vue中的动画可以使用transfrom组件完成\" class=\"headerlink\" title=\"vue中的动画可以使用transfrom组件完成\"></a>vue中的动画可以使用transfrom组件完成</h2><h3 id=\"transfrom组件提供两个过渡状态\"><a href=\"#transfrom组件提供两个过渡状态\" class=\"headerlink\" title=\"transfrom组件提供两个过渡状态\"></a>transfrom组件提供两个过渡状态</h3><blockquote>\n<p>进入 enter</p>\n</blockquote>\n<blockquote>\n<p>离开 leave</p>\n</blockquote>\n<h3 id=\"每个状态有三个步骤【自动添加类名-v代表的是transfrom组件上的name属性指定的值】\"><a href=\"#每个状态有三个步骤【自动添加类名-v代表的是transfrom组件上的name属性指定的值】\" class=\"headerlink\" title=\"每个状态有三个步骤【自动添加类名 v代表的是transfrom组件上的name属性指定的值】\"></a>每个状态有三个步骤【自动添加类名 v代表的是transfrom组件上的name属性指定的值】</h3><ul>\n<li>v-enter v-enter-active v-enter-to</li>\n<li>v-leave v-leave-active v-leave-to</li>\n</ul>\n<blockquote>\n<h3 id=\"通过结合css过渡动画和关键帧动画可以实现切换动画\"><a href=\"#通过结合css过渡动画和关键帧动画可以实现切换动画\" class=\"headerlink\" title=\"通过结合css过渡动画和关键帧动画可以实现切换动画\"></a>通过结合css过渡动画和关键帧动画可以实现切换动画</h3></blockquote>\n<h3 id=\"动画触发场景\"><a href=\"#动画触发场景\" class=\"headerlink\" title=\"动画触发场景\"></a>动画触发场景</h3><ol>\n<li>跟组件初始化渲染</li>\n<li>v-show，v-if，component动态组件切换的时候</li>\n<li>router-view 路由切换的时候</li>\n</ol>\n<h3 id=\"transfrom-组件还可以通过属性去改变不同状态自动添加的class类名\"><a href=\"#transfrom-组件还可以通过属性去改变不同状态自动添加的class类名\" class=\"headerlink\" title=\"transfrom 组件还可以通过属性去改变不同状态自动添加的class类名\"></a>transfrom 组件还可以通过属性去改变不同状态自动添加的class类名</h3><ul>\n<li>enter-active-class=”animated slideInDown”</li>\n<li>leave-active-class=”animated bounceOutDown”</li>\n</ul>\n<h3 id=\"这种方式适合配合第三方动画库实现动画\"><a href=\"#这种方式适合配合第三方动画库实现动画\" class=\"headerlink\" title=\"这种方式适合配合第三方动画库实现动画\"></a>这种方式适合配合第三方动画库实现动画</h3><pre><code>&lt;transition\nv-on:before-enter=&quot;berforeEnter&quot;            //可以做一些初始化样式设置\nv-on:enter=&quot;enter&quot;                            //执行js操作dom完成的动画效果\nv-on:after-enter=&quot;afterEnter&quot;                //动画执行结束（也就是在enter中调用了done函数）\nv-on:enter-cancelled=&quot;enterCancelled&quot;        动画还没有结束，就执行下一次动画了，这时候不会触发动画结束，而是触发这个时间（取消）\nv-on:before-leave=&quot;beforeLeave&quot;\nv-on:leave=&quot;leave&quot;\nv-on:after-leave=&quot;afterLeave&quot;\nv-on:leave-cancelled=&quot;leaveCancelled&quot;    \n&gt;\n&lt;!--...--&gt;\n&lt;/transition&gt;\n</code></pre>"},{"title":"Vue构造器及其实例化概念","date":"2019-01-28T12:25:44.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"# Vue构造器及其实例化概念\n\n----------\n\n\n## Vue构造器\n\n## [附官方文档](https://cn.vuejs.org/v2/api/#Vue-extend)\n\n> ### 简单介绍\n\n### Vue.extend(options)\n\n#### **参数**: 对象\n\n#### **用法**: 使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中,data选项中必须是函数\n\n#### **描述**：Vue.extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue.component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\n\n\n> ### 简单举例\n\n#### 自定义无参数标签\n\n下面的代码中的author就是返回的“扩展实例构造器”\n\n\tvar author = Vue.extend({\n\t template: \"<p><a :href='url'>{{author}}</a></p>\",\n\t data : function() {\n\t  return {\n\t   author : 'vamous',\n\t   url : 'http://blog.csdn.net/Dear_Mr/article/details/72614370'\n\t  }\n\t }\n\t});\n\n###对应的html如下：\n\n\t<author></author>\n\n### 此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\n\n\tnew author().$mount('author');\n\n### 使用propsData\n\n\tvar author = Vue.extend({\n\t template: \"<p><a :href='url'>{{author}} & {{name}}</a></p>\",\n\t data : function() {\n\t  return {\n\t   author : 'vamous',\n\t   url : 'http://blog.csdn.net/Dear_Mr/article/details/72614370'\n\t  }\n\t },\n\t props : ['name']\n\t});\n\t \n\tnew author({propsData: {name : 'dear_mr'}}).$mount('#author');\n\n### 可以利用propsData传递参数\n\n**挂载在普通标签上**\n\n返回的扩展实例构造器的方式和上面还是一样的，只是html里不再是自定义标签，而是一个普通标签，比如div\n\n\t<div id=\"author\"></div>\n\n\tnew author().$mount('author');\n\n其实对于同一个扩展构造器而言，它的每一个实例其实是可以挂载到不同的标签上的，比如我可以这样\n\n\tnew author().$mount('#author');\n\n\tnew author().$mount('author');\n\n这两个标签的内容会一同显示，结果一样\n\n## 总结\n\n> **Vue。extend(object)//扩展的子类需要Vue实例化才能使用，如果需要传递props，需要在new的时候通过propsData传递**\n\n\n----------\n\n\n> \n> $mount()手动执行组件的渲染，如果传递一个选择器，就会渲染选择器内部，如果传递只会生成dom不会执行渲染，需要手动将el挂载到页面\n\n\n----------\n\n\n> **$destroy()手动销毁组件，但是如果将dom移动将不会销毁dom，需要手动销毁**\n> \n\n----------\n\n\n> **$nextTick()生命周期updated的替代方案，因为在updated中只是得知组件需要重新渲染，但并不知道是哪个属性改变了，而nextTick()当属性改变并且渲染完成的回调，类似于react中的setState的回调函数**\n> \n\n----------\n\n\n    适用场景\n    \n    使用扩展子类方式创建的组件适合开发使用api的方法调用\n\n## 以上就是对Vue.extend构造器的实例详解","source":"_posts/vue extend.md","raw":"---\ntitle: Vue构造器及其实例化概念\ndate: '1/28/2019 8:25:44 PM '\ntag: ['vue构造器', 'vue', 'vue extend']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n# Vue构造器及其实例化概念\n\n----------\n\n\n## Vue构造器\n\n## [附官方文档](https://cn.vuejs.org/v2/api/#Vue-extend)\n\n> ### 简单介绍\n\n### Vue.extend(options)\n\n#### **参数**: 对象\n\n#### **用法**: 使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中,data选项中必须是函数\n\n#### **描述**：Vue.extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue.component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\n\n\n> ### 简单举例\n\n#### 自定义无参数标签\n\n下面的代码中的author就是返回的“扩展实例构造器”\n\n\tvar author = Vue.extend({\n\t template: \"<p><a :href='url'>{{author}}</a></p>\",\n\t data : function() {\n\t  return {\n\t   author : 'vamous',\n\t   url : 'http://blog.csdn.net/Dear_Mr/article/details/72614370'\n\t  }\n\t }\n\t});\n\n###对应的html如下：\n\n\t<author></author>\n\n### 此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\n\n\tnew author().$mount('author');\n\n### 使用propsData\n\n\tvar author = Vue.extend({\n\t template: \"<p><a :href='url'>{{author}} & {{name}}</a></p>\",\n\t data : function() {\n\t  return {\n\t   author : 'vamous',\n\t   url : 'http://blog.csdn.net/Dear_Mr/article/details/72614370'\n\t  }\n\t },\n\t props : ['name']\n\t});\n\t \n\tnew author({propsData: {name : 'dear_mr'}}).$mount('#author');\n\n### 可以利用propsData传递参数\n\n**挂载在普通标签上**\n\n返回的扩展实例构造器的方式和上面还是一样的，只是html里不再是自定义标签，而是一个普通标签，比如div\n\n\t<div id=\"author\"></div>\n\n\tnew author().$mount('author');\n\n其实对于同一个扩展构造器而言，它的每一个实例其实是可以挂载到不同的标签上的，比如我可以这样\n\n\tnew author().$mount('#author');\n\n\tnew author().$mount('author');\n\n这两个标签的内容会一同显示，结果一样\n\n## 总结\n\n> **Vue。extend(object)//扩展的子类需要Vue实例化才能使用，如果需要传递props，需要在new的时候通过propsData传递**\n\n\n----------\n\n\n> \n> $mount()手动执行组件的渲染，如果传递一个选择器，就会渲染选择器内部，如果传递只会生成dom不会执行渲染，需要手动将el挂载到页面\n\n\n----------\n\n\n> **$destroy()手动销毁组件，但是如果将dom移动将不会销毁dom，需要手动销毁**\n> \n\n----------\n\n\n> **$nextTick()生命周期updated的替代方案，因为在updated中只是得知组件需要重新渲染，但并不知道是哪个属性改变了，而nextTick()当属性改变并且渲染完成的回调，类似于react中的setState的回调函数**\n> \n\n----------\n\n\n    适用场景\n    \n    使用扩展子类方式创建的组件适合开发使用api的方法调用\n\n## 以上就是对Vue.extend构造器的实例详解","slug":"vue extend","published":1,"updated":"2019-01-29T03:30:10.135Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxay000a5owdbcwpjfug","content":"<h1 id=\"Vue构造器及其实例化概念\"><a href=\"#Vue构造器及其实例化概念\" class=\"headerlink\" title=\"Vue构造器及其实例化概念\"></a>Vue构造器及其实例化概念</h1><hr>\n<h2 id=\"Vue构造器\"><a href=\"#Vue构造器\" class=\"headerlink\" title=\"Vue构造器\"></a>Vue构造器</h2><h2 id=\"附官方文档\"><a href=\"#附官方文档\" class=\"headerlink\" title=\"附官方文档\"></a><a href=\"https://cn.vuejs.org/v2/api/#Vue-extend\" target=\"_blank\" rel=\"noopener\">附官方文档</a></h2><blockquote>\n<h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3></blockquote>\n<h3 id=\"Vue-extend-options\"><a href=\"#Vue-extend-options\" class=\"headerlink\" title=\"Vue.extend(options)\"></a>Vue.extend(options)</h3><h4 id=\"参数-对象\"><a href=\"#参数-对象\" class=\"headerlink\" title=\"参数: 对象\"></a><strong>参数</strong>: 对象</h4><h4 id=\"用法-使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中-data选项中必须是函数\"><a href=\"#用法-使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中-data选项中必须是函数\" class=\"headerlink\" title=\"用法: 使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中,data选项中必须是函数\"></a><strong>用法</strong>: 使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中,data选项中必须是函数</h4><h4 id=\"描述：Vue-extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue-component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\"><a href=\"#描述：Vue-extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue-component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\" class=\"headerlink\" title=\"描述：Vue.extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue.component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\"></a><strong>描述</strong>：Vue.extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue.component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上</h4><blockquote>\n<h3 id=\"简单举例\"><a href=\"#简单举例\" class=\"headerlink\" title=\"简单举例\"></a>简单举例</h3></blockquote>\n<h4 id=\"自定义无参数标签\"><a href=\"#自定义无参数标签\" class=\"headerlink\" title=\"自定义无参数标签\"></a>自定义无参数标签</h4><p>下面的代码中的author就是返回的“扩展实例构造器”</p>\n<pre><code>var author = Vue.extend({\n template: &quot;&lt;p&gt;&lt;a :href=&#39;url&#39;&gt;{{author}}&lt;/a&gt;&lt;/p&gt;&quot;,\n data : function() {\n  return {\n   author : &#39;vamous&#39;,\n   url : &#39;http://blog.csdn.net/Dear_Mr/article/details/72614370&#39;\n  }\n }\n});\n</code></pre><p>###对应的html如下：</p>\n<pre><code>&lt;author&gt;&lt;/author&gt;\n</code></pre><h3 id=\"此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\"><a href=\"#此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\" class=\"headerlink\" title=\"此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\"></a>此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下</h3><pre><code>new author().$mount(&#39;author&#39;);\n</code></pre><h3 id=\"使用propsData\"><a href=\"#使用propsData\" class=\"headerlink\" title=\"使用propsData\"></a>使用propsData</h3><pre><code>var author = Vue.extend({\n template: &quot;&lt;p&gt;&lt;a :href=&#39;url&#39;&gt;{{author}} &amp; {{name}}&lt;/a&gt;&lt;/p&gt;&quot;,\n data : function() {\n  return {\n   author : &#39;vamous&#39;,\n   url : &#39;http://blog.csdn.net/Dear_Mr/article/details/72614370&#39;\n  }\n },\n props : [&#39;name&#39;]\n});\n\nnew author({propsData: {name : &#39;dear_mr&#39;}}).$mount(&#39;#author&#39;);\n</code></pre><h3 id=\"可以利用propsData传递参数\"><a href=\"#可以利用propsData传递参数\" class=\"headerlink\" title=\"可以利用propsData传递参数\"></a>可以利用propsData传递参数</h3><p><strong>挂载在普通标签上</strong></p>\n<p>返回的扩展实例构造器的方式和上面还是一样的，只是html里不再是自定义标签，而是一个普通标签，比如div</p>\n<pre><code>&lt;div id=&quot;author&quot;&gt;&lt;/div&gt;\n\nnew author().$mount(&#39;author&#39;);\n</code></pre><p>其实对于同一个扩展构造器而言，它的每一个实例其实是可以挂载到不同的标签上的，比如我可以这样</p>\n<pre><code>new author().$mount(&#39;#author&#39;);\n\nnew author().$mount(&#39;author&#39;);\n</code></pre><p>这两个标签的内容会一同显示，结果一样</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><blockquote>\n<p><strong>Vue。extend(object)//扩展的子类需要Vue实例化才能使用，如果需要传递props，需要在new的时候通过propsData传递</strong></p>\n</blockquote>\n<hr>\n<blockquote>\n<p>$mount()手动执行组件的渲染，如果传递一个选择器，就会渲染选择器内部，如果传递只会生成dom不会执行渲染，需要手动将el挂载到页面</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>$destroy()手动销毁组件，但是如果将dom移动将不会销毁dom，需要手动销毁</strong></p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>$nextTick()生命周期updated的替代方案，因为在updated中只是得知组件需要重新渲染，但并不知道是哪个属性改变了，而nextTick()当属性改变并且渲染完成的回调，类似于react中的setState的回调函数</strong></p>\n</blockquote>\n<hr>\n<pre><code>适用场景\n\n使用扩展子类方式创建的组件适合开发使用api的方法调用\n</code></pre><h2 id=\"以上就是对Vue-extend构造器的实例详解\"><a href=\"#以上就是对Vue-extend构造器的实例详解\" class=\"headerlink\" title=\"以上就是对Vue.extend构造器的实例详解\"></a>以上就是对Vue.extend构造器的实例详解</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vue构造器及其实例化概念\"><a href=\"#Vue构造器及其实例化概念\" class=\"headerlink\" title=\"Vue构造器及其实例化概念\"></a>Vue构造器及其实例化概念</h1><hr>\n<h2 id=\"Vue构造器\"><a href=\"#Vue构造器\" class=\"headerlink\" title=\"Vue构造器\"></a>Vue构造器</h2><h2 id=\"附官方文档\"><a href=\"#附官方文档\" class=\"headerlink\" title=\"附官方文档\"></a><a href=\"https://cn.vuejs.org/v2/api/#Vue-extend\" target=\"_blank\" rel=\"noopener\">附官方文档</a></h2><blockquote>\n<h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3></blockquote>\n<h3 id=\"Vue-extend-options\"><a href=\"#Vue-extend-options\" class=\"headerlink\" title=\"Vue.extend(options)\"></a>Vue.extend(options)</h3><h4 id=\"参数-对象\"><a href=\"#参数-对象\" class=\"headerlink\" title=\"参数: 对象\"></a><strong>参数</strong>: 对象</h4><h4 id=\"用法-使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中-data选项中必须是函数\"><a href=\"#用法-使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中-data选项中必须是函数\" class=\"headerlink\" title=\"用法: 使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中,data选项中必须是函数\"></a><strong>用法</strong>: 使用Vue构造器，创建一个“子类”，参数是一个包含组件选项的对象，其中,data选项中必须是函数</h4><h4 id=\"描述：Vue-extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue-component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\"><a href=\"#描述：Vue-extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue-component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\" class=\"headerlink\" title=\"描述：Vue.extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue.component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上\"></a><strong>描述</strong>：Vue.extend返回的是一个“扩展实例构造器”，也就是预设了部分选项的Vue的实例构造器，它常常服务于Vue.component用来生成组件，可以简单理解为当在模板中遇到该组件作为标签的自定义元素时，会自动调用“扩展实例构造器”来生产组件实例，并挂在到自定义元素上</h4><blockquote>\n<h3 id=\"简单举例\"><a href=\"#简单举例\" class=\"headerlink\" title=\"简单举例\"></a>简单举例</h3></blockquote>\n<h4 id=\"自定义无参数标签\"><a href=\"#自定义无参数标签\" class=\"headerlink\" title=\"自定义无参数标签\"></a>自定义无参数标签</h4><p>下面的代码中的author就是返回的“扩展实例构造器”</p>\n<pre><code>var author = Vue.extend({\n template: &quot;&lt;p&gt;&lt;a :href=&#39;url&#39;&gt;{{author}}&lt;/a&gt;&lt;/p&gt;&quot;,\n data : function() {\n  return {\n   author : &#39;vamous&#39;,\n   url : &#39;http://blog.csdn.net/Dear_Mr/article/details/72614370&#39;\n  }\n }\n});\n</code></pre><p>###对应的html如下：</p>\n<pre><code>&lt;author&gt;&lt;/author&gt;\n</code></pre><h3 id=\"此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\"><a href=\"#此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\" class=\"headerlink\" title=\"此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下\"></a>此时的页面必然是没有任何效果的，因为扩展实例构造器还需要挂载，如下</h3><pre><code>new author().$mount(&#39;author&#39;);\n</code></pre><h3 id=\"使用propsData\"><a href=\"#使用propsData\" class=\"headerlink\" title=\"使用propsData\"></a>使用propsData</h3><pre><code>var author = Vue.extend({\n template: &quot;&lt;p&gt;&lt;a :href=&#39;url&#39;&gt;{{author}} &amp; {{name}}&lt;/a&gt;&lt;/p&gt;&quot;,\n data : function() {\n  return {\n   author : &#39;vamous&#39;,\n   url : &#39;http://blog.csdn.net/Dear_Mr/article/details/72614370&#39;\n  }\n },\n props : [&#39;name&#39;]\n});\n\nnew author({propsData: {name : &#39;dear_mr&#39;}}).$mount(&#39;#author&#39;);\n</code></pre><h3 id=\"可以利用propsData传递参数\"><a href=\"#可以利用propsData传递参数\" class=\"headerlink\" title=\"可以利用propsData传递参数\"></a>可以利用propsData传递参数</h3><p><strong>挂载在普通标签上</strong></p>\n<p>返回的扩展实例构造器的方式和上面还是一样的，只是html里不再是自定义标签，而是一个普通标签，比如div</p>\n<pre><code>&lt;div id=&quot;author&quot;&gt;&lt;/div&gt;\n\nnew author().$mount(&#39;author&#39;);\n</code></pre><p>其实对于同一个扩展构造器而言，它的每一个实例其实是可以挂载到不同的标签上的，比如我可以这样</p>\n<pre><code>new author().$mount(&#39;#author&#39;);\n\nnew author().$mount(&#39;author&#39;);\n</code></pre><p>这两个标签的内容会一同显示，结果一样</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><blockquote>\n<p><strong>Vue。extend(object)//扩展的子类需要Vue实例化才能使用，如果需要传递props，需要在new的时候通过propsData传递</strong></p>\n</blockquote>\n<hr>\n<blockquote>\n<p>$mount()手动执行组件的渲染，如果传递一个选择器，就会渲染选择器内部，如果传递只会生成dom不会执行渲染，需要手动将el挂载到页面</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>$destroy()手动销毁组件，但是如果将dom移动将不会销毁dom，需要手动销毁</strong></p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>$nextTick()生命周期updated的替代方案，因为在updated中只是得知组件需要重新渲染，但并不知道是哪个属性改变了，而nextTick()当属性改变并且渲染完成的回调，类似于react中的setState的回调函数</strong></p>\n</blockquote>\n<hr>\n<pre><code>适用场景\n\n使用扩展子类方式创建的组件适合开发使用api的方法调用\n</code></pre><h2 id=\"以上就是对Vue-extend构造器的实例详解\"><a href=\"#以上就是对Vue-extend构造器的实例详解\" class=\"headerlink\" title=\"以上就是对Vue.extend构造器的实例详解\"></a>以上就是对Vue.extend构造器的实例详解</h2>"},{"title":"关于Vue全局的扩展","date":"2019-01-28T12:03:34.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"\n# 关于Vue全局的扩展\n\n----------\n\n\n## Vue的全局组件\n\n### 我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\n\n#### 在Vue官方文档中介绍的是使用Vue.component(tagName, options)来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue.use()来“安装”全局组件，就显得更轻一些。 \n\n#### 方法：\n\n- 1.新建一个plugins文件夹 \n- 2.在文件夹中创建放置全局组件的文件components.js \n- 3.在components.js文件中引入所有要注册的全局组件 \n- 4.在app.js根实例文件中，引入components.js\n\n### 以login组件为例\n\n### login.js\n\n    import Login from '../components/eg.vue';\n\texport default (Vue)=>{\n    \tVue.component(\"Login\",Login);\n\t}\n\n\n### app.js\n\n    import components from './plugins/components.js';\n\tVue.use(components);\n\n### 经过上述编写后，就注册了全局组件Login。\n\n## Vue全局指令\n\n### 对于全局指令的注册，官方文档给出的方法是使用Vue.directive()，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app.js文件将变得臃肿无比。 \n#### 因此，同上面的注册全局组件方法相似，也是使用Vue.use()来“安装”全局指令。 \n\n#### 方法：\n- 1.新建一个plugins文件夹 \n- 2.在文件夹中创建放置全局组件的文件directives.js \n- 3.在directives.js文件中引入所有要注册的全局指令 \n- 4.在app.js根实例文件中，引入directives.js\n\n#### 以v-focus指令为例： \n#### directives.js:\n\t    export default (Vue)=>{\n\t\t    Vue.directive(\"focus\",{\n\t\t        inserted:function(el){\n\t\t            el.focus();\n\t\t        }\n\t\t    })\n\t\t}\n\n#### app.js\n\n    import directives from \"./plugins/directives.js\"\n\tVue.use(directives);\n\n### 这样就注册了全局指令\n\n## 扩展Vue类方法\n\n### 很简单再此不做更多描述.....\n\n#### 直接看代码。》 。\n\n    Vue.coke = function () {\n\t\tconsole.log(\"扩展了coke类方法\")\n\t}\n\n### 简单吧！！！！！\n\n## 扩展Vue原型，在vue组件中就可以通过this来访问\n\n### 废话不多说上代码\n\n\tVue.prototype.$api = function () {\n\t\tconsole.log(\"扩展了$api方法\")\n\t}\n\n### ...................\n\n## Vue过滤器\n\n### Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：|\n    <!-- 在双花括号中 -->\n\t{{ message | capitalize }}\n\t\n\t<!-- 在 `v-bind` 中 -->\n\t<div v-bind:id=\"rawId | formatId\"></div>\n\n### 可以在一个组件的选项中定义本地的过滤器：\n\n### 以截取手机为例\n\n\tfilters: {\n\t  \tphones (num) {\n\t\t\tlet phoneStr = num.toString()\n\t\t\tlet res = /(\\d{1,})(\\d{4})/\n\t\t\twhile (reg.test(phoneStr.replace)) {\n\t\t\t\tphoneStr = phoneStr.replace(reg, '$1-$2')\n\t\t\t}\n\t\t\treturn phoneStr\n\t\t}\n\t}\n\n\n\t//调用\n\n\t{{17603446842 | phones}}\n\n\t//返回结果\n\n\t176-0344-6842\n\n### 全局过滤器\n\n\tVue.filter(\"phones\",function(num){\n\t  \tlet phoneStr = num.toString()\n\t\tlet res = /(\\d{1,})(\\d{4})/\n\t\twhile (reg.test(phoneStr.replace)) {\n\t\t\tphoneStr = phoneStr.replace(reg, '$1-$2')\n\t\t}\n\t\treturn phoneStr\n\t})\n\n### 来吧，举一个实用一点的例子\n\n### 上代码\n\n\tvar app5 = new Vue({\n    \tel: '#app5',\n\t    data: {\n\t        shoppingList: [\n\t            \"Milk\", \"Donuts\", \"Cookies\", \"Chocolate\", \"Peanut Butter\", \"Pepto Bismol\", \"Pepto Bismol (Chocolate flavor)\", \"Pepto Bismol (Cookie flavor)\"\n\t        ],\n\t        key: \"\"\n\t    },\n\t    computed: {\n\t        filterShoppingList: function () {\n\t            // `this` points to the vm instance\n\t            var key = this.key;\n\t            var shoppingList = this.shoppingList;\n\t            //在使用filter时需要注意的是，前面调用的是需要使用filter的数组，而给filter函数传入的是数组中的每个item，也就是说filter里面的函数，是每个item要去做的，并将每个结果返回。\n\t            return shoppingList.filter(function (item) {\n\t                return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n\t            });;\n        \t}\n    \t}\n\t})\n\n### template\n\n\t\t<ul>\n\t\t    Filter Key\n\t\t\t<input type=\"text\" v-model=\"key\">   \n\t       \t<li v-for=\"item in filterShoppingList\">\n\t           {{ item }}\n\t       \t</li>\n   \t\t</ul> \n\n### 最终效果实现了根据关键字来过滤列表的功能。   \n\n     \t","source":"_posts/vue block.md","raw":"---\ntitle: 关于Vue全局的扩展\ndate: '1/28/2019 8:03:34 PM '\ntag: ['vue全局组件', 'vue', 'vue指令', 'vue过滤器','directive']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n\n# 关于Vue全局的扩展\n\n----------\n\n\n## Vue的全局组件\n\n### 我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\n\n#### 在Vue官方文档中介绍的是使用Vue.component(tagName, options)来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue.use()来“安装”全局组件，就显得更轻一些。 \n\n#### 方法：\n\n- 1.新建一个plugins文件夹 \n- 2.在文件夹中创建放置全局组件的文件components.js \n- 3.在components.js文件中引入所有要注册的全局组件 \n- 4.在app.js根实例文件中，引入components.js\n\n### 以login组件为例\n\n### login.js\n\n    import Login from '../components/eg.vue';\n\texport default (Vue)=>{\n    \tVue.component(\"Login\",Login);\n\t}\n\n\n### app.js\n\n    import components from './plugins/components.js';\n\tVue.use(components);\n\n### 经过上述编写后，就注册了全局组件Login。\n\n## Vue全局指令\n\n### 对于全局指令的注册，官方文档给出的方法是使用Vue.directive()，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app.js文件将变得臃肿无比。 \n#### 因此，同上面的注册全局组件方法相似，也是使用Vue.use()来“安装”全局指令。 \n\n#### 方法：\n- 1.新建一个plugins文件夹 \n- 2.在文件夹中创建放置全局组件的文件directives.js \n- 3.在directives.js文件中引入所有要注册的全局指令 \n- 4.在app.js根实例文件中，引入directives.js\n\n#### 以v-focus指令为例： \n#### directives.js:\n\t    export default (Vue)=>{\n\t\t    Vue.directive(\"focus\",{\n\t\t        inserted:function(el){\n\t\t            el.focus();\n\t\t        }\n\t\t    })\n\t\t}\n\n#### app.js\n\n    import directives from \"./plugins/directives.js\"\n\tVue.use(directives);\n\n### 这样就注册了全局指令\n\n## 扩展Vue类方法\n\n### 很简单再此不做更多描述.....\n\n#### 直接看代码。》 。\n\n    Vue.coke = function () {\n\t\tconsole.log(\"扩展了coke类方法\")\n\t}\n\n### 简单吧！！！！！\n\n## 扩展Vue原型，在vue组件中就可以通过this来访问\n\n### 废话不多说上代码\n\n\tVue.prototype.$api = function () {\n\t\tconsole.log(\"扩展了$api方法\")\n\t}\n\n### ...................\n\n## Vue过滤器\n\n### Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：|\n    <!-- 在双花括号中 -->\n\t{{ message | capitalize }}\n\t\n\t<!-- 在 `v-bind` 中 -->\n\t<div v-bind:id=\"rawId | formatId\"></div>\n\n### 可以在一个组件的选项中定义本地的过滤器：\n\n### 以截取手机为例\n\n\tfilters: {\n\t  \tphones (num) {\n\t\t\tlet phoneStr = num.toString()\n\t\t\tlet res = /(\\d{1,})(\\d{4})/\n\t\t\twhile (reg.test(phoneStr.replace)) {\n\t\t\t\tphoneStr = phoneStr.replace(reg, '$1-$2')\n\t\t\t}\n\t\t\treturn phoneStr\n\t\t}\n\t}\n\n\n\t//调用\n\n\t{{17603446842 | phones}}\n\n\t//返回结果\n\n\t176-0344-6842\n\n### 全局过滤器\n\n\tVue.filter(\"phones\",function(num){\n\t  \tlet phoneStr = num.toString()\n\t\tlet res = /(\\d{1,})(\\d{4})/\n\t\twhile (reg.test(phoneStr.replace)) {\n\t\t\tphoneStr = phoneStr.replace(reg, '$1-$2')\n\t\t}\n\t\treturn phoneStr\n\t})\n\n### 来吧，举一个实用一点的例子\n\n### 上代码\n\n\tvar app5 = new Vue({\n    \tel: '#app5',\n\t    data: {\n\t        shoppingList: [\n\t            \"Milk\", \"Donuts\", \"Cookies\", \"Chocolate\", \"Peanut Butter\", \"Pepto Bismol\", \"Pepto Bismol (Chocolate flavor)\", \"Pepto Bismol (Cookie flavor)\"\n\t        ],\n\t        key: \"\"\n\t    },\n\t    computed: {\n\t        filterShoppingList: function () {\n\t            // `this` points to the vm instance\n\t            var key = this.key;\n\t            var shoppingList = this.shoppingList;\n\t            //在使用filter时需要注意的是，前面调用的是需要使用filter的数组，而给filter函数传入的是数组中的每个item，也就是说filter里面的函数，是每个item要去做的，并将每个结果返回。\n\t            return shoppingList.filter(function (item) {\n\t                return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n\t            });;\n        \t}\n    \t}\n\t})\n\n### template\n\n\t\t<ul>\n\t\t    Filter Key\n\t\t\t<input type=\"text\" v-model=\"key\">   \n\t       \t<li v-for=\"item in filterShoppingList\">\n\t           {{ item }}\n\t       \t</li>\n   \t\t</ul> \n\n### 最终效果实现了根据关键字来过滤列表的功能。   \n\n     \t","slug":"vue block","published":1,"updated":"2019-01-28T12:46:28.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxb0000b5owdbatxg1qx","content":"<h1 id=\"关于Vue全局的扩展\"><a href=\"#关于Vue全局的扩展\" class=\"headerlink\" title=\"关于Vue全局的扩展\"></a>关于Vue全局的扩展</h1><hr>\n<h2 id=\"Vue的全局组件\"><a href=\"#Vue的全局组件\" class=\"headerlink\" title=\"Vue的全局组件\"></a>Vue的全局组件</h2><h3 id=\"我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\"><a href=\"#我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\" class=\"headerlink\" title=\"我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\"></a>我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？</h3><h4 id=\"在Vue官方文档中介绍的是使用Vue-component-tagName-options-来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue-use-来“安装”全局组件，就显得更轻一些。\"><a href=\"#在Vue官方文档中介绍的是使用Vue-component-tagName-options-来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue-use-来“安装”全局组件，就显得更轻一些。\" class=\"headerlink\" title=\"在Vue官方文档中介绍的是使用Vue.component(tagName, options)来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue.use()来“安装”全局组件，就显得更轻一些。\"></a>在Vue官方文档中介绍的是使用Vue.component(tagName, options)来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue.use()来“安装”全局组件，就显得更轻一些。</h4><h4 id=\"方法：\"><a href=\"#方法：\" class=\"headerlink\" title=\"方法：\"></a>方法：</h4><ul>\n<li>1.新建一个plugins文件夹 </li>\n<li>2.在文件夹中创建放置全局组件的文件components.js </li>\n<li>3.在components.js文件中引入所有要注册的全局组件 </li>\n<li>4.在app.js根实例文件中，引入components.js</li>\n</ul>\n<h3 id=\"以login组件为例\"><a href=\"#以login组件为例\" class=\"headerlink\" title=\"以login组件为例\"></a>以login组件为例</h3><h3 id=\"login-js\"><a href=\"#login-js\" class=\"headerlink\" title=\"login.js\"></a>login.js</h3><pre><code>import Login from &#39;../components/eg.vue&#39;;\nexport default (Vue)=&gt;{\n    Vue.component(&quot;Login&quot;,Login);\n}\n</code></pre><h3 id=\"app-js\"><a href=\"#app-js\" class=\"headerlink\" title=\"app.js\"></a>app.js</h3><pre><code>import components from &#39;./plugins/components.js&#39;;\nVue.use(components);\n</code></pre><h3 id=\"经过上述编写后，就注册了全局组件Login。\"><a href=\"#经过上述编写后，就注册了全局组件Login。\" class=\"headerlink\" title=\"经过上述编写后，就注册了全局组件Login。\"></a>经过上述编写后，就注册了全局组件Login。</h3><h2 id=\"Vue全局指令\"><a href=\"#Vue全局指令\" class=\"headerlink\" title=\"Vue全局指令\"></a>Vue全局指令</h2><h3 id=\"对于全局指令的注册，官方文档给出的方法是使用Vue-directive-，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app-js文件将变得臃肿无比。\"><a href=\"#对于全局指令的注册，官方文档给出的方法是使用Vue-directive-，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app-js文件将变得臃肿无比。\" class=\"headerlink\" title=\"对于全局指令的注册，官方文档给出的方法是使用Vue.directive()，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app.js文件将变得臃肿无比。\"></a>对于全局指令的注册，官方文档给出的方法是使用Vue.directive()，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app.js文件将变得臃肿无比。</h3><h4 id=\"因此，同上面的注册全局组件方法相似，也是使用Vue-use-来“安装”全局指令。\"><a href=\"#因此，同上面的注册全局组件方法相似，也是使用Vue-use-来“安装”全局指令。\" class=\"headerlink\" title=\"因此，同上面的注册全局组件方法相似，也是使用Vue.use()来“安装”全局指令。\"></a>因此，同上面的注册全局组件方法相似，也是使用Vue.use()来“安装”全局指令。</h4><h4 id=\"方法：-1\"><a href=\"#方法：-1\" class=\"headerlink\" title=\"方法：\"></a>方法：</h4><ul>\n<li>1.新建一个plugins文件夹 </li>\n<li>2.在文件夹中创建放置全局组件的文件directives.js </li>\n<li>3.在directives.js文件中引入所有要注册的全局指令 </li>\n<li>4.在app.js根实例文件中，引入directives.js</li>\n</ul>\n<h4 id=\"以v-focus指令为例：\"><a href=\"#以v-focus指令为例：\" class=\"headerlink\" title=\"以v-focus指令为例：\"></a>以v-focus指令为例：</h4><h4 id=\"directives-js\"><a href=\"#directives-js\" class=\"headerlink\" title=\"directives.js:\"></a>directives.js:</h4><pre><code>    export default (Vue)=&gt;{\n        Vue.directive(&quot;focus&quot;,{\n            inserted:function(el){\n                el.focus();\n            }\n        })\n    }\n</code></pre><h4 id=\"app-js-1\"><a href=\"#app-js-1\" class=\"headerlink\" title=\"app.js\"></a>app.js</h4><pre><code>import directives from &quot;./plugins/directives.js&quot;\nVue.use(directives);\n</code></pre><h3 id=\"这样就注册了全局指令\"><a href=\"#这样就注册了全局指令\" class=\"headerlink\" title=\"这样就注册了全局指令\"></a>这样就注册了全局指令</h3><h2 id=\"扩展Vue类方法\"><a href=\"#扩展Vue类方法\" class=\"headerlink\" title=\"扩展Vue类方法\"></a>扩展Vue类方法</h2><h3 id=\"很简单再此不做更多描述…\"><a href=\"#很简单再此不做更多描述…\" class=\"headerlink\" title=\"很简单再此不做更多描述…..\"></a>很简单再此不做更多描述…..</h3><h4 id=\"直接看代码。》-。\"><a href=\"#直接看代码。》-。\" class=\"headerlink\" title=\"直接看代码。》 。\"></a>直接看代码。》 。</h4><pre><code>Vue.coke = function () {\n    console.log(&quot;扩展了coke类方法&quot;)\n}\n</code></pre><h3 id=\"简单吧！！！！！\"><a href=\"#简单吧！！！！！\" class=\"headerlink\" title=\"简单吧！！！！！\"></a>简单吧！！！！！</h3><h2 id=\"扩展Vue原型，在vue组件中就可以通过this来访问\"><a href=\"#扩展Vue原型，在vue组件中就可以通过this来访问\" class=\"headerlink\" title=\"扩展Vue原型，在vue组件中就可以通过this来访问\"></a>扩展Vue原型，在vue组件中就可以通过this来访问</h2><h3 id=\"废话不多说上代码\"><a href=\"#废话不多说上代码\" class=\"headerlink\" title=\"废话不多说上代码\"></a>废话不多说上代码</h3><pre><code>Vue.prototype.$api = function () {\n    console.log(&quot;扩展了$api方法&quot;)\n}\n</code></pre><h3 id=\"………………\"><a href=\"#………………\" class=\"headerlink\" title=\"……………….\"></a>……………….</h3><h2 id=\"Vue过滤器\"><a href=\"#Vue过滤器\" class=\"headerlink\" title=\"Vue过滤器\"></a>Vue过滤器</h2><h3 id=\"Vue-js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：\"><a href=\"#Vue-js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：\" class=\"headerlink\" title=\"Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：|\"></a>Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：|</h3><pre><code>&lt;!-- 在双花括号中 --&gt;\n{{ message | capitalize }}\n\n&lt;!-- 在 `v-bind` 中 --&gt;\n&lt;div v-bind:id=&quot;rawId | formatId&quot;&gt;&lt;/div&gt;\n</code></pre><h3 id=\"可以在一个组件的选项中定义本地的过滤器：\"><a href=\"#可以在一个组件的选项中定义本地的过滤器：\" class=\"headerlink\" title=\"可以在一个组件的选项中定义本地的过滤器：\"></a>可以在一个组件的选项中定义本地的过滤器：</h3><h3 id=\"以截取手机为例\"><a href=\"#以截取手机为例\" class=\"headerlink\" title=\"以截取手机为例\"></a>以截取手机为例</h3><pre><code>filters: {\n      phones (num) {\n        let phoneStr = num.toString()\n        let res = /(\\d{1,})(\\d{4})/\n        while (reg.test(phoneStr.replace)) {\n            phoneStr = phoneStr.replace(reg, &#39;$1-$2&#39;)\n        }\n        return phoneStr\n    }\n}\n\n\n//调用\n\n{{17603446842 | phones}}\n\n//返回结果\n\n176-0344-6842\n</code></pre><h3 id=\"全局过滤器\"><a href=\"#全局过滤器\" class=\"headerlink\" title=\"全局过滤器\"></a>全局过滤器</h3><pre><code>Vue.filter(&quot;phones&quot;,function(num){\n      let phoneStr = num.toString()\n    let res = /(\\d{1,})(\\d{4})/\n    while (reg.test(phoneStr.replace)) {\n        phoneStr = phoneStr.replace(reg, &#39;$1-$2&#39;)\n    }\n    return phoneStr\n})\n</code></pre><h3 id=\"来吧，举一个实用一点的例子\"><a href=\"#来吧，举一个实用一点的例子\" class=\"headerlink\" title=\"来吧，举一个实用一点的例子\"></a>来吧，举一个实用一点的例子</h3><h3 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h3><pre><code>var app5 = new Vue({\n    el: &#39;#app5&#39;,\n    data: {\n        shoppingList: [\n            &quot;Milk&quot;, &quot;Donuts&quot;, &quot;Cookies&quot;, &quot;Chocolate&quot;, &quot;Peanut Butter&quot;, &quot;Pepto Bismol&quot;, &quot;Pepto Bismol (Chocolate flavor)&quot;, &quot;Pepto Bismol (Cookie flavor)&quot;\n        ],\n        key: &quot;&quot;\n    },\n    computed: {\n        filterShoppingList: function () {\n            // `this` points to the vm instance\n            var key = this.key;\n            var shoppingList = this.shoppingList;\n            //在使用filter时需要注意的是，前面调用的是需要使用filter的数组，而给filter函数传入的是数组中的每个item，也就是说filter里面的函数，是每个item要去做的，并将每个结果返回。\n            return shoppingList.filter(function (item) {\n                return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n            });;\n        }\n    }\n})\n</code></pre><h3 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h3><pre><code>    &lt;ul&gt;\n        Filter Key\n        &lt;input type=&quot;text&quot; v-model=&quot;key&quot;&gt;   \n           &lt;li v-for=&quot;item in filterShoppingList&quot;&gt;\n           {{ item }}\n           &lt;/li&gt;\n       &lt;/ul&gt; \n</code></pre><h3 id=\"最终效果实现了根据关键字来过滤列表的功能。\"><a href=\"#最终效果实现了根据关键字来过滤列表的功能。\" class=\"headerlink\" title=\"最终效果实现了根据关键字来过滤列表的功能。\"></a>最终效果实现了根据关键字来过滤列表的功能。</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于Vue全局的扩展\"><a href=\"#关于Vue全局的扩展\" class=\"headerlink\" title=\"关于Vue全局的扩展\"></a>关于Vue全局的扩展</h1><hr>\n<h2 id=\"Vue的全局组件\"><a href=\"#Vue的全局组件\" class=\"headerlink\" title=\"Vue的全局组件\"></a>Vue的全局组件</h2><h3 id=\"我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\"><a href=\"#我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\" class=\"headerlink\" title=\"我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？\"></a>我们平时使用组件，需要经过引入，绑定两个步骤。那么，如果我们需要使用一些全局组件或者第三方的组件库怎么办呢？</h3><h4 id=\"在Vue官方文档中介绍的是使用Vue-component-tagName-options-来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue-use-来“安装”全局组件，就显得更轻一些。\"><a href=\"#在Vue官方文档中介绍的是使用Vue-component-tagName-options-来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue-use-来“安装”全局组件，就显得更轻一些。\" class=\"headerlink\" title=\"在Vue官方文档中介绍的是使用Vue.component(tagName, options)来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue.use()来“安装”全局组件，就显得更轻一些。\"></a>在Vue官方文档中介绍的是使用Vue.component(tagName, options)来创建一个全局组件。但是这种方法是与根实例写在同一个文件中，如果要同时注册多个全局组件，就会使根实例文件过重，因此使用Vue.use()来“安装”全局组件，就显得更轻一些。</h4><h4 id=\"方法：\"><a href=\"#方法：\" class=\"headerlink\" title=\"方法：\"></a>方法：</h4><ul>\n<li>1.新建一个plugins文件夹 </li>\n<li>2.在文件夹中创建放置全局组件的文件components.js </li>\n<li>3.在components.js文件中引入所有要注册的全局组件 </li>\n<li>4.在app.js根实例文件中，引入components.js</li>\n</ul>\n<h3 id=\"以login组件为例\"><a href=\"#以login组件为例\" class=\"headerlink\" title=\"以login组件为例\"></a>以login组件为例</h3><h3 id=\"login-js\"><a href=\"#login-js\" class=\"headerlink\" title=\"login.js\"></a>login.js</h3><pre><code>import Login from &#39;../components/eg.vue&#39;;\nexport default (Vue)=&gt;{\n    Vue.component(&quot;Login&quot;,Login);\n}\n</code></pre><h3 id=\"app-js\"><a href=\"#app-js\" class=\"headerlink\" title=\"app.js\"></a>app.js</h3><pre><code>import components from &#39;./plugins/components.js&#39;;\nVue.use(components);\n</code></pre><h3 id=\"经过上述编写后，就注册了全局组件Login。\"><a href=\"#经过上述编写后，就注册了全局组件Login。\" class=\"headerlink\" title=\"经过上述编写后，就注册了全局组件Login。\"></a>经过上述编写后，就注册了全局组件Login。</h3><h2 id=\"Vue全局指令\"><a href=\"#Vue全局指令\" class=\"headerlink\" title=\"Vue全局指令\"></a>Vue全局指令</h2><h3 id=\"对于全局指令的注册，官方文档给出的方法是使用Vue-directive-，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app-js文件将变得臃肿无比。\"><a href=\"#对于全局指令的注册，官方文档给出的方法是使用Vue-directive-，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app-js文件将变得臃肿无比。\" class=\"headerlink\" title=\"对于全局指令的注册，官方文档给出的方法是使用Vue.directive()，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app.js文件将变得臃肿无比。\"></a>对于全局指令的注册，官方文档给出的方法是使用Vue.directive()，位置同样是在根实例文件下，那么问题来了，如果多个全局指令，再加上多个全局组件，那么app.js文件将变得臃肿无比。</h3><h4 id=\"因此，同上面的注册全局组件方法相似，也是使用Vue-use-来“安装”全局指令。\"><a href=\"#因此，同上面的注册全局组件方法相似，也是使用Vue-use-来“安装”全局指令。\" class=\"headerlink\" title=\"因此，同上面的注册全局组件方法相似，也是使用Vue.use()来“安装”全局指令。\"></a>因此，同上面的注册全局组件方法相似，也是使用Vue.use()来“安装”全局指令。</h4><h4 id=\"方法：-1\"><a href=\"#方法：-1\" class=\"headerlink\" title=\"方法：\"></a>方法：</h4><ul>\n<li>1.新建一个plugins文件夹 </li>\n<li>2.在文件夹中创建放置全局组件的文件directives.js </li>\n<li>3.在directives.js文件中引入所有要注册的全局指令 </li>\n<li>4.在app.js根实例文件中，引入directives.js</li>\n</ul>\n<h4 id=\"以v-focus指令为例：\"><a href=\"#以v-focus指令为例：\" class=\"headerlink\" title=\"以v-focus指令为例：\"></a>以v-focus指令为例：</h4><h4 id=\"directives-js\"><a href=\"#directives-js\" class=\"headerlink\" title=\"directives.js:\"></a>directives.js:</h4><pre><code>    export default (Vue)=&gt;{\n        Vue.directive(&quot;focus&quot;,{\n            inserted:function(el){\n                el.focus();\n            }\n        })\n    }\n</code></pre><h4 id=\"app-js-1\"><a href=\"#app-js-1\" class=\"headerlink\" title=\"app.js\"></a>app.js</h4><pre><code>import directives from &quot;./plugins/directives.js&quot;\nVue.use(directives);\n</code></pre><h3 id=\"这样就注册了全局指令\"><a href=\"#这样就注册了全局指令\" class=\"headerlink\" title=\"这样就注册了全局指令\"></a>这样就注册了全局指令</h3><h2 id=\"扩展Vue类方法\"><a href=\"#扩展Vue类方法\" class=\"headerlink\" title=\"扩展Vue类方法\"></a>扩展Vue类方法</h2><h3 id=\"很简单再此不做更多描述…\"><a href=\"#很简单再此不做更多描述…\" class=\"headerlink\" title=\"很简单再此不做更多描述…..\"></a>很简单再此不做更多描述…..</h3><h4 id=\"直接看代码。》-。\"><a href=\"#直接看代码。》-。\" class=\"headerlink\" title=\"直接看代码。》 。\"></a>直接看代码。》 。</h4><pre><code>Vue.coke = function () {\n    console.log(&quot;扩展了coke类方法&quot;)\n}\n</code></pre><h3 id=\"简单吧！！！！！\"><a href=\"#简单吧！！！！！\" class=\"headerlink\" title=\"简单吧！！！！！\"></a>简单吧！！！！！</h3><h2 id=\"扩展Vue原型，在vue组件中就可以通过this来访问\"><a href=\"#扩展Vue原型，在vue组件中就可以通过this来访问\" class=\"headerlink\" title=\"扩展Vue原型，在vue组件中就可以通过this来访问\"></a>扩展Vue原型，在vue组件中就可以通过this来访问</h2><h3 id=\"废话不多说上代码\"><a href=\"#废话不多说上代码\" class=\"headerlink\" title=\"废话不多说上代码\"></a>废话不多说上代码</h3><pre><code>Vue.prototype.$api = function () {\n    console.log(&quot;扩展了$api方法&quot;)\n}\n</code></pre><h3 id=\"………………\"><a href=\"#………………\" class=\"headerlink\" title=\"……………….\"></a>……………….</h3><h2 id=\"Vue过滤器\"><a href=\"#Vue过滤器\" class=\"headerlink\" title=\"Vue过滤器\"></a>Vue过滤器</h2><h3 id=\"Vue-js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：\"><a href=\"#Vue-js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：\" class=\"headerlink\" title=\"Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：|\"></a>Vue.js允许自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和v-bind表达式。过滤器应该被添加在JavaScript表达式的尾部，由“管道”符号指示：|</h3><pre><code>&lt;!-- 在双花括号中 --&gt;\n{{ message | capitalize }}\n\n&lt;!-- 在 `v-bind` 中 --&gt;\n&lt;div v-bind:id=&quot;rawId | formatId&quot;&gt;&lt;/div&gt;\n</code></pre><h3 id=\"可以在一个组件的选项中定义本地的过滤器：\"><a href=\"#可以在一个组件的选项中定义本地的过滤器：\" class=\"headerlink\" title=\"可以在一个组件的选项中定义本地的过滤器：\"></a>可以在一个组件的选项中定义本地的过滤器：</h3><h3 id=\"以截取手机为例\"><a href=\"#以截取手机为例\" class=\"headerlink\" title=\"以截取手机为例\"></a>以截取手机为例</h3><pre><code>filters: {\n      phones (num) {\n        let phoneStr = num.toString()\n        let res = /(\\d{1,})(\\d{4})/\n        while (reg.test(phoneStr.replace)) {\n            phoneStr = phoneStr.replace(reg, &#39;$1-$2&#39;)\n        }\n        return phoneStr\n    }\n}\n\n\n//调用\n\n{{17603446842 | phones}}\n\n//返回结果\n\n176-0344-6842\n</code></pre><h3 id=\"全局过滤器\"><a href=\"#全局过滤器\" class=\"headerlink\" title=\"全局过滤器\"></a>全局过滤器</h3><pre><code>Vue.filter(&quot;phones&quot;,function(num){\n      let phoneStr = num.toString()\n    let res = /(\\d{1,})(\\d{4})/\n    while (reg.test(phoneStr.replace)) {\n        phoneStr = phoneStr.replace(reg, &#39;$1-$2&#39;)\n    }\n    return phoneStr\n})\n</code></pre><h3 id=\"来吧，举一个实用一点的例子\"><a href=\"#来吧，举一个实用一点的例子\" class=\"headerlink\" title=\"来吧，举一个实用一点的例子\"></a>来吧，举一个实用一点的例子</h3><h3 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h3><pre><code>var app5 = new Vue({\n    el: &#39;#app5&#39;,\n    data: {\n        shoppingList: [\n            &quot;Milk&quot;, &quot;Donuts&quot;, &quot;Cookies&quot;, &quot;Chocolate&quot;, &quot;Peanut Butter&quot;, &quot;Pepto Bismol&quot;, &quot;Pepto Bismol (Chocolate flavor)&quot;, &quot;Pepto Bismol (Cookie flavor)&quot;\n        ],\n        key: &quot;&quot;\n    },\n    computed: {\n        filterShoppingList: function () {\n            // `this` points to the vm instance\n            var key = this.key;\n            var shoppingList = this.shoppingList;\n            //在使用filter时需要注意的是，前面调用的是需要使用filter的数组，而给filter函数传入的是数组中的每个item，也就是说filter里面的函数，是每个item要去做的，并将每个结果返回。\n            return shoppingList.filter(function (item) {\n                return item.toLowerCase().indexOf(key.toLowerCase()) != -1\n            });;\n        }\n    }\n})\n</code></pre><h3 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h3><pre><code>    &lt;ul&gt;\n        Filter Key\n        &lt;input type=&quot;text&quot; v-model=&quot;key&quot;&gt;   \n           &lt;li v-for=&quot;item in filterShoppingList&quot;&gt;\n           {{ item }}\n           &lt;/li&gt;\n       &lt;/ul&gt; \n</code></pre><h3 id=\"最终效果实现了根据关键字来过滤列表的功能。\"><a href=\"#最终效果实现了根据关键字来过滤列表的功能。\" class=\"headerlink\" title=\"最终效果实现了根据关键字来过滤列表的功能。\"></a>最终效果实现了根据关键字来过滤列表的功能。</h3>"},{"title":"vue中的Dom操作","date":"2019-01-27T05:40:31.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"## vue中的Dom操作\n\n### 在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\n\n\n## dom操作的方法\n\n----------\n\n> \n> \n1. transition:组件中的钩子函数可以接受一个el属性，作用动画的dom，可以多dom添加实现动画效果\n2. ref：ref可以作用在dom元素和组件元素上，作用在dom元素上通过refs获取到就是dom节点，作用在组件元素上获取到组件实例\n3. 在mounted生命周期中我们可以使用document的dom的操作方法，比如添加一些滚动事件...\n4. #el：可以获取组件的根节点元素\n5. ￥mount()：可以手动渲染组件，成为真实的dom节点\n6. 事件中的e.target可以获取都绑定事件的dom，但不准确，因为获取到的是点击最内层的元素，当然如果作用在表单元素就无所谓\n7. 指令也可以操作dom的\n>  \n\n\n----------\n\n","source":"_posts/vue-dom.md","raw":"---\ntitle: vue中的Dom操作\ndate: '2019-01-27 13:40:31'\ntag: ['dom', 'vue']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n## vue中的Dom操作\n\n### 在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\n\n\n## dom操作的方法\n\n----------\n\n> \n> \n1. transition:组件中的钩子函数可以接受一个el属性，作用动画的dom，可以多dom添加实现动画效果\n2. ref：ref可以作用在dom元素和组件元素上，作用在dom元素上通过refs获取到就是dom节点，作用在组件元素上获取到组件实例\n3. 在mounted生命周期中我们可以使用document的dom的操作方法，比如添加一些滚动事件...\n4. #el：可以获取组件的根节点元素\n5. ￥mount()：可以手动渲染组件，成为真实的dom节点\n6. 事件中的e.target可以获取都绑定事件的dom，但不准确，因为获取到的是点击最内层的元素，当然如果作用在表单元素就无所谓\n7. 指令也可以操作dom的\n>  \n\n\n----------\n\n","slug":"vue-dom","published":1,"updated":"2019-01-27T05:41:00.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxb2000d5owdfpzbnjcz","content":"<h2 id=\"vue中的Dom操作\"><a href=\"#vue中的Dom操作\" class=\"headerlink\" title=\"vue中的Dom操作\"></a>vue中的Dom操作</h2><h3 id=\"在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\"><a href=\"#在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\" class=\"headerlink\" title=\"在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\"></a>在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作</h3><h2 id=\"dom操作的方法\"><a href=\"#dom操作的方法\" class=\"headerlink\" title=\"dom操作的方法\"></a>dom操作的方法</h2><hr>\n<blockquote>\n</blockquote>\n<ol>\n<li>transition:组件中的钩子函数可以接受一个el属性，作用动画的dom，可以多dom添加实现动画效果</li>\n<li>ref：ref可以作用在dom元素和组件元素上，作用在dom元素上通过refs获取到就是dom节点，作用在组件元素上获取到组件实例</li>\n<li>在mounted生命周期中我们可以使用document的dom的操作方法，比如添加一些滚动事件…</li>\n<li>#el：可以获取组件的根节点元素</li>\n<li>￥mount()：可以手动渲染组件，成为真实的dom节点</li>\n<li>事件中的e.target可以获取都绑定事件的dom，但不准确，因为获取到的是点击最内层的元素，当然如果作用在表单元素就无所谓</li>\n<li>指令也可以操作dom的<blockquote>\n</blockquote>\n</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vue中的Dom操作\"><a href=\"#vue中的Dom操作\" class=\"headerlink\" title=\"vue中的Dom操作\"></a>vue中的Dom操作</h2><h3 id=\"在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\"><a href=\"#在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\" class=\"headerlink\" title=\"在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作\"></a>在vue，react，。。。。以数据驱动视图的框架，都是通过数据更新视图，一般不使用dom操作，但是也有一些特定的时候需要用到dom操作</h3><h2 id=\"dom操作的方法\"><a href=\"#dom操作的方法\" class=\"headerlink\" title=\"dom操作的方法\"></a>dom操作的方法</h2><hr>\n<blockquote>\n</blockquote>\n<ol>\n<li>transition:组件中的钩子函数可以接受一个el属性，作用动画的dom，可以多dom添加实现动画效果</li>\n<li>ref：ref可以作用在dom元素和组件元素上，作用在dom元素上通过refs获取到就是dom节点，作用在组件元素上获取到组件实例</li>\n<li>在mounted生命周期中我们可以使用document的dom的操作方法，比如添加一些滚动事件…</li>\n<li>#el：可以获取组件的根节点元素</li>\n<li>￥mount()：可以手动渲染组件，成为真实的dom节点</li>\n<li>事件中的e.target可以获取都绑定事件的dom，但不准确，因为获取到的是点击最内层的元素，当然如果作用在表单元素就无所谓</li>\n<li>指令也可以操作dom的<blockquote>\n</blockquote>\n</li>\n</ol>\n<hr>\n"},{"title":"Vue slot-scope的理解（适合初学者）","date":"2018-08-04T08:46:31.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"\n\n# Vue slot-scope的理解（适合初学者）\n\n> 1/26/2019 2:58:04 PM \n\n----------\n\n> ##### Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\n\n\n> ### 实际上，插槽的概念很简单\n\n### slot \n\n- **概念：插槽，也就是槽，是组件的一块HTML模板，这块模板显示不显示，以及怎样显示由父组件来决定。**\n\n### 插槽可以分为3部分来说\n\n- **单个插槽**\n\n\t-------------------------\n\t- #### 首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\n\n\t- #### 单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\n\n> \t下面通过一个例子来展示。\n\n**父组件：**\n\n\t\t<div class=\"slot-righ\">\n                    <p>22222</p>\n                    <Slo>\n                        <div class=\"con\">\n                            111111\n                        </div>\n                    </Slo>\n                </div>\n\n**子组件：**\n\n\t\t<div class=\"sol\">\n\t\t    <p>11111</p>\n\t\t    <slot></slot>\n\t\t  </div>\n\n\n- **具名插槽**\n\t- 匿名插槽没有名称属性，所以是匿名插槽，那么，插槽加了名称属性，就变成了具名插槽。具名插槽可以在一个组件中出现Ñ次，出现在不同的位置。下面的例子，一个就是有两个具名插槽状语从句：单个插槽的组件，这三个插槽被父组件用同一套的CSS样式显示了出来，不同的是内容上略有区别。\n\n> \t\n> 下面通过一个例子来展示。\n\n**父组件：**\t\n\t\n\t<div class=\"slot-righ\">\n                <p>22222</p>\n                <Slo>\n                    <div class=\"con\" slot=\"up\">\n                        111111\n                    </div>\n                </Slo>\n            </div>\n\t\t\n**子组件：**\n\t\n\t<div class=\"sol\">\n        <p>11111</p>\n        <slot name=\"up\"></slot>//具名插槽\n      </div>\n\n- **作用域插槽| 带数据的插槽**\n\n\t- 最后，就是我们的作用域插槽。这个稍微难理解一点。官方叫它作用域插槽，实际上，对比前面两种插槽，我们可以叫它带数据的插槽。什么意思呢，就是前面两种，都是在组件的模板里面写\n\n> 下面通过一个例子来展示。\n\n**父组件：**\t\n\n\t<div class=\"slot-righ\">\n                    <p>22222</p>\n                    <Slo>\n                        <div class=\"con\" slot-scope=\"user\">//父组件拿到数据\n                            {{user.data}}\n                        </div>\n                    </Slo>\n                </div>\n\n**子组件：**\n\n\t<template>\n\t  <div class=\"sol\">\n\t    <p>11111</p>\n\t    <slot :data=\"data\"></slot>//这里再插槽上绑定数据\n\t  </div>\n\t</template>\n\t<script>\n\t\texport default {\n\t\t  data(){\n\t\t    return {\n\t\t      data:11111111\n\t\t    }\n\t\t  }\n\t\t}\n\t</script>\n\n> #### 正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\n","source":"_posts/vue slot-scope.md","raw":"---\ntitle: Vue slot-scope的理解（适合初学者）\ndate: '2018-08-04 16:46:31'\ntag: ['js', 'vue', 'slot']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n\n\n# Vue slot-scope的理解（适合初学者）\n\n> 1/26/2019 2:58:04 PM \n\n----------\n\n> ##### Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\n\n\n> ### 实际上，插槽的概念很简单\n\n### slot \n\n- **概念：插槽，也就是槽，是组件的一块HTML模板，这块模板显示不显示，以及怎样显示由父组件来决定。**\n\n### 插槽可以分为3部分来说\n\n- **单个插槽**\n\n\t-------------------------\n\t- #### 首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\n\n\t- #### 单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\n\n> \t下面通过一个例子来展示。\n\n**父组件：**\n\n\t\t<div class=\"slot-righ\">\n                    <p>22222</p>\n                    <Slo>\n                        <div class=\"con\">\n                            111111\n                        </div>\n                    </Slo>\n                </div>\n\n**子组件：**\n\n\t\t<div class=\"sol\">\n\t\t    <p>11111</p>\n\t\t    <slot></slot>\n\t\t  </div>\n\n\n- **具名插槽**\n\t- 匿名插槽没有名称属性，所以是匿名插槽，那么，插槽加了名称属性，就变成了具名插槽。具名插槽可以在一个组件中出现Ñ次，出现在不同的位置。下面的例子，一个就是有两个具名插槽状语从句：单个插槽的组件，这三个插槽被父组件用同一套的CSS样式显示了出来，不同的是内容上略有区别。\n\n> \t\n> 下面通过一个例子来展示。\n\n**父组件：**\t\n\t\n\t<div class=\"slot-righ\">\n                <p>22222</p>\n                <Slo>\n                    <div class=\"con\" slot=\"up\">\n                        111111\n                    </div>\n                </Slo>\n            </div>\n\t\t\n**子组件：**\n\t\n\t<div class=\"sol\">\n        <p>11111</p>\n        <slot name=\"up\"></slot>//具名插槽\n      </div>\n\n- **作用域插槽| 带数据的插槽**\n\n\t- 最后，就是我们的作用域插槽。这个稍微难理解一点。官方叫它作用域插槽，实际上，对比前面两种插槽，我们可以叫它带数据的插槽。什么意思呢，就是前面两种，都是在组件的模板里面写\n\n> 下面通过一个例子来展示。\n\n**父组件：**\t\n\n\t<div class=\"slot-righ\">\n                    <p>22222</p>\n                    <Slo>\n                        <div class=\"con\" slot-scope=\"user\">//父组件拿到数据\n                            {{user.data}}\n                        </div>\n                    </Slo>\n                </div>\n\n**子组件：**\n\n\t<template>\n\t  <div class=\"sol\">\n\t    <p>11111</p>\n\t    <slot :data=\"data\"></slot>//这里再插槽上绑定数据\n\t  </div>\n\t</template>\n\t<script>\n\t\texport default {\n\t\t  data(){\n\t\t    return {\n\t\t      data:11111111\n\t\t    }\n\t\t  }\n\t\t}\n\t</script>\n\n> #### 正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\n","slug":"vue slot-scope","published":1,"updated":"2019-01-26T06:58:37.138Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxb4000f5owd9eel6q3s","content":"<h1 id=\"Vue-slot-scope的理解（适合初学者）\"><a href=\"#Vue-slot-scope的理解（适合初学者）\" class=\"headerlink\" title=\"Vue slot-scope的理解（适合初学者）\"></a>Vue slot-scope的理解（适合初学者）</h1><blockquote>\n<p>1/26/2019 2:58:04 PM </p>\n</blockquote>\n<hr>\n<blockquote>\n<h5 id=\"Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\"><a href=\"#Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\" class=\"headerlink\" title=\"Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\"></a>Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。</h5></blockquote>\n<blockquote>\n<h3 id=\"实际上，插槽的概念很简单\"><a href=\"#实际上，插槽的概念很简单\" class=\"headerlink\" title=\"实际上，插槽的概念很简单\"></a>实际上，插槽的概念很简单</h3></blockquote>\n<h3 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h3><ul>\n<li><strong>概念：插槽，也就是槽，是组件的一块HTML模板，这块模板显示不显示，以及怎样显示由父组件来决定。</strong></li>\n</ul>\n<h3 id=\"插槽可以分为3部分来说\"><a href=\"#插槽可以分为3部分来说\" class=\"headerlink\" title=\"插槽可以分为3部分来说\"></a>插槽可以分为3部分来说</h3><ul>\n<li><p><strong>单个插槽</strong></p>\n<hr>\n<ul>\n<li><h4 id=\"首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\"><a href=\"#首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\" class=\"headerlink\" title=\"首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\"></a>首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。</h4></li>\n<li><h4 id=\"单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\"><a href=\"#单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\" class=\"headerlink\" title=\"单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\"></a>单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。</h4></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<pre><code>下面通过一个例子来展示。\n</code></pre></blockquote>\n<p><strong>父组件：</strong></p>\n<pre><code>    &lt;div class=&quot;slot-righ&quot;&gt;\n                &lt;p&gt;22222&lt;/p&gt;\n                &lt;Slo&gt;\n                    &lt;div class=&quot;con&quot;&gt;\n                        111111\n                    &lt;/div&gt;\n                &lt;/Slo&gt;\n            &lt;/div&gt;\n</code></pre><p><strong>子组件：</strong></p>\n<pre><code>    &lt;div class=&quot;sol&quot;&gt;\n        &lt;p&gt;11111&lt;/p&gt;\n        &lt;slot&gt;&lt;/slot&gt;\n      &lt;/div&gt;\n</code></pre><ul>\n<li><strong>具名插槽</strong><ul>\n<li>匿名插槽没有名称属性，所以是匿名插槽，那么，插槽加了名称属性，就变成了具名插槽。具名插槽可以在一个组件中出现Ñ次，出现在不同的位置。下面的例子，一个就是有两个具名插槽状语从句：单个插槽的组件，这三个插槽被父组件用同一套的CSS样式显示了出来，不同的是内容上略有区别。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>下面通过一个例子来展示。</p>\n</blockquote>\n<p><strong>父组件：</strong>    </p>\n<pre><code>&lt;div class=&quot;slot-righ&quot;&gt;\n            &lt;p&gt;22222&lt;/p&gt;\n            &lt;Slo&gt;\n                &lt;div class=&quot;con&quot; slot=&quot;up&quot;&gt;\n                    111111\n                &lt;/div&gt;\n            &lt;/Slo&gt;\n        &lt;/div&gt;\n</code></pre><p><strong>子组件：</strong></p>\n<pre><code>&lt;div class=&quot;sol&quot;&gt;\n    &lt;p&gt;11111&lt;/p&gt;\n    &lt;slot name=&quot;up&quot;&gt;&lt;/slot&gt;//具名插槽\n  &lt;/div&gt;\n</code></pre><ul>\n<li><p><strong>作用域插槽| 带数据的插槽</strong></p>\n<ul>\n<li>最后，就是我们的作用域插槽。这个稍微难理解一点。官方叫它作用域插槽，实际上，对比前面两种插槽，我们可以叫它带数据的插槽。什么意思呢，就是前面两种，都是在组件的模板里面写</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>下面通过一个例子来展示。</p>\n</blockquote>\n<p><strong>父组件：</strong>    </p>\n<pre><code>&lt;div class=&quot;slot-righ&quot;&gt;\n                &lt;p&gt;22222&lt;/p&gt;\n                &lt;Slo&gt;\n                    &lt;div class=&quot;con&quot; slot-scope=&quot;user&quot;&gt;//父组件拿到数据\n                        {{user.data}}\n                    &lt;/div&gt;\n                &lt;/Slo&gt;\n            &lt;/div&gt;\n</code></pre><p><strong>子组件：</strong></p>\n<pre><code>&lt;template&gt;\n  &lt;div class=&quot;sol&quot;&gt;\n    &lt;p&gt;11111&lt;/p&gt;\n    &lt;slot :data=&quot;data&quot;&gt;&lt;/slot&gt;//这里再插槽上绑定数据\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    export default {\n      data(){\n        return {\n          data:11111111\n        }\n      }\n    }\n&lt;/script&gt;\n</code></pre><blockquote>\n<h4 id=\"正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\"><a href=\"#正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\" class=\"headerlink\" title=\"正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\"></a>正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。</h4></blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vue-slot-scope的理解（适合初学者）\"><a href=\"#Vue-slot-scope的理解（适合初学者）\" class=\"headerlink\" title=\"Vue slot-scope的理解（适合初学者）\"></a>Vue slot-scope的理解（适合初学者）</h1><blockquote>\n<p>1/26/2019 2:58:04 PM </p>\n</blockquote>\n<hr>\n<blockquote>\n<h5 id=\"Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\"><a href=\"#Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\" class=\"headerlink\" title=\"Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。\"></a>Vue中关于插槽的文档说明很短，语言又写的很凝练，再加上其和方法，数据，计算机等常用选项在使用频率，使用先后上的差别，这就有可能造成初次接触插槽的开发者容易产生“算了吧，回头再学，反正已经可以写基础组件了”的想法，于是就关闭了VUE的说明文档。</h5></blockquote>\n<blockquote>\n<h3 id=\"实际上，插槽的概念很简单\"><a href=\"#实际上，插槽的概念很简单\" class=\"headerlink\" title=\"实际上，插槽的概念很简单\"></a>实际上，插槽的概念很简单</h3></blockquote>\n<h3 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h3><ul>\n<li><strong>概念：插槽，也就是槽，是组件的一块HTML模板，这块模板显示不显示，以及怎样显示由父组件来决定。</strong></li>\n</ul>\n<h3 id=\"插槽可以分为3部分来说\"><a href=\"#插槽可以分为3部分来说\" class=\"headerlink\" title=\"插槽可以分为3部分来说\"></a>插槽可以分为3部分来说</h3><ul>\n<li><p><strong>单个插槽</strong></p>\n<hr>\n<ul>\n<li><h4 id=\"首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\"><a href=\"#首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\" class=\"headerlink\" title=\"首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。\"></a>首先是单个插槽，单个插槽的英文VUE的官方叫法，但是其实也可以叫它默认插槽，或者与具名插槽相对，我们可以叫它匿名插槽。因为它不用设置名称属性。</h4></li>\n<li><h4 id=\"单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\"><a href=\"#单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\" class=\"headerlink\" title=\"单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。\"></a>单个插槽可以放置在组件的任意位置，但是就像它的名字一样，一个组件中只能有一个该类插槽。相对应的，具名插槽就可以有很多个，只要名字（名称属性）不同就可以了。</h4></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<pre><code>下面通过一个例子来展示。\n</code></pre></blockquote>\n<p><strong>父组件：</strong></p>\n<pre><code>    &lt;div class=&quot;slot-righ&quot;&gt;\n                &lt;p&gt;22222&lt;/p&gt;\n                &lt;Slo&gt;\n                    &lt;div class=&quot;con&quot;&gt;\n                        111111\n                    &lt;/div&gt;\n                &lt;/Slo&gt;\n            &lt;/div&gt;\n</code></pre><p><strong>子组件：</strong></p>\n<pre><code>    &lt;div class=&quot;sol&quot;&gt;\n        &lt;p&gt;11111&lt;/p&gt;\n        &lt;slot&gt;&lt;/slot&gt;\n      &lt;/div&gt;\n</code></pre><ul>\n<li><strong>具名插槽</strong><ul>\n<li>匿名插槽没有名称属性，所以是匿名插槽，那么，插槽加了名称属性，就变成了具名插槽。具名插槽可以在一个组件中出现Ñ次，出现在不同的位置。下面的例子，一个就是有两个具名插槽状语从句：单个插槽的组件，这三个插槽被父组件用同一套的CSS样式显示了出来，不同的是内容上略有区别。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>下面通过一个例子来展示。</p>\n</blockquote>\n<p><strong>父组件：</strong>    </p>\n<pre><code>&lt;div class=&quot;slot-righ&quot;&gt;\n            &lt;p&gt;22222&lt;/p&gt;\n            &lt;Slo&gt;\n                &lt;div class=&quot;con&quot; slot=&quot;up&quot;&gt;\n                    111111\n                &lt;/div&gt;\n            &lt;/Slo&gt;\n        &lt;/div&gt;\n</code></pre><p><strong>子组件：</strong></p>\n<pre><code>&lt;div class=&quot;sol&quot;&gt;\n    &lt;p&gt;11111&lt;/p&gt;\n    &lt;slot name=&quot;up&quot;&gt;&lt;/slot&gt;//具名插槽\n  &lt;/div&gt;\n</code></pre><ul>\n<li><p><strong>作用域插槽| 带数据的插槽</strong></p>\n<ul>\n<li>最后，就是我们的作用域插槽。这个稍微难理解一点。官方叫它作用域插槽，实际上，对比前面两种插槽，我们可以叫它带数据的插槽。什么意思呢，就是前面两种，都是在组件的模板里面写</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>下面通过一个例子来展示。</p>\n</blockquote>\n<p><strong>父组件：</strong>    </p>\n<pre><code>&lt;div class=&quot;slot-righ&quot;&gt;\n                &lt;p&gt;22222&lt;/p&gt;\n                &lt;Slo&gt;\n                    &lt;div class=&quot;con&quot; slot-scope=&quot;user&quot;&gt;//父组件拿到数据\n                        {{user.data}}\n                    &lt;/div&gt;\n                &lt;/Slo&gt;\n            &lt;/div&gt;\n</code></pre><p><strong>子组件：</strong></p>\n<pre><code>&lt;template&gt;\n  &lt;div class=&quot;sol&quot;&gt;\n    &lt;p&gt;11111&lt;/p&gt;\n    &lt;slot :data=&quot;data&quot;&gt;&lt;/slot&gt;//这里再插槽上绑定数据\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    export default {\n      data(){\n        return {\n          data:11111111\n        }\n      }\n    }\n&lt;/script&gt;\n</code></pre><blockquote>\n<h4 id=\"正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\"><a href=\"#正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\" class=\"headerlink\" title=\"正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。\"></a>正因为作用域插槽绑定了一套数据，父组件可以拿来用于是，情况就变成了这样：样式父组件说了算，但内容可以显示子组件插槽绑定的。</h4></blockquote>\n"},{"title":"vue概述","date":"2019-01-25T08:34:55.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"----------\n1/25/2019 4:34:55 PM\n### 此文章只是对VUE常用的知识进行了一个简述，详情请[访问官方文档](https://cn.vuejs.org/)\n\n----------\n\n# 什么是vue？\n\n### vue是一个框架(`渐进式开发框架`),其实就是一个框架的名称，其特点是(数据双向绑定，组件开发，单页面路由，指令，插件)\n\n## 什么叫渐进式框架\n\n### 通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\n\n## 最重要的特性就是组件\n\n### 组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于(组件的组成包含了(结构，逻辑，样式))而模块只是逻辑\n\n## 组件的特性\n- 组建的状态(data,props)\n- 组件和组件的通讯\n- 自己的生命周期\n- 组件的渲染和组件的创建方式\n\n## 组件的创建方式\n- vue.component(componnetName,option)           (自动渲染)\n- 在每一个组件中都有component选项，用来注册局部组件\t(自动渲染)\n- 通过Vue.extends()扩展子类的形式创建\t\t\t\t(手动渲染)\n\n## 组建的实例选项\n- @[function] data\n- @[object] method\n- @[object] compoted\n- @[object] watch\n- @[object] conponents\n- @[function] 生命周期 \n\n\t\tbeforeCreated(){}//初始化数据之前\n\t\tcreated () {} //数据初始化之后\n\t\tbeforeMout () {} //开始渲染\n\t\tmounted () {} //渲染完成\n\t\tbeforeUpdate () {} //开始更新 当一个数据的改变引起了视图的重新的渲染才会执行，单独的一个数据改变是不会执行的\n\t\tuppdated() {} //更新完成\n\t\t//当使用keep-alive组件时才会 执行\n\t\tactivated //组件启用时\n\t\tdeactivated //组件停用时\n\t\t//组件销毁 v-if销毁组件，或者切换路由(在没有启用缓存的前提)，或者手动执行this.$destroy().清理组件中绑定的data，通过v-on绑定事件，如果有手动绑定的内容需要，在这个生命周期中手动销毁\n\t\tbeforeDestroy\n\t\tdestroyed\n\n\t\t//当组件中发生错误时\n\t\terrorCaptured\n\n\t\t)\n\n## 组件的通讯方式\n\n### 通讯创建：父子，子父，同级，跨级\n\n### 通讯其实就是谁用谁的数据\n\n- 父子：子组件使用父组件数据，props(常用)，子组件内部通过$parent\n- 子父：父组件使用子组件数据，通过自定事件，子组件通过$emit(事件名称，发送数据)给父组件传递数据(常用)$children $refs\n- 同级：代理(一个子组件将数据发送到父级，父在发送到另一个子级)，eventBus vuex\n- 跨级：逐层传递，vuex eventsBus\n\n## 组件的嵌套\n\n### 组件内部通过slot内置组件，可以用来承载嵌套组件(单个slot，和命名slot)\n\n## 内置组件\n\n- template 单文件组件中代替了template选项，可以用作一个包裹元素，不会被渲染\n- component 动态组件，通过is属性动态渲染某一个组件\n- slot 插槽，用来承载组件潜逃的子组件\n- transition vue用来实现动画的组件(提供了，进入和离开两个状态)\n- transitions-group 用来实现多动画(列表动画，排序，添加，删除)\n- keep-alive 用来启动vue缓存功能，缓存组件的状态\n\n## vue的实例属性\n\n\t实例属性\n\tvm.$data \t\t\t\t//访问定义的data\n\tvm.$props \t\t\t\t//访问props对象\n\tvm.$el \t\t\t\t\t//访问组件的根节点\n\tvm.$options \t\t\t//访问所有配置项\n\tvm.$parent \t\t\t\t//访问父组件实例\n\tvm.$root\n\tvm.$children\n\tvm.$slots\n\tvm.$scopedSlots\n\tvm.$refs\n\tvm.$isServer\n\tvm.$attrs\n\tvm.$listeners\n\t实例方法 / 数据\n\tvm.$watch\n\tvm.$set\n\tvm.$delete\n\t实例方法 / 事件\n\tvm.$on\n\tvm.$once\n\tvm.$off\n\tvm.$emit\n\t实例方法 / 生命周期\n\tvm.$mount\n\tvm.$forceUpdate\n\tvm.$nextTick\t//数据改变后回调\n\tvm.$destroy //手动渲染\n\n\n","source":"_posts/vue.md","raw":"---\ntitle: vue概述\ndate: ' 1/25/2019 4:34:55 PM '\ntag: ['js', 'vue' , 'vue概述']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n----------\n1/25/2019 4:34:55 PM\n### 此文章只是对VUE常用的知识进行了一个简述，详情请[访问官方文档](https://cn.vuejs.org/)\n\n----------\n\n# 什么是vue？\n\n### vue是一个框架(`渐进式开发框架`),其实就是一个框架的名称，其特点是(数据双向绑定，组件开发，单页面路由，指令，插件)\n\n## 什么叫渐进式框架\n\n### 通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\n\n## 最重要的特性就是组件\n\n### 组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于(组件的组成包含了(结构，逻辑，样式))而模块只是逻辑\n\n## 组件的特性\n- 组建的状态(data,props)\n- 组件和组件的通讯\n- 自己的生命周期\n- 组件的渲染和组件的创建方式\n\n## 组件的创建方式\n- vue.component(componnetName,option)           (自动渲染)\n- 在每一个组件中都有component选项，用来注册局部组件\t(自动渲染)\n- 通过Vue.extends()扩展子类的形式创建\t\t\t\t(手动渲染)\n\n## 组建的实例选项\n- @[function] data\n- @[object] method\n- @[object] compoted\n- @[object] watch\n- @[object] conponents\n- @[function] 生命周期 \n\n\t\tbeforeCreated(){}//初始化数据之前\n\t\tcreated () {} //数据初始化之后\n\t\tbeforeMout () {} //开始渲染\n\t\tmounted () {} //渲染完成\n\t\tbeforeUpdate () {} //开始更新 当一个数据的改变引起了视图的重新的渲染才会执行，单独的一个数据改变是不会执行的\n\t\tuppdated() {} //更新完成\n\t\t//当使用keep-alive组件时才会 执行\n\t\tactivated //组件启用时\n\t\tdeactivated //组件停用时\n\t\t//组件销毁 v-if销毁组件，或者切换路由(在没有启用缓存的前提)，或者手动执行this.$destroy().清理组件中绑定的data，通过v-on绑定事件，如果有手动绑定的内容需要，在这个生命周期中手动销毁\n\t\tbeforeDestroy\n\t\tdestroyed\n\n\t\t//当组件中发生错误时\n\t\terrorCaptured\n\n\t\t)\n\n## 组件的通讯方式\n\n### 通讯创建：父子，子父，同级，跨级\n\n### 通讯其实就是谁用谁的数据\n\n- 父子：子组件使用父组件数据，props(常用)，子组件内部通过$parent\n- 子父：父组件使用子组件数据，通过自定事件，子组件通过$emit(事件名称，发送数据)给父组件传递数据(常用)$children $refs\n- 同级：代理(一个子组件将数据发送到父级，父在发送到另一个子级)，eventBus vuex\n- 跨级：逐层传递，vuex eventsBus\n\n## 组件的嵌套\n\n### 组件内部通过slot内置组件，可以用来承载嵌套组件(单个slot，和命名slot)\n\n## 内置组件\n\n- template 单文件组件中代替了template选项，可以用作一个包裹元素，不会被渲染\n- component 动态组件，通过is属性动态渲染某一个组件\n- slot 插槽，用来承载组件潜逃的子组件\n- transition vue用来实现动画的组件(提供了，进入和离开两个状态)\n- transitions-group 用来实现多动画(列表动画，排序，添加，删除)\n- keep-alive 用来启动vue缓存功能，缓存组件的状态\n\n## vue的实例属性\n\n\t实例属性\n\tvm.$data \t\t\t\t//访问定义的data\n\tvm.$props \t\t\t\t//访问props对象\n\tvm.$el \t\t\t\t\t//访问组件的根节点\n\tvm.$options \t\t\t//访问所有配置项\n\tvm.$parent \t\t\t\t//访问父组件实例\n\tvm.$root\n\tvm.$children\n\tvm.$slots\n\tvm.$scopedSlots\n\tvm.$refs\n\tvm.$isServer\n\tvm.$attrs\n\tvm.$listeners\n\t实例方法 / 数据\n\tvm.$watch\n\tvm.$set\n\tvm.$delete\n\t实例方法 / 事件\n\tvm.$on\n\tvm.$once\n\tvm.$off\n\tvm.$emit\n\t实例方法 / 生命周期\n\tvm.$mount\n\tvm.$forceUpdate\n\tvm.$nextTick\t//数据改变后回调\n\tvm.$destroy //手动渲染\n\n\n","slug":"vue","published":1,"updated":"2019-01-26T10:54:29.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxb5000i5owd6h70w86m","content":"<hr>\n<p>1/25/2019 4:34:55 PM</p>\n<h3 id=\"此文章只是对VUE常用的知识进行了一个简述，详情请访问官方文档\"><a href=\"#此文章只是对VUE常用的知识进行了一个简述，详情请访问官方文档\" class=\"headerlink\" title=\"此文章只是对VUE常用的知识进行了一个简述，详情请访问官方文档\"></a>此文章只是对VUE常用的知识进行了一个简述，详情请<a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">访问官方文档</a></h3><hr>\n<h1 id=\"什么是vue？\"><a href=\"#什么是vue？\" class=\"headerlink\" title=\"什么是vue？\"></a>什么是vue？</h1><h3 id=\"vue是一个框架-渐进式开发框架-其实就是一个框架的名称，其特点是-数据双向绑定，组件开发，单页面路由，指令，插件\"><a href=\"#vue是一个框架-渐进式开发框架-其实就是一个框架的名称，其特点是-数据双向绑定，组件开发，单页面路由，指令，插件\" class=\"headerlink\" title=\"vue是一个框架(渐进式开发框架),其实就是一个框架的名称，其特点是(数据双向绑定，组件开发，单页面路由，指令，插件)\"></a>vue是一个框架(<code>渐进式开发框架</code>),其实就是一个框架的名称，其特点是(数据双向绑定，组件开发，单页面路由，指令，插件)</h3><h2 id=\"什么叫渐进式框架\"><a href=\"#什么叫渐进式框架\" class=\"headerlink\" title=\"什么叫渐进式框架\"></a>什么叫渐进式框架</h2><h3 id=\"通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\"><a href=\"#通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\" class=\"headerlink\" title=\"通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\"></a>通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已</h3><h2 id=\"最重要的特性就是组件\"><a href=\"#最重要的特性就是组件\" class=\"headerlink\" title=\"最重要的特性就是组件\"></a>最重要的特性就是组件</h2><h3 id=\"组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于-组件的组成包含了-结构，逻辑，样式-而模块只是逻辑\"><a href=\"#组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于-组件的组成包含了-结构，逻辑，样式-而模块只是逻辑\" class=\"headerlink\" title=\"组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于(组件的组成包含了(结构，逻辑，样式))而模块只是逻辑\"></a>组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于(组件的组成包含了(结构，逻辑，样式))而模块只是逻辑</h3><h2 id=\"组件的特性\"><a href=\"#组件的特性\" class=\"headerlink\" title=\"组件的特性\"></a>组件的特性</h2><ul>\n<li>组建的状态(data,props)</li>\n<li>组件和组件的通讯</li>\n<li>自己的生命周期</li>\n<li>组件的渲染和组件的创建方式</li>\n</ul>\n<h2 id=\"组件的创建方式\"><a href=\"#组件的创建方式\" class=\"headerlink\" title=\"组件的创建方式\"></a>组件的创建方式</h2><ul>\n<li>vue.component(componnetName,option)           (自动渲染)</li>\n<li>在每一个组件中都有component选项，用来注册局部组件    (自动渲染)</li>\n<li>通过Vue.extends()扩展子类的形式创建                (手动渲染)</li>\n</ul>\n<h2 id=\"组建的实例选项\"><a href=\"#组建的实例选项\" class=\"headerlink\" title=\"组建的实例选项\"></a>组建的实例选项</h2><ul>\n<li>@[function] data</li>\n<li>@[object] method</li>\n<li>@[object] compoted</li>\n<li>@[object] watch</li>\n<li>@[object] conponents</li>\n<li><p>@[function] 生命周期 </p>\n<pre><code>  beforeCreated(){}//初始化数据之前\n  created () {} //数据初始化之后\n  beforeMout () {} //开始渲染\n  mounted () {} //渲染完成\n  beforeUpdate () {} //开始更新 当一个数据的改变引起了视图的重新的渲染才会执行，单独的一个数据改变是不会执行的\n  uppdated() {} //更新完成\n  //当使用keep-alive组件时才会 执行\n  activated //组件启用时\n  deactivated //组件停用时\n  //组件销毁 v-if销毁组件，或者切换路由(在没有启用缓存的前提)，或者手动执行this.$destroy().清理组件中绑定的data，通过v-on绑定事件，如果有手动绑定的内容需要，在这个生命周期中手动销毁\n  beforeDestroy\n  destroyed\n\n  //当组件中发生错误时\n  errorCaptured\n\n  )\n</code></pre></li>\n</ul>\n<h2 id=\"组件的通讯方式\"><a href=\"#组件的通讯方式\" class=\"headerlink\" title=\"组件的通讯方式\"></a>组件的通讯方式</h2><h3 id=\"通讯创建：父子，子父，同级，跨级\"><a href=\"#通讯创建：父子，子父，同级，跨级\" class=\"headerlink\" title=\"通讯创建：父子，子父，同级，跨级\"></a>通讯创建：父子，子父，同级，跨级</h3><h3 id=\"通讯其实就是谁用谁的数据\"><a href=\"#通讯其实就是谁用谁的数据\" class=\"headerlink\" title=\"通讯其实就是谁用谁的数据\"></a>通讯其实就是谁用谁的数据</h3><ul>\n<li>父子：子组件使用父组件数据，props(常用)，子组件内部通过$parent</li>\n<li>子父：父组件使用子组件数据，通过自定事件，子组件通过$emit(事件名称，发送数据)给父组件传递数据(常用)$children $refs</li>\n<li>同级：代理(一个子组件将数据发送到父级，父在发送到另一个子级)，eventBus vuex</li>\n<li>跨级：逐层传递，vuex eventsBus</li>\n</ul>\n<h2 id=\"组件的嵌套\"><a href=\"#组件的嵌套\" class=\"headerlink\" title=\"组件的嵌套\"></a>组件的嵌套</h2><h3 id=\"组件内部通过slot内置组件，可以用来承载嵌套组件-单个slot，和命名slot\"><a href=\"#组件内部通过slot内置组件，可以用来承载嵌套组件-单个slot，和命名slot\" class=\"headerlink\" title=\"组件内部通过slot内置组件，可以用来承载嵌套组件(单个slot，和命名slot)\"></a>组件内部通过slot内置组件，可以用来承载嵌套组件(单个slot，和命名slot)</h3><h2 id=\"内置组件\"><a href=\"#内置组件\" class=\"headerlink\" title=\"内置组件\"></a>内置组件</h2><ul>\n<li>template 单文件组件中代替了template选项，可以用作一个包裹元素，不会被渲染</li>\n<li>component 动态组件，通过is属性动态渲染某一个组件</li>\n<li>slot 插槽，用来承载组件潜逃的子组件</li>\n<li>transition vue用来实现动画的组件(提供了，进入和离开两个状态)</li>\n<li>transitions-group 用来实现多动画(列表动画，排序，添加，删除)</li>\n<li>keep-alive 用来启动vue缓存功能，缓存组件的状态</li>\n</ul>\n<h2 id=\"vue的实例属性\"><a href=\"#vue的实例属性\" class=\"headerlink\" title=\"vue的实例属性\"></a>vue的实例属性</h2><pre><code>实例属性\nvm.$data                 //访问定义的data\nvm.$props                 //访问props对象\nvm.$el                     //访问组件的根节点\nvm.$options             //访问所有配置项\nvm.$parent                 //访问父组件实例\nvm.$root\nvm.$children\nvm.$slots\nvm.$scopedSlots\nvm.$refs\nvm.$isServer\nvm.$attrs\nvm.$listeners\n实例方法 / 数据\nvm.$watch\nvm.$set\nvm.$delete\n实例方法 / 事件\nvm.$on\nvm.$once\nvm.$off\nvm.$emit\n实例方法 / 生命周期\nvm.$mount\nvm.$forceUpdate\nvm.$nextTick    //数据改变后回调\nvm.$destroy //手动渲染\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>1/25/2019 4:34:55 PM</p>\n<h3 id=\"此文章只是对VUE常用的知识进行了一个简述，详情请访问官方文档\"><a href=\"#此文章只是对VUE常用的知识进行了一个简述，详情请访问官方文档\" class=\"headerlink\" title=\"此文章只是对VUE常用的知识进行了一个简述，详情请访问官方文档\"></a>此文章只是对VUE常用的知识进行了一个简述，详情请<a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">访问官方文档</a></h3><hr>\n<h1 id=\"什么是vue？\"><a href=\"#什么是vue？\" class=\"headerlink\" title=\"什么是vue？\"></a>什么是vue？</h1><h3 id=\"vue是一个框架-渐进式开发框架-其实就是一个框架的名称，其特点是-数据双向绑定，组件开发，单页面路由，指令，插件\"><a href=\"#vue是一个框架-渐进式开发框架-其实就是一个框架的名称，其特点是-数据双向绑定，组件开发，单页面路由，指令，插件\" class=\"headerlink\" title=\"vue是一个框架(渐进式开发框架),其实就是一个框架的名称，其特点是(数据双向绑定，组件开发，单页面路由，指令，插件)\"></a>vue是一个框架(<code>渐进式开发框架</code>),其实就是一个框架的名称，其特点是(数据双向绑定，组件开发，单页面路由，指令，插件)</h3><h2 id=\"什么叫渐进式框架\"><a href=\"#什么叫渐进式框架\" class=\"headerlink\" title=\"什么叫渐进式框架\"></a>什么叫渐进式框架</h2><h3 id=\"通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\"><a href=\"#通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\" class=\"headerlink\" title=\"通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已\"></a>通过开发组件的形式，进行组件的组件的组合，来组合出来的一个页面而已</h3><h2 id=\"最重要的特性就是组件\"><a href=\"#最重要的特性就是组件\" class=\"headerlink\" title=\"最重要的特性就是组件\"></a>最重要的特性就是组件</h2><h3 id=\"组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于-组件的组成包含了-结构，逻辑，样式-而模块只是逻辑\"><a href=\"#组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于-组件的组成包含了-结构，逻辑，样式-而模块只是逻辑\" class=\"headerlink\" title=\"组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于(组件的组成包含了(结构，逻辑，样式))而模块只是逻辑\"></a>组件类似于模块，设计组建的目的是为了更好的解耦业务，和模块化的区别就在于(组件的组成包含了(结构，逻辑，样式))而模块只是逻辑</h3><h2 id=\"组件的特性\"><a href=\"#组件的特性\" class=\"headerlink\" title=\"组件的特性\"></a>组件的特性</h2><ul>\n<li>组建的状态(data,props)</li>\n<li>组件和组件的通讯</li>\n<li>自己的生命周期</li>\n<li>组件的渲染和组件的创建方式</li>\n</ul>\n<h2 id=\"组件的创建方式\"><a href=\"#组件的创建方式\" class=\"headerlink\" title=\"组件的创建方式\"></a>组件的创建方式</h2><ul>\n<li>vue.component(componnetName,option)           (自动渲染)</li>\n<li>在每一个组件中都有component选项，用来注册局部组件    (自动渲染)</li>\n<li>通过Vue.extends()扩展子类的形式创建                (手动渲染)</li>\n</ul>\n<h2 id=\"组建的实例选项\"><a href=\"#组建的实例选项\" class=\"headerlink\" title=\"组建的实例选项\"></a>组建的实例选项</h2><ul>\n<li>@[function] data</li>\n<li>@[object] method</li>\n<li>@[object] compoted</li>\n<li>@[object] watch</li>\n<li>@[object] conponents</li>\n<li><p>@[function] 生命周期 </p>\n<pre><code>  beforeCreated(){}//初始化数据之前\n  created () {} //数据初始化之后\n  beforeMout () {} //开始渲染\n  mounted () {} //渲染完成\n  beforeUpdate () {} //开始更新 当一个数据的改变引起了视图的重新的渲染才会执行，单独的一个数据改变是不会执行的\n  uppdated() {} //更新完成\n  //当使用keep-alive组件时才会 执行\n  activated //组件启用时\n  deactivated //组件停用时\n  //组件销毁 v-if销毁组件，或者切换路由(在没有启用缓存的前提)，或者手动执行this.$destroy().清理组件中绑定的data，通过v-on绑定事件，如果有手动绑定的内容需要，在这个生命周期中手动销毁\n  beforeDestroy\n  destroyed\n\n  //当组件中发生错误时\n  errorCaptured\n\n  )\n</code></pre></li>\n</ul>\n<h2 id=\"组件的通讯方式\"><a href=\"#组件的通讯方式\" class=\"headerlink\" title=\"组件的通讯方式\"></a>组件的通讯方式</h2><h3 id=\"通讯创建：父子，子父，同级，跨级\"><a href=\"#通讯创建：父子，子父，同级，跨级\" class=\"headerlink\" title=\"通讯创建：父子，子父，同级，跨级\"></a>通讯创建：父子，子父，同级，跨级</h3><h3 id=\"通讯其实就是谁用谁的数据\"><a href=\"#通讯其实就是谁用谁的数据\" class=\"headerlink\" title=\"通讯其实就是谁用谁的数据\"></a>通讯其实就是谁用谁的数据</h3><ul>\n<li>父子：子组件使用父组件数据，props(常用)，子组件内部通过$parent</li>\n<li>子父：父组件使用子组件数据，通过自定事件，子组件通过$emit(事件名称，发送数据)给父组件传递数据(常用)$children $refs</li>\n<li>同级：代理(一个子组件将数据发送到父级，父在发送到另一个子级)，eventBus vuex</li>\n<li>跨级：逐层传递，vuex eventsBus</li>\n</ul>\n<h2 id=\"组件的嵌套\"><a href=\"#组件的嵌套\" class=\"headerlink\" title=\"组件的嵌套\"></a>组件的嵌套</h2><h3 id=\"组件内部通过slot内置组件，可以用来承载嵌套组件-单个slot，和命名slot\"><a href=\"#组件内部通过slot内置组件，可以用来承载嵌套组件-单个slot，和命名slot\" class=\"headerlink\" title=\"组件内部通过slot内置组件，可以用来承载嵌套组件(单个slot，和命名slot)\"></a>组件内部通过slot内置组件，可以用来承载嵌套组件(单个slot，和命名slot)</h3><h2 id=\"内置组件\"><a href=\"#内置组件\" class=\"headerlink\" title=\"内置组件\"></a>内置组件</h2><ul>\n<li>template 单文件组件中代替了template选项，可以用作一个包裹元素，不会被渲染</li>\n<li>component 动态组件，通过is属性动态渲染某一个组件</li>\n<li>slot 插槽，用来承载组件潜逃的子组件</li>\n<li>transition vue用来实现动画的组件(提供了，进入和离开两个状态)</li>\n<li>transitions-group 用来实现多动画(列表动画，排序，添加，删除)</li>\n<li>keep-alive 用来启动vue缓存功能，缓存组件的状态</li>\n</ul>\n<h2 id=\"vue的实例属性\"><a href=\"#vue的实例属性\" class=\"headerlink\" title=\"vue的实例属性\"></a>vue的实例属性</h2><pre><code>实例属性\nvm.$data                 //访问定义的data\nvm.$props                 //访问props对象\nvm.$el                     //访问组件的根节点\nvm.$options             //访问所有配置项\nvm.$parent                 //访问父组件实例\nvm.$root\nvm.$children\nvm.$slots\nvm.$scopedSlots\nvm.$refs\nvm.$isServer\nvm.$attrs\nvm.$listeners\n实例方法 / 数据\nvm.$watch\nvm.$set\nvm.$delete\n实例方法 / 事件\nvm.$on\nvm.$once\nvm.$off\nvm.$emit\n实例方法 / 生命周期\nvm.$mount\nvm.$forceUpdate\nvm.$nextTick    //数据改变后回调\nvm.$destroy //手动渲染\n</code></pre>"},{"title":"Vuex简单概述","date":"2019-01-30T11:49:45.000Z","meta":[{"name":"description","content":null},{"name":"keywords","content":null}],"_content":"# Vuex\n\n\n----------\n\n\n## Vuex是什么？\n\n> **引入官方提供的解释，vuex 是专门为 vue.js 设计的一套 状态管理模式 。什么是状态管理模式？说白了就是数据的集中管理。我们在使用 vue.js 时所用到的数据全部抽取出来放在一个state对象下，这样我们在任何组件内都可以访问得到该数据。下面我们通过一个例子来看下 vuex 是如何管理我们的数据的。**\n\n### 首先先通过npm来安装一下vuex：\n\n    npm install vuex --save\n\n## state状态属性\n\n### 在项目src目录下新建一个store文件夹(该文件夹不是必须的，你也可以直接新建一个store.js，只要你引入的路径正确即可)，在该文件夹下新建一个 index.js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。 \n\n> #### store/index.js\n\n\t\n\timport Vue from 'vue'\n\timport Vuex from 'vuex'\n\tVue.use(Vuex)\n\tlet store = new Vuex.Store({\n\t\tstate: {  //要设置的全局访问的state对象\n\t\t\tname: \"vuex\"\n\t\t}\n\t})\n\n\texport default store\n\n### 为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main.js文件中 \n\n> #### main.js\n\n\timport Vue from 'vue'\n\timport App from './App.vue'\n\timport \"./commcss/index.scss\"\n\timport store from './store/index'\n\tnew Vue({\n\t  el: '#app',\n\t  render: h => h(App),\n\t  store // 全局注册\n\t})\n\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\">\n\t\t\t{{name}}\n\t\t</div>\n\t</template>\n\t<script>\n\timport { mapState} from 'vuex'\n\t/*\n\t *1.mapState 辅助函数\n\t *当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。\n\t *为了解决这个问题，我们可以使用 mapState 辅助函数帮助我们生成计算属性，让你少按几次键：\n\t */\n\texport default {\n\t  computde: {\n\t\t...mapState(['name'])\n\t\t}\n\t}\n\t</script>\n\n## Getter(store的计算属性，例如对列表进行过滤)\n\n> #### store/index.js\n\n\tstate: {\n    \tcount: 1,\n    \tarr: [\n\t      {\n\t        sex: '男',\n\t\t\tid: 1\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 2\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 3\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 4\n\t      },\n\t      {\n\t        sex: '女',\n\t\t\tid: 5\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 6\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 7\n\t      }\n    \t]\n  \t},\n\tgetters: {\n\t    man (state) {\n\t      return state.arr.filter(item=>{return item.sex==='男'})\n\t    }\n  \t},\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\">\n\t\t\t<ul>\n\t\t\t\t<li v-for=\"(item,index) in man\" :key=\"item.id\">{{item.sex}}</li>\n\t\t\t</ul>\n\t\t</div>\n\t</template>\n\t<script>\n\timport { mapGetters } from 'vuex' //mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性：\n\texport default {\n\t  computde: {\n\t\t...mapGetters(['man'])\n\t\t}\n\t}\n\t</script>\n\n\n## mutation(更新state的唯一方法)\n\n> #### store/index.js\n\n\tmutation: {\n\t\tchange (state) {\n\t\t\tstate.name = 'vue'\n\t\t}\n\t}\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\" @click=\"change\">\n\t\t\t{{name}}\n\t\t</div>\n\t</template>\n\t<script>\n\texport default {\n\t  method: {\n\t\tchange () {\n\t\t\tthis.$store.commit('change')\n\t\t}\n\t  }\n\t}\n\t</script>\t\n\n## 一条重要的原则就是要记住 mutation 必须是同步函数\n\n### 原因：(为什么不能执行一步操作)\n\n> **现在想象，我们正在 debug 一个 app 并且观察 devtool 中的 mutation 日志。每一条 mutation 被记录，devtools 都需要捕捉到前一状态和后一状态的快照。然而，在上面的例子中 mutation 中的异步函数中的回调让这不可能完成：因为当 mutation 触发的时候，回调函数还没有被调用，devtools 不知道什么时候回调函数实际上被调用——实质上任何在回调函数中进行的状态的改变都是不可追踪的。**\n\n### 因此：【我们需要一个action来进行异步操作】\n\n## Action\n\n### Action 类似于 mutation，不同在于：\n\n- **Action 提交的是 mutation，而不是直接变更状态。**\n- **Action 可以包含任意异步操作。**\n\n> #### store/index.js\n\n\n\tstate: {\n\t\tcount: 0\n\t},\n\tmutations: {\n\t    addcount (state) {\n\t      state.count++\n\t    }\n  \t},\n\tactions: {\n\t    getInfo (context) {\n\t      setTimeout(()=>{\n\t        context.commit('addcount')\n\t      },2000)\n\t    }\n  \t}\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\" @click=\"change\">\n\t\t\t{{count}}\n\t\t</div>\n\t</template>\n\t<script>\n\texport default {\n\t  computed: {\n\t    ...mapState(['count'])\n\t  },\n\t  method: {\n\t\tchange () {\n\t\t\tthis.$store.dispatch('getInfo')\n\t\t}\n\t  }\n\t}\n\t</script>\n\n###### 乍一眼看上去感觉多此一举，我们直接分发 mutation 岂不更方便？实际上并非如此，还记得 mutation 必须同步执行这个限制么？Action 就不受约束！我们可以在 action 内部执行异步操作：\n\n## Module\n\n### 由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\n\n----------\n\n\n#### 为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\n\n首先创建module/todo.js\n\n> **module/todo.js**\n\n\texport default {\n\t  namespaced: true,\n\t  state: {\n\t    count: 0\n\t  },\n\t  mutations: {\n\t    addcount (state) {\n\t      state.count++\n\t    }\n\t  },\n\t}\n\n> #### store/index.js\n\n\timport todo from \"./modules/todo\"\n\n\tmodules: {\n    \ttodo\n  \t}\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\" @click=\"change\">\n\t\t\t{{count}}\n\t\t</div>\n\t</template>\n\t<script>\n\texport default {\n\t  computed: {\n\t    ...mapState('todo',['count'])\n\t  },\n\t  method: {\n\t\tchange () {\n\t\t\tthis.$store.commit('todo/addcount')\n\t\t}\n\t  }\n\t}\n\t</script>\t","source":"_posts/vuex.md","raw":"---\ntitle: Vuex简单概述\ndate: '1/30/2019 7:49:45 PM '\ntag: ['js', 'vuex', 'vue']\nmeta:\n  -\n    name: description\n    content: null\n  -\n    name: keywords\n    content: null\n---\n# Vuex\n\n\n----------\n\n\n## Vuex是什么？\n\n> **引入官方提供的解释，vuex 是专门为 vue.js 设计的一套 状态管理模式 。什么是状态管理模式？说白了就是数据的集中管理。我们在使用 vue.js 时所用到的数据全部抽取出来放在一个state对象下，这样我们在任何组件内都可以访问得到该数据。下面我们通过一个例子来看下 vuex 是如何管理我们的数据的。**\n\n### 首先先通过npm来安装一下vuex：\n\n    npm install vuex --save\n\n## state状态属性\n\n### 在项目src目录下新建一个store文件夹(该文件夹不是必须的，你也可以直接新建一个store.js，只要你引入的路径正确即可)，在该文件夹下新建一个 index.js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。 \n\n> #### store/index.js\n\n\t\n\timport Vue from 'vue'\n\timport Vuex from 'vuex'\n\tVue.use(Vuex)\n\tlet store = new Vuex.Store({\n\t\tstate: {  //要设置的全局访问的state对象\n\t\t\tname: \"vuex\"\n\t\t}\n\t})\n\n\texport default store\n\n### 为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main.js文件中 \n\n> #### main.js\n\n\timport Vue from 'vue'\n\timport App from './App.vue'\n\timport \"./commcss/index.scss\"\n\timport store from './store/index'\n\tnew Vue({\n\t  el: '#app',\n\t  render: h => h(App),\n\t  store // 全局注册\n\t})\n\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\">\n\t\t\t{{name}}\n\t\t</div>\n\t</template>\n\t<script>\n\timport { mapState} from 'vuex'\n\t/*\n\t *1.mapState 辅助函数\n\t *当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。\n\t *为了解决这个问题，我们可以使用 mapState 辅助函数帮助我们生成计算属性，让你少按几次键：\n\t */\n\texport default {\n\t  computde: {\n\t\t...mapState(['name'])\n\t\t}\n\t}\n\t</script>\n\n## Getter(store的计算属性，例如对列表进行过滤)\n\n> #### store/index.js\n\n\tstate: {\n    \tcount: 1,\n    \tarr: [\n\t      {\n\t        sex: '男',\n\t\t\tid: 1\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 2\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 3\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 4\n\t      },\n\t      {\n\t        sex: '女',\n\t\t\tid: 5\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 6\n\t      },\n\t      {\n\t        sex: '男',\n\t\t\tid: 7\n\t      }\n    \t]\n  \t},\n\tgetters: {\n\t    man (state) {\n\t      return state.arr.filter(item=>{return item.sex==='男'})\n\t    }\n  \t},\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\">\n\t\t\t<ul>\n\t\t\t\t<li v-for=\"(item,index) in man\" :key=\"item.id\">{{item.sex}}</li>\n\t\t\t</ul>\n\t\t</div>\n\t</template>\n\t<script>\n\timport { mapGetters } from 'vuex' //mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性：\n\texport default {\n\t  computde: {\n\t\t...mapGetters(['man'])\n\t\t}\n\t}\n\t</script>\n\n\n## mutation(更新state的唯一方法)\n\n> #### store/index.js\n\n\tmutation: {\n\t\tchange (state) {\n\t\t\tstate.name = 'vue'\n\t\t}\n\t}\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\" @click=\"change\">\n\t\t\t{{name}}\n\t\t</div>\n\t</template>\n\t<script>\n\texport default {\n\t  method: {\n\t\tchange () {\n\t\t\tthis.$store.commit('change')\n\t\t}\n\t  }\n\t}\n\t</script>\t\n\n## 一条重要的原则就是要记住 mutation 必须是同步函数\n\n### 原因：(为什么不能执行一步操作)\n\n> **现在想象，我们正在 debug 一个 app 并且观察 devtool 中的 mutation 日志。每一条 mutation 被记录，devtools 都需要捕捉到前一状态和后一状态的快照。然而，在上面的例子中 mutation 中的异步函数中的回调让这不可能完成：因为当 mutation 触发的时候，回调函数还没有被调用，devtools 不知道什么时候回调函数实际上被调用——实质上任何在回调函数中进行的状态的改变都是不可追踪的。**\n\n### 因此：【我们需要一个action来进行异步操作】\n\n## Action\n\n### Action 类似于 mutation，不同在于：\n\n- **Action 提交的是 mutation，而不是直接变更状态。**\n- **Action 可以包含任意异步操作。**\n\n> #### store/index.js\n\n\n\tstate: {\n\t\tcount: 0\n\t},\n\tmutations: {\n\t    addcount (state) {\n\t      state.count++\n\t    }\n  \t},\n\tactions: {\n\t    getInfo (context) {\n\t      setTimeout(()=>{\n\t        context.commit('addcount')\n\t      },2000)\n\t    }\n  \t}\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\" @click=\"change\">\n\t\t\t{{count}}\n\t\t</div>\n\t</template>\n\t<script>\n\texport default {\n\t  computed: {\n\t    ...mapState(['count'])\n\t  },\n\t  method: {\n\t\tchange () {\n\t\t\tthis.$store.dispatch('getInfo')\n\t\t}\n\t  }\n\t}\n\t</script>\n\n###### 乍一眼看上去感觉多此一举，我们直接分发 mutation 岂不更方便？实际上并非如此，还记得 mutation 必须同步执行这个限制么？Action 就不受约束！我们可以在 action 内部执行异步操作：\n\n## Module\n\n### 由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\n\n----------\n\n\n#### 为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\n\n首先创建module/todo.js\n\n> **module/todo.js**\n\n\texport default {\n\t  namespaced: true,\n\t  state: {\n\t    count: 0\n\t  },\n\t  mutations: {\n\t    addcount (state) {\n\t      state.count++\n\t    }\n\t  },\n\t}\n\n> #### store/index.js\n\n\timport todo from \"./modules/todo\"\n\n\tmodules: {\n    \ttodo\n  \t}\n\n> #### App.vue\n\n\t<template>\n  \t\t<div class=\"app\" @click=\"change\">\n\t\t\t{{count}}\n\t\t</div>\n\t</template>\n\t<script>\n\texport default {\n\t  computed: {\n\t    ...mapState('todo',['count'])\n\t  },\n\t  method: {\n\t\tchange () {\n\t\t\tthis.$store.commit('todo/addcount')\n\t\t}\n\t  }\n\t}\n\t</script>\t","slug":"vuex","published":1,"updated":"2019-01-30T11:50:19.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrj5gxbb000j5owd5wwlfplr","content":"<h1 id=\"Vuex\"><a href=\"#Vuex\" class=\"headerlink\" title=\"Vuex\"></a>Vuex</h1><hr>\n<h2 id=\"Vuex是什么？\"><a href=\"#Vuex是什么？\" class=\"headerlink\" title=\"Vuex是什么？\"></a>Vuex是什么？</h2><blockquote>\n<p><strong>引入官方提供的解释，vuex 是专门为 vue.js 设计的一套 状态管理模式 。什么是状态管理模式？说白了就是数据的集中管理。我们在使用 vue.js 时所用到的数据全部抽取出来放在一个state对象下，这样我们在任何组件内都可以访问得到该数据。下面我们通过一个例子来看下 vuex 是如何管理我们的数据的。</strong></p>\n</blockquote>\n<h3 id=\"首先先通过npm来安装一下vuex：\"><a href=\"#首先先通过npm来安装一下vuex：\" class=\"headerlink\" title=\"首先先通过npm来安装一下vuex：\"></a>首先先通过npm来安装一下vuex：</h3><pre><code>npm install vuex --save\n</code></pre><h2 id=\"state状态属性\"><a href=\"#state状态属性\" class=\"headerlink\" title=\"state状态属性\"></a>state状态属性</h2><h3 id=\"在项目src目录下新建一个store文件夹-该文件夹不是必须的，你也可以直接新建一个store-js，只要你引入的路径正确即可-，在该文件夹下新建一个-index-js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。\"><a href=\"#在项目src目录下新建一个store文件夹-该文件夹不是必须的，你也可以直接新建一个store-js，只要你引入的路径正确即可-，在该文件夹下新建一个-index-js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。\" class=\"headerlink\" title=\"在项目src目录下新建一个store文件夹(该文件夹不是必须的，你也可以直接新建一个store.js，只要你引入的路径正确即可)，在该文件夹下新建一个 index.js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。\"></a>在项目src目录下新建一个store文件夹(该文件夹不是必须的，你也可以直接新建一个store.js，只要你引入的路径正确即可)，在该文件夹下新建一个 index.js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。</h3><blockquote>\n<h4 id=\"store-index-js\"><a href=\"#store-index-js\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>import Vue from &#39;vue&#39;\nimport Vuex from &#39;vuex&#39;\nVue.use(Vuex)\nlet store = new Vuex.Store({\n    state: {  //要设置的全局访问的state对象\n        name: &quot;vuex&quot;\n    }\n})\n\nexport default store\n</code></pre><h3 id=\"为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main-js文件中\"><a href=\"#为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main-js文件中\" class=\"headerlink\" title=\"为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main.js文件中\"></a>为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main.js文件中</h3><blockquote>\n<h4 id=\"main-js\"><a href=\"#main-js\" class=\"headerlink\" title=\"main.js\"></a>main.js</h4></blockquote>\n<pre><code>import Vue from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\nimport &quot;./commcss/index.scss&quot;\nimport store from &#39;./store/index&#39;\nnew Vue({\n  el: &#39;#app&#39;,\n  render: h =&gt; h(App),\n  store // 全局注册\n})\n</code></pre><blockquote>\n<h4 id=\"App-vue\"><a href=\"#App-vue\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot;&gt;\n        {{name}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { mapState} from &#39;vuex&#39;\n/*\n *1.mapState 辅助函数\n *当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。\n *为了解决这个问题，我们可以使用 mapState 辅助函数帮助我们生成计算属性，让你少按几次键：\n */\nexport default {\n  computde: {\n    ...mapState([&#39;name&#39;])\n    }\n}\n&lt;/script&gt;\n</code></pre><h2 id=\"Getter-store的计算属性，例如对列表进行过滤\"><a href=\"#Getter-store的计算属性，例如对列表进行过滤\" class=\"headerlink\" title=\"Getter(store的计算属性，例如对列表进行过滤)\"></a>Getter(store的计算属性，例如对列表进行过滤)</h2><blockquote>\n<h4 id=\"store-index-js-1\"><a href=\"#store-index-js-1\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>state: {\n    count: 1,\n    arr: [\n      {\n        sex: &#39;男&#39;,\n        id: 1\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 2\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 3\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 4\n      },\n      {\n        sex: &#39;女&#39;,\n        id: 5\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 6\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 7\n      }\n    ]\n  },\ngetters: {\n    man (state) {\n      return state.arr.filter(item=&gt;{return item.sex===&#39;男&#39;})\n    }\n  },\n</code></pre><blockquote>\n<h4 id=\"App-vue-1\"><a href=\"#App-vue-1\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot;&gt;\n        &lt;ul&gt;\n            &lt;li v-for=&quot;(item,index) in man&quot; :key=&quot;item.id&quot;&gt;{{item.sex}}&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { mapGetters } from &#39;vuex&#39; //mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性：\nexport default {\n  computde: {\n    ...mapGetters([&#39;man&#39;])\n    }\n}\n&lt;/script&gt;\n</code></pre><h2 id=\"mutation-更新state的唯一方法\"><a href=\"#mutation-更新state的唯一方法\" class=\"headerlink\" title=\"mutation(更新state的唯一方法)\"></a>mutation(更新state的唯一方法)</h2><blockquote>\n<h4 id=\"store-index-js-2\"><a href=\"#store-index-js-2\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>mutation: {\n    change (state) {\n        state.name = &#39;vue&#39;\n    }\n}\n</code></pre><blockquote>\n<h4 id=\"App-vue-2\"><a href=\"#App-vue-2\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot; @click=&quot;change&quot;&gt;\n        {{name}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  method: {\n    change () {\n        this.$store.commit(&#39;change&#39;)\n    }\n  }\n}\n&lt;/script&gt;    \n</code></pre><h2 id=\"一条重要的原则就是要记住-mutation-必须是同步函数\"><a href=\"#一条重要的原则就是要记住-mutation-必须是同步函数\" class=\"headerlink\" title=\"一条重要的原则就是要记住 mutation 必须是同步函数\"></a>一条重要的原则就是要记住 mutation 必须是同步函数</h2><h3 id=\"原因：-为什么不能执行一步操作\"><a href=\"#原因：-为什么不能执行一步操作\" class=\"headerlink\" title=\"原因：(为什么不能执行一步操作)\"></a>原因：(为什么不能执行一步操作)</h3><blockquote>\n<p><strong>现在想象，我们正在 debug 一个 app 并且观察 devtool 中的 mutation 日志。每一条 mutation 被记录，devtools 都需要捕捉到前一状态和后一状态的快照。然而，在上面的例子中 mutation 中的异步函数中的回调让这不可能完成：因为当 mutation 触发的时候，回调函数还没有被调用，devtools 不知道什么时候回调函数实际上被调用——实质上任何在回调函数中进行的状态的改变都是不可追踪的。</strong></p>\n</blockquote>\n<h3 id=\"因此：【我们需要一个action来进行异步操作】\"><a href=\"#因此：【我们需要一个action来进行异步操作】\" class=\"headerlink\" title=\"因此：【我们需要一个action来进行异步操作】\"></a>因此：【我们需要一个action来进行异步操作】</h3><h2 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h2><h3 id=\"Action-类似于-mutation，不同在于：\"><a href=\"#Action-类似于-mutation，不同在于：\" class=\"headerlink\" title=\"Action 类似于 mutation，不同在于：\"></a>Action 类似于 mutation，不同在于：</h3><ul>\n<li><strong>Action 提交的是 mutation，而不是直接变更状态。</strong></li>\n<li><strong>Action 可以包含任意异步操作。</strong></li>\n</ul>\n<blockquote>\n<h4 id=\"store-index-js-3\"><a href=\"#store-index-js-3\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>state: {\n    count: 0\n},\nmutations: {\n    addcount (state) {\n      state.count++\n    }\n  },\nactions: {\n    getInfo (context) {\n      setTimeout(()=&gt;{\n        context.commit(&#39;addcount&#39;)\n      },2000)\n    }\n  }\n</code></pre><blockquote>\n<h4 id=\"App-vue-3\"><a href=\"#App-vue-3\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot; @click=&quot;change&quot;&gt;\n        {{count}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  computed: {\n    ...mapState([&#39;count&#39;])\n  },\n  method: {\n    change () {\n        this.$store.dispatch(&#39;getInfo&#39;)\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre><h6 id=\"乍一眼看上去感觉多此一举，我们直接分发-mutation-岂不更方便？实际上并非如此，还记得-mutation-必须同步执行这个限制么？Action-就不受约束！我们可以在-action-内部执行异步操作：\"><a href=\"#乍一眼看上去感觉多此一举，我们直接分发-mutation-岂不更方便？实际上并非如此，还记得-mutation-必须同步执行这个限制么？Action-就不受约束！我们可以在-action-内部执行异步操作：\" class=\"headerlink\" title=\"乍一眼看上去感觉多此一举，我们直接分发 mutation 岂不更方便？实际上并非如此，还记得 mutation 必须同步执行这个限制么？Action 就不受约束！我们可以在 action 内部执行异步操作：\"></a>乍一眼看上去感觉多此一举，我们直接分发 mutation 岂不更方便？实际上并非如此，还记得 mutation 必须同步执行这个限制么？Action 就不受约束！我们可以在 action 内部执行异步操作：</h6><h2 id=\"Module\"><a href=\"#Module\" class=\"headerlink\" title=\"Module\"></a>Module</h2><h3 id=\"由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store-对象就有可能变得相当臃肿。\"><a href=\"#由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store-对象就有可能变得相当臃肿。\" class=\"headerlink\" title=\"由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\"></a>由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。</h3><hr>\n<h4 id=\"为了解决以上问题，Vuex-允许我们将-store-分割成模块（module）。每个模块拥有自己的-state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\"><a href=\"#为了解决以上问题，Vuex-允许我们将-store-分割成模块（module）。每个模块拥有自己的-state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\" class=\"headerlink\" title=\"为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\"></a>为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：</h4><p>首先创建module/todo.js</p>\n<blockquote>\n<p><strong>module/todo.js</strong></p>\n</blockquote>\n<pre><code>export default {\n  namespaced: true,\n  state: {\n    count: 0\n  },\n  mutations: {\n    addcount (state) {\n      state.count++\n    }\n  },\n}\n</code></pre><blockquote>\n<h4 id=\"store-index-js-4\"><a href=\"#store-index-js-4\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>import todo from &quot;./modules/todo&quot;\n\nmodules: {\n    todo\n  }\n</code></pre><blockquote>\n<h4 id=\"App-vue-4\"><a href=\"#App-vue-4\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot; @click=&quot;change&quot;&gt;\n        {{count}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  computed: {\n    ...mapState(&#39;todo&#39;,[&#39;count&#39;])\n  },\n  method: {\n    change () {\n        this.$store.commit(&#39;todo/addcount&#39;)\n    }\n  }\n}\n&lt;/script&gt;    \n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vuex\"><a href=\"#Vuex\" class=\"headerlink\" title=\"Vuex\"></a>Vuex</h1><hr>\n<h2 id=\"Vuex是什么？\"><a href=\"#Vuex是什么？\" class=\"headerlink\" title=\"Vuex是什么？\"></a>Vuex是什么？</h2><blockquote>\n<p><strong>引入官方提供的解释，vuex 是专门为 vue.js 设计的一套 状态管理模式 。什么是状态管理模式？说白了就是数据的集中管理。我们在使用 vue.js 时所用到的数据全部抽取出来放在一个state对象下，这样我们在任何组件内都可以访问得到该数据。下面我们通过一个例子来看下 vuex 是如何管理我们的数据的。</strong></p>\n</blockquote>\n<h3 id=\"首先先通过npm来安装一下vuex：\"><a href=\"#首先先通过npm来安装一下vuex：\" class=\"headerlink\" title=\"首先先通过npm来安装一下vuex：\"></a>首先先通过npm来安装一下vuex：</h3><pre><code>npm install vuex --save\n</code></pre><h2 id=\"state状态属性\"><a href=\"#state状态属性\" class=\"headerlink\" title=\"state状态属性\"></a>state状态属性</h2><h3 id=\"在项目src目录下新建一个store文件夹-该文件夹不是必须的，你也可以直接新建一个store-js，只要你引入的路径正确即可-，在该文件夹下新建一个-index-js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。\"><a href=\"#在项目src目录下新建一个store文件夹-该文件夹不是必须的，你也可以直接新建一个store-js，只要你引入的路径正确即可-，在该文件夹下新建一个-index-js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。\" class=\"headerlink\" title=\"在项目src目录下新建一个store文件夹(该文件夹不是必须的，你也可以直接新建一个store.js，只要你引入的路径正确即可)，在该文件夹下新建一个 index.js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。\"></a>在项目src目录下新建一个store文件夹(该文件夹不是必须的，你也可以直接新建一个store.js，只要你引入的路径正确即可)，在该文件夹下新建一个 index.js。store文件夹主要是单独管理我们的数据状态，包括行为触发等等。</h3><blockquote>\n<h4 id=\"store-index-js\"><a href=\"#store-index-js\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>import Vue from &#39;vue&#39;\nimport Vuex from &#39;vuex&#39;\nVue.use(Vuex)\nlet store = new Vuex.Store({\n    state: {  //要设置的全局访问的state对象\n        name: &quot;vuex&quot;\n    }\n})\n\nexport default store\n</code></pre><h3 id=\"为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main-js文件中\"><a href=\"#为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main-js文件中\" class=\"headerlink\" title=\"为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main.js文件中\"></a>为了能在所有的组件中共享我们的数据，我们有必要给根实例下注入我们的store对象，所以我们在main.js文件中</h3><blockquote>\n<h4 id=\"main-js\"><a href=\"#main-js\" class=\"headerlink\" title=\"main.js\"></a>main.js</h4></blockquote>\n<pre><code>import Vue from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\nimport &quot;./commcss/index.scss&quot;\nimport store from &#39;./store/index&#39;\nnew Vue({\n  el: &#39;#app&#39;,\n  render: h =&gt; h(App),\n  store // 全局注册\n})\n</code></pre><blockquote>\n<h4 id=\"App-vue\"><a href=\"#App-vue\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot;&gt;\n        {{name}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { mapState} from &#39;vuex&#39;\n/*\n *1.mapState 辅助函数\n *当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。\n *为了解决这个问题，我们可以使用 mapState 辅助函数帮助我们生成计算属性，让你少按几次键：\n */\nexport default {\n  computde: {\n    ...mapState([&#39;name&#39;])\n    }\n}\n&lt;/script&gt;\n</code></pre><h2 id=\"Getter-store的计算属性，例如对列表进行过滤\"><a href=\"#Getter-store的计算属性，例如对列表进行过滤\" class=\"headerlink\" title=\"Getter(store的计算属性，例如对列表进行过滤)\"></a>Getter(store的计算属性，例如对列表进行过滤)</h2><blockquote>\n<h4 id=\"store-index-js-1\"><a href=\"#store-index-js-1\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>state: {\n    count: 1,\n    arr: [\n      {\n        sex: &#39;男&#39;,\n        id: 1\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 2\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 3\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 4\n      },\n      {\n        sex: &#39;女&#39;,\n        id: 5\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 6\n      },\n      {\n        sex: &#39;男&#39;,\n        id: 7\n      }\n    ]\n  },\ngetters: {\n    man (state) {\n      return state.arr.filter(item=&gt;{return item.sex===&#39;男&#39;})\n    }\n  },\n</code></pre><blockquote>\n<h4 id=\"App-vue-1\"><a href=\"#App-vue-1\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot;&gt;\n        &lt;ul&gt;\n            &lt;li v-for=&quot;(item,index) in man&quot; :key=&quot;item.id&quot;&gt;{{item.sex}}&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { mapGetters } from &#39;vuex&#39; //mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性：\nexport default {\n  computde: {\n    ...mapGetters([&#39;man&#39;])\n    }\n}\n&lt;/script&gt;\n</code></pre><h2 id=\"mutation-更新state的唯一方法\"><a href=\"#mutation-更新state的唯一方法\" class=\"headerlink\" title=\"mutation(更新state的唯一方法)\"></a>mutation(更新state的唯一方法)</h2><blockquote>\n<h4 id=\"store-index-js-2\"><a href=\"#store-index-js-2\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>mutation: {\n    change (state) {\n        state.name = &#39;vue&#39;\n    }\n}\n</code></pre><blockquote>\n<h4 id=\"App-vue-2\"><a href=\"#App-vue-2\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot; @click=&quot;change&quot;&gt;\n        {{name}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  method: {\n    change () {\n        this.$store.commit(&#39;change&#39;)\n    }\n  }\n}\n&lt;/script&gt;    \n</code></pre><h2 id=\"一条重要的原则就是要记住-mutation-必须是同步函数\"><a href=\"#一条重要的原则就是要记住-mutation-必须是同步函数\" class=\"headerlink\" title=\"一条重要的原则就是要记住 mutation 必须是同步函数\"></a>一条重要的原则就是要记住 mutation 必须是同步函数</h2><h3 id=\"原因：-为什么不能执行一步操作\"><a href=\"#原因：-为什么不能执行一步操作\" class=\"headerlink\" title=\"原因：(为什么不能执行一步操作)\"></a>原因：(为什么不能执行一步操作)</h3><blockquote>\n<p><strong>现在想象，我们正在 debug 一个 app 并且观察 devtool 中的 mutation 日志。每一条 mutation 被记录，devtools 都需要捕捉到前一状态和后一状态的快照。然而，在上面的例子中 mutation 中的异步函数中的回调让这不可能完成：因为当 mutation 触发的时候，回调函数还没有被调用，devtools 不知道什么时候回调函数实际上被调用——实质上任何在回调函数中进行的状态的改变都是不可追踪的。</strong></p>\n</blockquote>\n<h3 id=\"因此：【我们需要一个action来进行异步操作】\"><a href=\"#因此：【我们需要一个action来进行异步操作】\" class=\"headerlink\" title=\"因此：【我们需要一个action来进行异步操作】\"></a>因此：【我们需要一个action来进行异步操作】</h3><h2 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h2><h3 id=\"Action-类似于-mutation，不同在于：\"><a href=\"#Action-类似于-mutation，不同在于：\" class=\"headerlink\" title=\"Action 类似于 mutation，不同在于：\"></a>Action 类似于 mutation，不同在于：</h3><ul>\n<li><strong>Action 提交的是 mutation，而不是直接变更状态。</strong></li>\n<li><strong>Action 可以包含任意异步操作。</strong></li>\n</ul>\n<blockquote>\n<h4 id=\"store-index-js-3\"><a href=\"#store-index-js-3\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>state: {\n    count: 0\n},\nmutations: {\n    addcount (state) {\n      state.count++\n    }\n  },\nactions: {\n    getInfo (context) {\n      setTimeout(()=&gt;{\n        context.commit(&#39;addcount&#39;)\n      },2000)\n    }\n  }\n</code></pre><blockquote>\n<h4 id=\"App-vue-3\"><a href=\"#App-vue-3\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot; @click=&quot;change&quot;&gt;\n        {{count}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  computed: {\n    ...mapState([&#39;count&#39;])\n  },\n  method: {\n    change () {\n        this.$store.dispatch(&#39;getInfo&#39;)\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre><h6 id=\"乍一眼看上去感觉多此一举，我们直接分发-mutation-岂不更方便？实际上并非如此，还记得-mutation-必须同步执行这个限制么？Action-就不受约束！我们可以在-action-内部执行异步操作：\"><a href=\"#乍一眼看上去感觉多此一举，我们直接分发-mutation-岂不更方便？实际上并非如此，还记得-mutation-必须同步执行这个限制么？Action-就不受约束！我们可以在-action-内部执行异步操作：\" class=\"headerlink\" title=\"乍一眼看上去感觉多此一举，我们直接分发 mutation 岂不更方便？实际上并非如此，还记得 mutation 必须同步执行这个限制么？Action 就不受约束！我们可以在 action 内部执行异步操作：\"></a>乍一眼看上去感觉多此一举，我们直接分发 mutation 岂不更方便？实际上并非如此，还记得 mutation 必须同步执行这个限制么？Action 就不受约束！我们可以在 action 内部执行异步操作：</h6><h2 id=\"Module\"><a href=\"#Module\" class=\"headerlink\" title=\"Module\"></a>Module</h2><h3 id=\"由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store-对象就有可能变得相当臃肿。\"><a href=\"#由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store-对象就有可能变得相当臃肿。\" class=\"headerlink\" title=\"由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\"></a>由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。</h3><hr>\n<h4 id=\"为了解决以上问题，Vuex-允许我们将-store-分割成模块（module）。每个模块拥有自己的-state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\"><a href=\"#为了解决以上问题，Vuex-允许我们将-store-分割成模块（module）。每个模块拥有自己的-state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\" class=\"headerlink\" title=\"为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\"></a>为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：</h4><p>首先创建module/todo.js</p>\n<blockquote>\n<p><strong>module/todo.js</strong></p>\n</blockquote>\n<pre><code>export default {\n  namespaced: true,\n  state: {\n    count: 0\n  },\n  mutations: {\n    addcount (state) {\n      state.count++\n    }\n  },\n}\n</code></pre><blockquote>\n<h4 id=\"store-index-js-4\"><a href=\"#store-index-js-4\" class=\"headerlink\" title=\"store/index.js\"></a>store/index.js</h4></blockquote>\n<pre><code>import todo from &quot;./modules/todo&quot;\n\nmodules: {\n    todo\n  }\n</code></pre><blockquote>\n<h4 id=\"App-vue-4\"><a href=\"#App-vue-4\" class=\"headerlink\" title=\"App.vue\"></a>App.vue</h4></blockquote>\n<pre><code>&lt;template&gt;\n      &lt;div class=&quot;app&quot; @click=&quot;change&quot;&gt;\n        {{count}}\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  computed: {\n    ...mapState(&#39;todo&#39;,[&#39;count&#39;])\n  },\n  method: {\n    change () {\n        this.$store.commit(&#39;todo/addcount&#39;)\n    }\n  }\n}\n&lt;/script&gt;    \n</code></pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjrj5gxag00005owdlyniah1d","tag_id":"cjrj5gxaq00045owdqy2w4ao3","_id":"cjrj5gxb3000e5owdtwz3vbil"},{"post_id":"cjrj5gxag00005owdlyniah1d","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxb5000g5owd2cmzcm3f"},{"post_id":"cjrj5gxat00055owd0rbhlazw","tag_id":"cjrj5gxb1000c5owdujgsx4cg","_id":"cjrj5gxbe000m5owdsipo5vrd"},{"post_id":"cjrj5gxat00055owd0rbhlazw","tag_id":"cjrj5gxb5000h5owd4qyc9uzu","_id":"cjrj5gxbe000n5owdu5dnfxf8"},{"post_id":"cjrj5gxat00055owd0rbhlazw","tag_id":"cjrj5gxbc000k5owd7x81xfr2","_id":"cjrj5gxbg000p5owd8eg6ynfe"},{"post_id":"cjrj5gxav00075owdx3pg6156","tag_id":"cjrj5gxbd000l5owdmfdt5l7n","_id":"cjrj5gxbi000t5owdwhymq2ag"},{"post_id":"cjrj5gxav00075owdx3pg6156","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbi000u5owd5nr4duvc"},{"post_id":"cjrj5gxav00075owdx3pg6156","tag_id":"cjrj5gxbg000q5owd75jf75am","_id":"cjrj5gxbj000w5owdanqnwveu"},{"post_id":"cjrj5gxav00075owdx3pg6156","tag_id":"cjrj5gxbh000r5owd3b4w68y0","_id":"cjrj5gxbj000x5owdiphrcxv1"},{"post_id":"cjrj5gxaw00085owd1pnuabaq","tag_id":"cjrj5gxbh000s5owdyhox9dlz","_id":"cjrj5gxbk000z5owdqjy6ig34"},{"post_id":"cjrj5gxaw00085owd1pnuabaq","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbl00105owd2sjwiclt"},{"post_id":"cjrj5gxay000a5owdbcwpjfug","tag_id":"cjrj5gxbk000y5owdcnepigg6","_id":"cjrj5gxbm00135owdih8sjgl3"},{"post_id":"cjrj5gxay000a5owdbcwpjfug","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbm00145owdqdmtk0xw"},{"post_id":"cjrj5gxay000a5owdbcwpjfug","tag_id":"cjrj5gxbl00115owdb03j3i2h","_id":"cjrj5gxbn00165owdq1goxu3g"},{"post_id":"cjrj5gxb0000b5owdbatxg1qx","tag_id":"cjrj5gxbm00125owdeq7o9hvn","_id":"cjrj5gxbq001a5owdlhzteyqx"},{"post_id":"cjrj5gxb0000b5owdbatxg1qx","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbq001b5owd4a300etd"},{"post_id":"cjrj5gxb0000b5owdbatxg1qx","tag_id":"cjrj5gxbn00155owd70xsx5sn","_id":"cjrj5gxbr001d5owdgb55ek2o"},{"post_id":"cjrj5gxb0000b5owdbatxg1qx","tag_id":"cjrj5gxbo00175owdmo4lwwgd","_id":"cjrj5gxbr001e5owdl1dbx35f"},{"post_id":"cjrj5gxb0000b5owdbatxg1qx","tag_id":"cjrj5gxbo00185owd3q5cirlj","_id":"cjrj5gxbs001g5owdxoknpppe"},{"post_id":"cjrj5gxb2000d5owdfpzbnjcz","tag_id":"cjrj5gxbp00195owds8osavc6","_id":"cjrj5gxbs001h5owddfzucukj"},{"post_id":"cjrj5gxb2000d5owdfpzbnjcz","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbt001j5owd9ethu417"},{"post_id":"cjrj5gxb4000f5owd9eel6q3s","tag_id":"cjrj5gxbd000l5owdmfdt5l7n","_id":"cjrj5gxbt001k5owdow68mjzs"},{"post_id":"cjrj5gxb4000f5owd9eel6q3s","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbt001m5owdu0cpinb3"},{"post_id":"cjrj5gxb4000f5owd9eel6q3s","tag_id":"cjrj5gxbr001f5owdzt4zpuvv","_id":"cjrj5gxbu001n5owddrey3ko8"},{"post_id":"cjrj5gxb5000i5owd6h70w86m","tag_id":"cjrj5gxbd000l5owdmfdt5l7n","_id":"cjrj5gxbu001p5owd78dx389j"},{"post_id":"cjrj5gxb5000i5owd6h70w86m","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbv001q5owdc55miaes"},{"post_id":"cjrj5gxb5000i5owd6h70w86m","tag_id":"cjrj5gxbt001l5owd3ibdomdi","_id":"cjrj5gxbv001s5owde4o579p0"},{"post_id":"cjrj5gxbb000j5owd5wwlfplr","tag_id":"cjrj5gxbd000l5owdmfdt5l7n","_id":"cjrj5gxbv001t5owd7nv52y2f"},{"post_id":"cjrj5gxbb000j5owd5wwlfplr","tag_id":"cjrj5gxbv001r5owd1on6nrzl","_id":"cjrj5gxbw001u5owdnaet53q3"},{"post_id":"cjrj5gxbb000j5owd5wwlfplr","tag_id":"cjrj5gxax00095owdi8h0xias","_id":"cjrj5gxbw001v5owdvzl7h87e"}],"Tag":[{"name":"vue-router","_id":"cjrj5gxaq00045owdqy2w4ao3"},{"name":"vue","_id":"cjrj5gxax00095owdi8h0xias"},{"name":"css","_id":"cjrj5gxb1000c5owdujgsx4cg"},{"name":"scss","_id":"cjrj5gxb5000h5owd4qyc9uzu"},{"name":"sass","_id":"cjrj5gxbc000k5owd7x81xfr2"},{"name":"js","_id":"cjrj5gxbd000l5owdmfdt5l7n"},{"name":"vue-cli","_id":"cjrj5gxbg000q5owd75jf75am"},{"name":"px2rem","_id":"cjrj5gxbh000r5owd3b4w68y0"},{"name":"transfrom","_id":"cjrj5gxbh000s5owdyhox9dlz"},{"name":"vue构造器","_id":"cjrj5gxbk000y5owdcnepigg6"},{"name":"vue extend","_id":"cjrj5gxbl00115owdb03j3i2h"},{"name":"vue全局组件","_id":"cjrj5gxbm00125owdeq7o9hvn"},{"name":"vue指令","_id":"cjrj5gxbn00155owd70xsx5sn"},{"name":"vue过滤器","_id":"cjrj5gxbo00175owdmo4lwwgd"},{"name":"directive","_id":"cjrj5gxbo00185owd3q5cirlj"},{"name":"dom","_id":"cjrj5gxbp00195owds8osavc6"},{"name":"slot","_id":"cjrj5gxbr001f5owdzt4zpuvv"},{"name":"vue概述","_id":"cjrj5gxbt001l5owd3ibdomdi"},{"name":"vuex","_id":"cjrj5gxbv001r5owd1on6nrzl"}]}}